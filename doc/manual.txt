The Mutt E-Mail Client

Michael Elkins

   <[1]mmee@@ccss..hhmmcc..eedduu>

   version 1.7.2 (2016-11-26)

   _A_b_s_t_r_a_c_t

   "All mail clients suck. This one just sucks less." -- me, circa 1995
     __________________________________________________________________

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [2]11..  IInnttrroodduuccttiioonn

        [3]11..  MMuutttt  HHoommee  PPaaggee
        [4]22..  MMaaiilliinngg  LLiissttss
        [5]33..  GGeettttiinngg  MMuutttt
        [6]44..  MMuutttt  OOnnlliinnee  RReessoouurrcceess
        [7]55..  CCoonnttrriibbuuttiinngg  ttoo  MMuutttt
        [8]66..  TTyyppooggrraapphhiiccaall  CCoonnvveennttiioonnss
        [9]77..  CCooppyyrriigghhtt

   [10]22..  GGeettttiinngg  SSttaarrtteedd

        [11]11..  CCoorree  CCoonncceeppttss
        [12]22..  SSccrreeeennss  aanndd  MMeennuuss

              [13]22..11..  IInnddeexx
              [14]22..22..  PPaaggeerr
              [15]22..33..  FFiillee  BBrroowwsseerr
              [16]22..44..  SSiiddeebbaarr
              [17]22..55..  HHeellpp
              [18]22..66..  CCoommppoossee  MMeennuu
              [19]22..77..  AAlliiaass  MMeennuu
              [20]22..88..  AAttttaacchhmmeenntt  MMeennuu

        [21]33..  MMoovviinngg  AArroouunndd  iinn  MMeennuuss
        [22]44..  EEddiittiinngg  IInnppuutt  FFiieellddss

              [23]44..11..  IInnttrroodduuccttiioonn
              [24]44..22..  HHiissttoorryy

        [25]55..  RReeaaddiinngg  MMaaiill

              [26]55..11..  TThhee  MMeessssaaggee  IInnddeexx
              [27]55..22..  TThhee  PPaaggeerr
              [28]55..33..  TThhrreeaaddeedd  MMooddee
              [29]55..44..  MMiisscceellllaanneeoouuss  FFuunnccttiioonnss

        [30]66..  SSeennddiinngg  MMaaiill

              [31]66..11..  IInnttrroodduuccttiioonn
              [32]66..22..  EEddiittiinngg  tthhee  MMeessssaaggee  HHeeaaddeerr
              [33]66..33..  SSeennddiinngg  CCrryyppttooggrraapphhiiccaallllyy  SSiiggnneedd//EEnnccrryypptteedd  MMeessssaaggeess
              [34]66..44..  SSeennddiinngg  FFoorrmmaatt==FFlloowweedd  MMeessssaaggeess

        [35]77..  FFoorrwwaarrddiinngg  aanndd  BBoouunncciinngg  MMaaiill
        [36]88..  PPoossttppoonniinngg  MMaaiill

   [37]33..  CCoonnffiigguurraattiioonn

        [38]11..  LLooccaattiioonn  ooff  IInniittiiaalliizzaattiioonn  FFiilleess
        [39]22..  SSyynnttaaxx  ooff  IInniittiiaalliizzaattiioonn  FFiilleess
        [40]33..  AAddddrreessss  GGrroouuppss
        [41]44..  DDeeffiinniinngg//UUssiinngg  AAlliiaasseess
        [42]55..  CChhaannggiinngg  tthhee  DDeeffaauulltt  KKeeyy  BBiinnddiinnggss
        [43]66..  DDeeffiinniinngg  AAlliiaasseess  ffoorr  CChhaarraacctteerr  SSeettss
        [44]77..  SSeettttiinngg  VVaarriiaabblleess  BBaasseedd  UUppoonn  MMaaiillbbooxx
        [45]88..  KKeeyybbooaarrdd  MMaaccrrooss
        [46]99..  UUssiinngg  CCoolloorr  aanndd  MMoonnoo  VViiddeeoo  AAttttrriibbuutteess
        [47]1100..  MMeessssaaggee  HHeeaaddeerr  DDiissppllaayy

              [48]1100..11..  HHeeaaddeerr  DDiissppllaayy
              [49]1100..22..  SSeelleeccttiinngg  HHeeaaddeerrss
              [50]1100..33..  OOrrddeerriinngg  DDiissppllaayyeedd  HHeeaaddeerrss

        [51]1111..  AAlltteerrnnaattiivvee  AAddddrreesssseess
        [52]1122..  MMaaiilliinngg  LLiissttss
        [53]1133..  UUssiinngg  MMuullttiippllee  SSppooooll  MMaaiillbbooxxeess
        [54]1144..  MMoonniittoorriinngg  IInnccoommiinngg  MMaaiill
        [55]1155..  UUsseerr--DDeeffiinneedd  HHeeaaddeerrss
        [56]1166..  SSppeecciiffyy  DDeeffaauulltt  SSaavvee  MMaaiillbbooxx
        [57]1177..  SSppeecciiffyy  DDeeffaauulltt  FFcccc::  MMaaiillbbooxx  WWhheenn  CCoommppoossiinngg
        [58]1188..  SSppeecciiffyy  DDeeffaauulltt  SSaavvee  FFiilleennaammee  aanndd  DDeeffaauulltt  FFcccc::  MMaaiillbbooxx  aatt
                OOnnccee

        [59]1199..  CChhaannggee  SSeettttiinnggss  BBaasseedd  UUppoonn  MMeessssaaggee  RReecciippiieennttss
        [60]2200..  CChhaannggee  SSeettttiinnggss  BBeeffoorree  FFoorrmmaattttiinngg  aa  MMeessssaaggee
        [61]2211..  CChhoooossiinngg  tthhee  CCrryyppttooggrraapphhiicc  KKeeyy  ooff  tthhee  RReecciippiieenntt
        [62]2222..  AAddddiinngg  KKeeyy  SSeeqquueenncceess  ttoo  tthhee  KKeeyybbooaarrdd  BBuuffffeerr
        [63]2233..  EExxeeccuuttiinngg  FFuunnccttiioonnss
        [64]2244..  MMeessssaaggee  SSccoorriinngg
        [65]2255..  SSppaamm  DDeetteeccttiioonn
        [66]2266..  SSeettttiinngg  aanndd  QQuueerryyiinngg  VVaarriiaabblleess

              [67]2266..11..  VVaarriiaabbllee  TTyyppeess
              [68]2266..22..  CCoommmmaannddss
              [69]2266..33..  UUsseerr--DDeeffiinneedd  VVaarriiaabblleess
              [70]2266..44..  TTyyppee  CCoonnvveerrssiioonnss

        [71]2277..  RReeaaddiinngg  IInniittiiaalliizzaattiioonn  CCoommmmaannddss  FFrroomm  AAnnootthheerr  FFiillee
        [72]2288..  RReemmoovviinngg  HHooookkss
        [73]2299..  FFoorrmmaatt  SSttrriinnggss

              [74]2299..11..  BBaassiicc  uussaaggee
              [75]2299..22..  CCoonnddiittiioonnaallss
              [76]2299..33..  FFiilltteerrss
              [77]2299..44..  PPaaddddiinngg

        [78]3300..  CCoonnttrrooll  aalllloowweedd  hheeaaddeerr  ffiieellddss  iinn  aa  mmaaiillttoo::  UURRLL

   [79]44..  AAddvvaanncceedd  UUssaaggee

        [80]11..  CChhaarraacctteerr  SSeett  HHaannddlliinngg
        [81]22..  RReegguullaarr  EExxpprreessssiioonnss
        [82]33..  PPaatttteerrnnss::  SSeeaarrcchhiinngg,,  LLiimmiittiinngg  aanndd  TTaaggggiinngg

              [83]33..11..  PPaatttteerrnn  MMooddiiffiieerr
              [84]33..22..  SSiimmppllee  SSeeaarrcchheess
              [85]33..33..  NNeessttiinngg  aanndd  BBoooolleeaann  OOppeerraattoorrss
              [86]33..44..  SSeeaarrcchhiinngg  bbyy  DDaattee

        [87]44..  UUssiinngg  TTaaggss
        [88]55..  UUssiinngg  HHooookkss

              [89]55..11..  MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss
              [90]55..22..  MMaaiillbbooxx  MMaattcchhiinngg  iinn  HHooookkss

        [91]66..  EExxtteerrnnaall  AAddddrreessss  QQuueerriieess
        [92]77..  MMaaiillbbooxx  FFoorrmmaattss
        [93]88..  MMaaiillbbooxx  SShhoorrttccuuttss
        [94]99..  HHaannddlliinngg  MMaaiilliinngg  LLiissttss
        [95]1100..  NNeeww  MMaaiill  DDeetteeccttiioonn

              [96]1100..11..  HHooww  NNeeww  MMaaiill  DDeetteeccttiioonn  WWoorrkkss
              [97]1100..22..  PPoolllliinngg  FFoorr  NNeeww  MMaaiill
              [98]1100..33..  CCaallccuullaattiinngg  MMaaiillbbooxx  MMeessssaaggee  CCoouunnttss

        [99]1111..  EEddiittiinngg  TThhrreeaaddss

              [100]1111..11..  LLiinnkkiinngg  TThhrreeaaddss
              [101]1111..22..  BBrreeaakkiinngg  TThhrreeaaddss

        [102]1122..  DDeelliivveerryy  SSttaattuuss  NNoottiiffiiccaattiioonn  ((DDSSNN))  SSuuppppoorrtt
        [103]1133..  SSttaarrtt  aa  WWWWWW  BBrroowwsseerr  oonn  UURRLLss
        [104]1144..  MMiisscceellllaannyy

   [105]55..  MMuutttt''ss  MMIIMMEE  SSuuppppoorrtt

        [106]11..  UUssiinngg  MMIIMMEE  iinn  MMuutttt

              [107]11..11..  MMIIMMEE  OOvveerrvviieeww
              [108]11..22..  VViieewwiinngg  MMIIMMEE  MMeessssaaggeess  iinn  tthhee  PPaaggeerr
              [109]11..33..  TThhee  AAttttaacchhmmeenntt  MMeennuu
              [110]11..44..  TThhee  CCoommppoossee  MMeennuu

        [111]22..  MMIIMMEE  TTyyppee  CCoonnffiigguurraattiioonn  wwiitthh  mmiimmee..ttyyppeess
        [112]33..  MMIIMMEE  VViieewweerr  CCoonnffiigguurraattiioonn  wwiitthh  MMaaiillccaapp

              [113]33..11..  TThhee  BBaassiiccss  ooff  tthhee  MMaaiillccaapp  FFiillee
              [114]33..22..  SSeeccuurree  UUssee  ooff  MMaaiillccaapp
              [115]33..33..  AAddvvaanncceedd  MMaaiillccaapp  UUssaaggee
              [116]33..44..  EExxaammppllee  MMaaiillccaapp  FFiilleess

        [117]44..  MMIIMMEE  AAuuttoovviieeww
        [118]55..  MMIIMMEE  MMuullttiippaarrtt//AAlltteerrnnaattiivvee
        [119]66..  AAttttaacchhmmeenntt  SSeeaarrcchhiinngg  aanndd  CCoouunnttiinngg
        [120]77..  MMIIMMEE  LLooookkuupp

   [121]66..  OOppttiioonnaall  FFeeaattuurreess

        [122]11..  GGeenneerraall  NNootteess

              [123]11..11..  EEnnaabblliinngg//DDiissaabblliinngg  FFeeaattuurreess
              [124]11..22..  UURRLL  SSyynnttaaxx

        [125]22..  SSSSLL//TTLLSS  SSuuppppoorrtt
        [126]33..  PPOOPP33  SSuuppppoorrtt
        [127]44..  IIMMAAPP  SSuuppppoorrtt

              [128]44..11..  TThhee  IIMMAAPP  FFoollddeerr  BBrroowwsseerr
              [129]44..22..  AAuutthheennttiiccaattiioonn

        [130]55..  SSMMTTPP  SSuuppppoorrtt
        [131]66..  MMaannaaggiinngg  MMuullttiippllee  AAccccoouunnttss
        [132]77..  LLooccaall  CCaacchhiinngg

              [133]77..11..  HHeeaaddeerr  CCaacchhiinngg
              [134]77..22..  BBooddyy  CCaacchhiinngg
              [135]77..33..  CCaacchhee  DDiirreeccttoorriieess
              [136]77..44..  MMaaiinntteennaannccee

        [137]88..  EExxaacctt  AAddddrreessss  GGeenneerraattiioonn
        [138]99..  SSeennddiinngg  AAnnoonnyymmoouuss  MMeessssaaggeess  vviiaa  MMiixxmmaasstteerr
        [139]1100..  SSiiddeebbaarr

              [140]1100..11..  IInnttrroodduuccttiioonn
              [141]1100..22..  VVaarriiaabblleess
              [142]1100..33..  FFuunnccttiioonnss
              [143]1100..44..  CCoommmmaannddss
              [144]1100..55..  CCoolloorrss
              [145]1100..66..  SSoorrtt
              [146]1100..77..  SSeeee  AAllssoo

   [147]77..  SSeeccuurriittyy  CCoonnssiiddeerraattiioonnss

        [148]11..  PPaasssswwoorrddss
        [149]22..  TTeemmppoorraarryy  FFiilleess
        [150]33..  IInnffoorrmmaattiioonn  LLeeaakkss

              [151]33..11..  MMeessssaaggee--IIdd::  hheeaaddeerrss
              [152]33..22..  mmaaiillttoo::--ssttyyllee  LLiinnkkss

        [153]44..  EExxtteerrnnaall  AApppplliiccaattiioonnss

   [154]88..  PPeerrffoorrmmaannccee  TTuunniinngg

        [155]11..  RReeaaddiinngg  aanndd  WWrriittiinngg  MMaaiillbbooxxeess
        [156]22..  RReeaaddiinngg  MMeessssaaggeess  ffrroomm  RReemmoottee  FFoollddeerrss
        [157]33..  SSeeaarrcchhiinngg  aanndd  LLiimmiittiinngg

   [158]99..  RReeffeerreennccee

        [159]11..  CCoommmmaanndd--LLiinnee  OOppttiioonnss
        [160]22..  CCoonnffiigguurraattiioonn  CCoommmmaannddss
        [161]33..  CCoonnffiigguurraattiioonn  VVaarriiaabblleess

              [162]33..11..  aabboorrtt__nnoossuubbjjeecctt
              [163]33..22..  aabboorrtt__uunnmmooddiiffiieedd
              [164]33..33..  aalliiaass__ffiillee
              [165]33..44..  aalliiaass__ffoorrmmaatt
              [166]33..55..  aallllooww__88bbiitt
              [167]33..66..  aallllooww__aannssii
              [168]33..77..  aarrrrooww__ccuurrssoorr
              [169]33..88..  aasscciiii__cchhaarrss
              [170]33..99..  aasskkbbcccc
              [171]33..1100..  aasskkcccc
              [172]33..1111..  aassssuummeedd__cchhaarrsseett
              [173]33..1122..  aattttaacchh__cchhaarrsseett
              [174]33..1133..  aattttaacchh__ffoorrmmaatt
              [175]33..1144..  aattttaacchh__sseepp
              [176]33..1155..  aattttaacchh__sspplliitt
              [177]33..1166..  aattttrriibbuuttiioonn
              [178]33..1177..  aauuttoo__ttaagg
              [179]33..1188..  aauuttooeeddiitt
              [180]33..1199..  bbeeeepp
              [181]33..2200..  bbeeeepp__nneeww
              [182]33..2211..  bboouunnccee
              [183]33..2222..  bboouunnccee__ddeelliivveerreedd
              [184]33..2233..  bbrraaiillllee__ffrriieennddllyy
              [185]33..2244..  cceerrttiiffiiccaattee__ffiillee
              [186]33..2255..  cchhaarrsseett
              [187]33..2266..  cchheecckk__mmbbooxx__ssiizzee
              [188]33..2277..  cchheecckk__nneeww
              [189]33..2288..  ccoollllaappssee__uunnrreeaadd
              [190]33..2299..  ccoommppoossee__ffoorrmmaatt
              [191]33..3300..  ccoonnffiigg__cchhaarrsseett
              [192]33..3311..  ccoonnffiirrmmaappppeenndd
              [193]33..3322..  ccoonnffiirrmmccrreeaattee
              [194]33..3333..  ccoonnnneecctt__ttiimmeeoouutt
              [195]33..3344..  ccoonntteenntt__ttyyppee
              [196]33..3355..  ccooppyy
              [197]33..3366..  ccrryypptt__aauuttooeennccrryypptt
              [198]33..3377..  ccrryypptt__aauuttooppggpp
              [199]33..3388..  ccrryypptt__aauuttoossiiggnn
              [200]33..3399..  ccrryypptt__aauuttoossmmiimmee
              [201]33..4400..  ccrryypptt__ccoonnffiirrmmhhooookk
              [202]33..4411..  ccrryypptt__ooppppoorrttuunniissttiicc__eennccrryypptt
              [203]33..4422..  ccrryypptt__rreeppllyyeennccrryypptt
              [204]33..4433..  ccrryypptt__rreeppllyyssiiggnn
              [205]33..4444..  ccrryypptt__rreeppllyyssiiggnneennccrryypptteedd
              [206]33..4455..  ccrryypptt__ttiimmeessttaammpp
              [207]33..4466..  ccrryypptt__uussee__ggppggmmee
              [208]33..4477..  ccrryypptt__uussee__ppkkaa
              [209]33..4488..  ccrryypptt__vveerriiffyy__ssiigg
              [210]33..4499..  ddaattee__ffoorrmmaatt
              [211]33..5500..  ddeeffaauulltt__hhooookk
              [212]33..5511..  ddeelleettee
              [213]33..5522..  ddeelleettee__uunnttaagg
              [214]33..5533..  ddiiggeesstt__ccoollllaappssee
              [215]33..5544..  ddiissppllaayy__ffiilltteerr
              [216]33..5555..  ddoottlloocckk__pprrooggrraamm
              [217]33..5566..  ddssnn__nnoottiiffyy
              [218]33..5577..  ddssnn__rreettuurrnn
              [219]33..5588..  dduupplliiccaattee__tthhrreeaaddss
              [220]33..5599..  eeddiitt__hheeaaddeerrss
              [221]33..6600..  eeddiittoorr
              [222]33..6611..  eennccooddee__ffrroomm
              [223]33..6622..  eennttrrooppyy__ffiillee
              [224]33..6633..  eennvveellooppee__ffrroomm__aaddddrreessss
              [225]33..6644..  eessccaappee
              [226]33..6655..  ffaasstt__rreeppllyy
              [227]33..6666..  ffcccc__aattttaacchh
              [228]33..6677..  ffcccc__cclleeaarr
              [229]33..6688..  ffoollddeerr
              [230]33..6699..  ffoollddeerr__ffoorrmmaatt
              [231]33..7700..  ffoolllloowwuupp__ttoo
              [232]33..7711..  ffoorrccee__nnaammee
              [233]33..7722..  ffoorrwwaarrdd__ddeeccooddee
              [234]33..7733..  ffoorrwwaarrdd__ddeeccrryypptt
              [235]33..7744..  ffoorrwwaarrdd__eeddiitt
              [236]33..7755..  ffoorrwwaarrdd__ffoorrmmaatt
              [237]33..7766..  ffoorrwwaarrdd__qquuoottee
              [238]33..7777..  ffrroomm
              [239]33..7788..  ggeeccooss__mmaasskk
              [240]33..7799..  hhddrrss
              [241]33..8800..  hheeaaddeerr
              [242]33..8811..  hheeaaddeerr__ccaacchhee
              [243]33..8822..  hheeaaddeerr__ccaacchhee__ccoommpprreessss
              [244]33..8833..  hheeaaddeerr__ccaacchhee__ppaaggeessiizzee
              [245]33..8844..  hheellpp
              [246]33..8855..  hhiiddddeenn__hhoosstt
              [247]33..8866..  hhiiddee__lliimmiitteedd
              [248]33..8877..  hhiiddee__mmiissssiinngg
              [249]33..8888..  hhiiddee__tthhrreeaadd__ssuubbjjeecctt
              [250]33..8899..  hhiiddee__ttoopp__lliimmiitteedd
              [251]33..9900..  hhiiddee__ttoopp__mmiissssiinngg
              [252]33..9911..  hhiissttoorryy
              [253]33..9922..  hhiissttoorryy__ffiillee
              [254]33..9933..  hhoonnoorr__ddiissppoossiittiioonn
              [255]33..9944..  hhoonnoorr__ffoolllloowwuupp__ttoo
              [256]33..9955..  hhoossttnnaammee
              [257]33..9966..  iiddnn__ddeeccooddee
              [258]33..9977..  iiddnn__eennccooddee
              [259]33..9988..  iiggnnoorree__lliinneeaarr__wwhhiittee__ssppaaccee
              [260]33..9999..  iiggnnoorree__lliisstt__rreeppllyy__ttoo
              [261]33..110000..  iimmaapp__aauutthheennttiiccaattoorrss
              [262]33..110011..  iimmaapp__cchheecckk__ssuubbssccrriibbeedd
              [263]33..110022..  iimmaapp__ddeelliimm__cchhaarrss
              [264]33..110033..  iimmaapp__hheeaaddeerrss
              [265]33..110044..  iimmaapp__iiddllee
              [266]33..110055..  iimmaapp__kkeeeeppaalliivvee
              [267]33..110066..  iimmaapp__lliisstt__ssuubbssccrriibbeedd
              [268]33..110077..  iimmaapp__llooggiinn
              [269]33..110088..  iimmaapp__ppaassss
              [270]33..110099..  iimmaapp__ppaassssiivvee
              [271]33..111100..  iimmaapp__ppeeeekk
              [272]33..111111..  iimmaapp__ppiippeelliinnee__ddeepptthh
              [273]33..111122..  iimmaapp__sseerrvveerrnnooiissee
              [274]33..111133..  iimmaapp__uusseerr
              [275]33..111144..  iimmpplliicciitt__aauuttoovviieeww
              [276]33..111155..  iinncclluuddee
              [277]33..111166..  iinncclluuddee__oonnllyyffiirrsstt
              [278]33..111177..  iinnddeenntt__ssttrriinngg
              [279]33..111188..  iinnddeexx__ffoorrmmaatt
              [280]33..111199..  iissppeellll
              [281]33..112200..  kkeeeepp__ffllaaggggeedd
              [282]33..112211..  llooccaallee
              [283]33..112222..  mmaaiill__cchheecckk
              [284]33..112233..  mmaaiill__cchheecckk__rreecceenntt
              [285]33..112244..  mmaaiill__cchheecckk__ssttaattss
              [286]33..112255..  mmaaiill__cchheecckk__ssttaattss__iinntteerrvvaall
              [287]33..112266..  mmaaiillccaapp__ppaatthh
              [288]33..112277..  mmaaiillccaapp__ssaanniittiizzee
              [289]33..112288..  mmaaiillddiirr__hheeaaddeerr__ccaacchhee__vveerriiffyy
              [290]33..112299..  mmaaiillddiirr__ttrraasshh
              [291]33..113300..  mmaaiillddiirr__cchheecckk__ccuurr
              [292]33..113311..  mmaarrkk__oolldd
              [293]33..113322..  mmaarrkkeerrss
              [294]33..113333..  mmaasskk
              [295]33..113344..  mmbbooxx
              [296]33..113355..  mmbbooxx__ttyyppee
              [297]33..113366..  mmeennuu__ccoonntteexxtt
              [298]33..113377..  mmeennuu__mmoovvee__ooffff
              [299]33..113388..  mmeennuu__ssccrroollll
              [300]33..113399..  mmeessssaaggee__ccaacchhee__cclleeaann
              [301]33..114400..  mmeessssaaggee__ccaacchheeddiirr
              [302]33..114411..  mmeessssaaggee__ffoorrmmaatt
              [303]33..114422..  mmeettaa__kkeeyy
              [304]33..114433..  mmeettoooo
              [305]33..114444..  mmhh__ppuurrggee
              [306]33..114455..  mmhh__sseeqq__ffllaaggggeedd
              [307]33..114466..  mmhh__sseeqq__rreepplliieedd
              [308]33..114477..  mmhh__sseeqq__uunnsseeeenn
              [309]33..114488..  mmiimmee__ffoorrwwaarrdd
              [310]33..114499..  mmiimmee__ffoorrwwaarrdd__ddeeccooddee
              [311]33..115500..  mmiimmee__ffoorrwwaarrdd__rreesstt
              [312]33..115511..  mmiixx__eennttrryy__ffoorrmmaatt
              [313]33..115522..  mmiixxmmaasstteerr
              [314]33..115533..  mmoovvee
              [315]33..115544..  nnaarrrrooww__ttrreeee
              [316]33..115555..  nneett__iinncc
              [317]33..115566..  ppaaggeerr
              [318]33..115577..  ppaaggeerr__ccoonntteexxtt
              [319]33..115588..  ppaaggeerr__ffoorrmmaatt
              [320]33..115599..  ppaaggeerr__iinnddeexx__lliinneess
              [321]33..116600..  ppaaggeerr__ssttoopp
              [322]33..116611..  ppggpp__aauuttoo__ddeeccooddee
              [323]33..116622..  ppggpp__aauuttooiinnlliinnee
              [324]33..116633..  ppggpp__cchheecckk__eexxiitt
              [325]33..116644..  ppggpp__cclleeaarrssiiggnn__ccoommmmaanndd
              [326]33..116655..  ppggpp__ddeeccooddee__ccoommmmaanndd
              [327]33..116666..  ppggpp__ddeeccrryypptt__ccoommmmaanndd
              [328]33..116677..  ppggpp__ddeeccrryyppttiioonn__ookkaayy
              [329]33..116688..  ppggpp__eennccrryypptt__oonnllyy__ccoommmmaanndd
              [330]33..116699..  ppggpp__eennccrryypptt__ssiiggnn__ccoommmmaanndd
              [331]33..117700..  ppggpp__eennttrryy__ffoorrmmaatt
              [332]33..117711..  ppggpp__eexxppoorrtt__ccoommmmaanndd
              [333]33..117722..  ppggpp__ggeettkkeeyyss__ccoommmmaanndd
              [334]33..117733..  ppggpp__ggoooodd__ssiiggnn
              [335]33..117744..  ppggpp__iiggnnoorree__ssuubbkkeeyyss
              [336]33..117755..  ppggpp__iimmppoorrtt__ccoommmmaanndd
              [337]33..117766..  ppggpp__lliisstt__ppuubbrriinngg__ccoommmmaanndd
              [338]33..117777..  ppggpp__lliisstt__sseeccrriinngg__ccoommmmaanndd
              [339]33..117788..  ppggpp__lloonngg__iiddss
              [340]33..117799..  ppggpp__mmiimmee__aauuttoo
              [341]33..118800..  ppggpp__rreeppllyyiinnlliinnee
              [342]33..118811..  ppggpp__rreettaaiinnaabbllee__ssiiggss
              [343]33..118822..  ppggpp__sshhooww__uunnuussaabbllee
              [344]33..118833..  ppggpp__ssiiggnn__aass
              [345]33..118844..  ppggpp__ssiiggnn__ccoommmmaanndd
              [346]33..118855..  ppggpp__ssoorrtt__kkeeyyss
              [347]33..118866..  ppggpp__ssttrriicctt__eenncc
              [348]33..118877..  ppggpp__ttiimmeeoouutt
              [349]33..118888..  ppggpp__uussee__ggppgg__aaggeenntt
              [350]33..118899..  ppggpp__vveerriiffyy__ccoommmmaanndd
              [351]33..119900..  ppggpp__vveerriiffyy__kkeeyy__ccoommmmaanndd
              [352]33..119911..  ppiippee__ddeeccooddee
              [353]33..119922..  ppiippee__sseepp
              [354]33..119933..  ppiippee__sspplliitt
              [355]33..119944..  ppoopp__aauutthh__ttrryy__aallll
              [356]33..119955..  ppoopp__aauutthheennttiiccaattoorrss
              [357]33..119966..  ppoopp__cchheecckkiinntteerrvvaall
              [358]33..119977..  ppoopp__ddeelleettee
              [359]33..119988..  ppoopp__hhoosstt
              [360]33..119999..  ppoopp__llaasstt
              [361]33..220000..  ppoopp__ppaassss
              [362]33..220011..  ppoopp__rreeccoonnnneecctt
              [363]33..220022..  ppoopp__uusseerr
              [364]33..220033..  ppoosstt__iinnddeenntt__ssttrriinngg
              [365]33..220044..  ppoossttppoonnee
              [366]33..220055..  ppoossttppoonneedd
              [367]33..220066..  ppoossttppoonnee__eennccrryypptt
              [368]33..220077..  ppoossttppoonnee__eennccrryypptt__aass
              [369]33..220088..  pprreeccoonnnneecctt
              [370]33..220099..  pprriinntt
              [371]33..221100..  pprriinntt__ccoommmmaanndd
              [372]33..221111..  pprriinntt__ddeeccooddee
              [373]33..221122..  pprriinntt__sspplliitt
              [374]33..221133..  pprroommpptt__aafftteerr
              [375]33..221144..  qquueerryy__ccoommmmaanndd
              [376]33..221155..  qquueerryy__ffoorrmmaatt
              [377]33..221166..  qquuiitt
              [378]33..221177..  qquuoottee__rreeggeexxpp
              [379]33..221188..  rreeaadd__iinncc
              [380]33..221199..  rreeaadd__oonnllyy
              [381]33..222200..  rreeaallnnaammee
              [382]33..222211..  rreeccaallll
              [383]33..222222..  rreeccoorrdd
              [384]33..222233..  rreeffllooww__ssppaaccee__qquuootteess
              [385]33..222244..  rreeffllooww__tteexxtt
              [386]33..222255..  rreeffllooww__wwrraapp
              [387]33..222266..  rreeppllyy__rreeggeexxpp
              [388]33..222277..  rreeppllyy__sseellff
              [389]33..222288..  rreeppllyy__ttoo
              [390]33..222299..  rreessoollvvee
              [391]33..223300..  rreessuummee__ddrraafftt__ffiilleess
              [392]33..223311..  rreessuummee__eeddiitteedd__ddrraafftt__ffiilleess
              [393]33..223322..  rreevveerrssee__aalliiaass
              [394]33..223333..  rreevveerrssee__nnaammee
              [395]33..223344..  rreevveerrssee__rreeaallnnaammee
              [396]33..223355..  rrffcc22004477__ppaarraammeetteerrss
              [397]33..223366..  ssaavvee__aaddddrreessss
              [398]33..223377..  ssaavvee__eemmppttyy
              [399]33..223388..  ssaavvee__hhiissttoorryy
              [400]33..223399..  ssaavvee__nnaammee
              [401]33..224400..  ssccoorree
              [402]33..224411..  ssccoorree__tthhrreesshhoolldd__ddeelleettee
              [403]33..224422..  ssccoorree__tthhrreesshhoolldd__ffllaagg
              [404]33..224433..  ssccoorree__tthhrreesshhoolldd__rreeaadd
              [405]33..224444..  sseeaarrcchh__ccoonntteexxtt
              [406]33..224455..  sseenndd__cchhaarrsseett
              [407]33..224466..  sseennddmmaaiill
              [408]33..224477..  sseennddmmaaiill__wwaaiitt
              [409]33..224488..  sshheellll
              [410]33..224499..  ssiiddeebbaarr__ddeelliimm__cchhaarrss
              [411]33..225500..  ssiiddeebbaarr__ddiivviiddeerr__cchhaarr
              [412]33..225511..  ssiiddeebbaarr__ffoollddeerr__iinnddeenntt
              [413]33..225522..  ssiiddeebbaarr__ffoorrmmaatt
              [414]33..225533..  ssiiddeebbaarr__iinnddeenntt__ssttrriinngg
              [415]33..225544..  ssiiddeebbaarr__nneeww__mmaaiill__oonnllyy
              [416]33..225555..  ssiiddeebbaarr__nneexxtt__nneeww__wwrraapp
              [417]33..225566..  ssiiddeebbaarr__sshhoorrtt__ppaatthh
              [418]33..225577..  ssiiddeebbaarr__ssoorrtt__mmeetthhoodd
              [419]33..225588..  ssiiddeebbaarr__vviissiibbllee
              [420]33..225599..  ssiiddeebbaarr__wwiiddtthh
              [421]33..226600..  ssiigg__ddaasshheess
              [422]33..226611..  ssiigg__oonn__ttoopp
              [423]33..226622..  ssiiggnnaattuurree
              [424]33..226633..  ssiimmppllee__sseeaarrcchh
              [425]33..226644..  sslleeeepp__ttiimmee
              [426]33..226655..  ssmmaarrtt__wwrraapp
              [427]33..226666..  ssmmiilleeyyss
              [428]33..226677..  ssmmiimmee__aasskk__cceerrtt__llaabbeell
              [429]33..226688..  ssmmiimmee__ccaa__llooccaattiioonn
              [430]33..226699..  ssmmiimmee__cceerrttiiffiiccaatteess
              [431]33..227700..  ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd
              [432]33..227711..  ssmmiimmee__ddeeccrryypptt__uussee__ddeeffaauulltt__kkeeyy
              [433]33..227722..  ssmmiimmee__ddeeffaauulltt__kkeeyy
              [434]33..227733..  ssmmiimmee__eennccrryypptt__ccoommmmaanndd
              [435]33..227744..  ssmmiimmee__eennccrryypptt__wwiitthh
              [436]33..227755..  ssmmiimmee__ggeett__cceerrtt__ccoommmmaanndd
              [437]33..227766..  ssmmiimmee__ggeett__cceerrtt__eemmaaiill__ccoommmmaanndd
              [438]33..227777..  ssmmiimmee__ggeett__ssiiggnneerr__cceerrtt__ccoommmmaanndd
              [439]33..227788..  ssmmiimmee__iimmppoorrtt__cceerrtt__ccoommmmaanndd
              [440]33..227799..  ssmmiimmee__iiss__ddeeffaauulltt
              [441]33..228800..  ssmmiimmee__kkeeyyss
              [442]33..228811..  ssmmiimmee__ppkk77oouutt__ccoommmmaanndd
              [443]33..228822..  ssmmiimmee__ssiiggnn__ccoommmmaanndd
              [444]33..228833..  ssmmiimmee__ssiiggnn__ddiiggeesstt__aallgg
              [445]33..228844..  ssmmiimmee__ssiiggnn__ooppaaqquuee__ccoommmmaanndd
              [446]33..228855..  ssmmiimmee__ttiimmeeoouutt
              [447]33..228866..  ssmmiimmee__vveerriiffyy__ccoommmmaanndd
              [448]33..228877..  ssmmiimmee__vveerriiffyy__ooppaaqquuee__ccoommmmaanndd
              [449]33..228888..  ssmmttpp__aauutthheennttiiccaattoorrss
              [450]33..228899..  ssmmttpp__ppaassss
              [451]33..229900..  ssmmttpp__uurrll
              [452]33..229911..  ssoorrtt
              [453]33..229922..  ssoorrtt__aalliiaass
              [454]33..229933..  ssoorrtt__aauuxx
              [455]33..229944..  ssoorrtt__bbrroowwsseerr
              [456]33..229955..  ssoorrtt__rree
              [457]33..229966..  ssppaamm__sseeppaarraattoorr
              [458]33..229977..  ssppoooollffiillee
              [459]33..229988..  ssssll__ccaa__cceerrttiiffiiccaatteess__ffiillee
              [460]33..229999..  ssssll__cclliieenntt__cceerrtt
              [461]33..330000..  ssssll__ffoorrccee__ttllss
              [462]33..330011..  ssssll__mmiinn__ddhh__pprriimmee__bbiittss
              [463]33..330022..  ssssll__ssttaarrttttllss
              [464]33..330033..  ssssll__uussee__ssssllvv22
              [465]33..330044..  ssssll__uussee__ssssllvv33
              [466]33..330055..  ssssll__uussee__ttllssvv11
              [467]33..330066..  ssssll__uussee__ttllssvv11__11
              [468]33..330077..  ssssll__uussee__ttllssvv11__22
              [469]33..330088..  ssssll__uusseessyysstteemmcceerrttss
              [470]33..330099..  ssssll__vveerriiffyy__ddaatteess
              [471]33..331100..  ssssll__vveerriiffyy__hhoosstt
              [472]33..331111..  ssssll__cciipphheerrss
              [473]33..331122..  ssttaattuuss__cchhaarrss
              [474]33..331133..  ssttaattuuss__ffoorrmmaatt
              [475]33..331144..  ssttaattuuss__oonn__ttoopp
              [476]33..331155..  ssttrriicctt__tthhrreeaaddss
              [477]33..331166..  ssuussppeenndd
              [478]33..331177..  tteexxtt__fflloowweedd
              [479]33..331188..  tthhoorroouugghh__sseeaarrcchh
              [480]33..331199..  tthhrreeaadd__rreecceeiivveedd
              [481]33..332200..  ttiillddee
              [482]33..332211..  ttiimmee__iinncc
              [483]33..332222..  ttiimmeeoouutt
              [484]33..332233..  ttmmppddiirr
              [485]33..332244..  ttoo__cchhaarrss
              [486]33..332255..  ttrraasshh
              [487]33..332266..  ttss__iiccoonn__ffoorrmmaatt
              [488]33..332277..  ttss__eennaabblleedd
              [489]33..332288..  ttss__ssttaattuuss__ffoorrmmaatt
              [490]33..332299..  ttuunnnneell
              [491]33..333300..  uunnccoollllaappssee__jjuummpp
              [492]33..333311..  uussee__88bbiittmmiimmee
              [493]33..333322..  uussee__ddoommaaiinn
              [494]33..333333..  uussee__eennvveellooppee__ffrroomm
              [495]33..333344..  uussee__ffrroomm
              [496]33..333355..  uussee__iippvv66
              [497]33..333366..  uusseerr__aaggeenntt
              [498]33..333377..  vviissuuaall
              [499]33..333388..  wwaaiitt__kkeeyy
              [500]33..333399..  wweeeedd
              [501]33..334400..  wwrraapp
              [502]33..334411..  wwrraapp__hheeaaddeerrss
              [503]33..334422..  wwrraapp__sseeaarrcchh
              [504]33..334433..  wwrraappmmaarrggiinn
              [505]33..334444..  wwrriittee__bbcccc
              [506]33..334455..  wwrriittee__iinncc

        [507]44..  FFuunnccttiioonnss

              [508]44..11..  GGeenneerriicc  MMeennuu
              [509]44..22..  IInnddeexx  MMeennuu
              [510]44..33..  PPaaggeerr  MMeennuu
              [511]44..44..  AAlliiaass  MMeennuu
              [512]44..55..  QQuueerryy  MMeennuu
              [513]44..66..  AAttttaacchhmmeenntt  MMeennuu
              [514]44..77..  CCoommppoossee  MMeennuu
              [515]44..88..  PPoossttppoonnee  MMeennuu
              [516]44..99..  BBrroowwsseerr  MMeennuu
              [517]44..1100..  PPggpp  MMeennuu
              [518]44..1111..  SSmmiimmee  MMeennuu
              [519]44..1122..  MMiixxmmaasstteerr  MMeennuu
              [520]44..1133..  EEddiittoorr  MMeennuu

   [521]1100..  MMiisscceellllaannyy

        [522]11..  AAcckknnoowwlleeddggeemmeennttss
        [523]22..  AAbboouutt  TThhiiss  DDooccuummeenntt

   _L_i_s_t_ _o_f_ _T_a_b_l_e_s

   1.1. [524]TTyyppooggrraapphhiiccaall  ccoonnvveennttiioonnss  ffoorr  ssppeecciiaall  tteerrmmss
   2.1. [525]MMoosstt  ccoommmmoonn  nnaavviiggaattiioonn  kkeeyyss  iinn  eennttrryy--bbaasseedd  mmeennuuss
   2.2. [526]MMoosstt  ccoommmmoonn  nnaavviiggaattiioonn  kkeeyyss  iinn  ppaaggee--bbaasseedd  mmeennuuss
   2.3. [527]MMoosstt  ccoommmmoonn  lliinnee  eeddiittoorr  kkeeyyss
   2.4. [528]MMoosstt  ccoommmmoonn  mmeessssaaggee  iinnddeexx  kkeeyyss
   2.5. [529]MMeessssaaggee  ssttaattuuss  ffllaaggss
   2.6. [530]MMeessssaaggee  rreecciippiieenntt  ffllaaggss
   2.7. [531]MMoosstt  ccoommmmoonn  ppaaggeerr  kkeeyyss
   2.8. [532]AANNSSII  eessccaappee  sseeqquueenncceess
   2.9. [533]CCoolloorr  sseeqquueenncceess
   2.10. [534]MMoosstt  ccoommmmoonn  tthhrreeaadd  mmooddee  kkeeyyss
   2.11. [535]MMoosstt  ccoommmmoonn  mmaaiill  sseennddiinngg  kkeeyyss
   2.12. [536]MMoosstt  ccoommmmoonn  ccoommppoossee  mmeennuu  kkeeyyss
   2.13. [537]PPGGPP  kkeeyy  mmeennuu  ffllaaggss
   3.1. [538]SSyymmbboolliicc  kkeeyy  nnaammeess
   4.1. [539]PPOOSSIIXX  rreegguullaarr  eexxpprreessssiioonn  cchhaarraacctteerr  ccllaasssseess
   4.2. [540]RReegguullaarr  eexxpprreessssiioonn  rreeppeettiittiioonn  ooppeerraattoorrss
   4.3. [541]GGNNUU  rreegguullaarr  eexxpprreessssiioonn  eexxtteennssiioonnss
   4.4. [542]PPaatttteerrnn  mmooddiiffiieerrss
   4.5. [543]SSiimmppllee  sseeaarrcchh  kkeeyywwoorrddss
   4.6. [544]DDaattee  uunniittss
   4.7. [545]MMaaiillbbooxx  sshhoorrttccuuttss
   5.1. [546]SSuuppppoorrtteedd  MMIIMMEE  ttyyppeess
   6.1. [547]SSiiddeebbaarr  VVaarriiaabblleess
   6.2. [548]SSiiddeebbaarr  FFuunnccttiioonnss
   6.3. [549]SSiiddeebbaarr  CCoolloorrss
   6.4. [550]SSiiddeebbaarr  SSoorrtt
   9.1. [551]CCoommmmaanndd  lliinnee  ooppttiioonnss
   9.2. [552]DDeeffaauulltt  GGeenneerriicc  MMeennuu  BBiinnddiinnggss
   9.3. [553]DDeeffaauulltt  IInnddeexx  MMeennuu  BBiinnddiinnggss
   9.4. [554]DDeeffaauulltt  PPaaggeerr  MMeennuu  BBiinnddiinnggss
   9.5. [555]DDeeffaauulltt  AAlliiaass  MMeennuu  BBiinnddiinnggss
   9.6. [556]DDeeffaauulltt  QQuueerryy  MMeennuu  BBiinnddiinnggss
   9.7. [557]DDeeffaauulltt  AAttttaacchhmmeenntt  MMeennuu  BBiinnddiinnggss
   9.8. [558]DDeeffaauulltt  CCoommppoossee  MMeennuu  BBiinnddiinnggss
   9.9. [559]DDeeffaauulltt  PPoossttppoonnee  MMeennuu  BBiinnddiinnggss
   9.10. [560]DDeeffaauulltt  BBrroowwsseerr  MMeennuu  BBiinnddiinnggss
   9.11. [561]DDeeffaauulltt  PPggpp  MMeennuu  BBiinnddiinnggss
   9.12. [562]DDeeffaauulltt  SSmmiimmee  MMeennuu  BBiinnddiinnggss
   9.13. [563]DDeeffaauulltt  MMiixxmmaasstteerr  MMeennuu  BBiinnddiinnggss
   9.14. [564]DDeeffaauulltt  EEddiittoorr  MMeennuu  BBiinnddiinnggss

   _L_i_s_t_ _o_f_ _E_x_a_m_p_l_e_s

   3.1. [565]MMuullttiippllee  ccoonnffiigguurraattiioonn  ccoommmmaannddss  ppeerr  lliinnee
   3.2. [566]CCoommmmeennttiinngg  ccoonnffiigguurraattiioonn  ffiilleess
   3.3. [567]EEssccaappiinngg  qquuootteess  iinn  ccoonnffiigguurraattiioonn  ffiilleess
   3.4. [568]SSpplliittttiinngg  lloonngg  ccoonnffiigguurraattiioonn  ccoommmmaannddss  oovveerr  sseevveerraall  lliinneess
   3.5. [569]UUssiinngg  eexxtteerrnnaall  ccoommmmaanndd''ss  oouuttppuutt  iinn  ccoonnffiigguurraattiioonn  ffiilleess
   3.6. [570]UUssiinngg  eennvviirroonnmmeenntt  vvaarriiaabblleess  iinn  ccoonnffiigguurraattiioonn  ffiilleess
   3.7. [571]CCoonnffiigguurriinngg  eexxtteerrnnaall  aalliiaass  ffiilleess
   3.8. [572]SSeettttiinngg  ssoorrtt  mmeetthhoodd  bbaasseedd  oonn  mmaaiillbbooxx  nnaammee
   3.9. [573]HHeeaaddeerr  wweeeeddiinngg
   3.10. [574]CCoonnffiigguurriinngg  hheeaaddeerr  ddiissppllaayy  oorrddeerr
   3.11. [575]DDeeffiinniinngg  ccuussttoomm  hheeaaddeerrss
   3.12. [576]UUssiinngg  %%--eexxppaannddooss  iinn  ssaavvee--hhooookk
   3.13. [577]EEmmbbeeddddiinngg  ppuusshh  iinn  ffoollddeerr--hhooookk
   3.14. [578]CCoonnffiigguurriinngg  ssppaamm  ddeetteeccttiioonn
   3.15. [579]UUssiinngg  uusseerr--ddeeffiinneedd  vvaarriiaabblleess  ffoorr  ccoonnffiigg  ffiillee  rreeaaddaabbiilliittyy
   3.16. [580]UUssiinngg  uusseerr--ddeeffiinneedd  vvaarriiaabblleess  ffoorr  bbaacckkiinngg  uupp  ootthheerr  ccoonnffiigg
          ooppttiioonn  vvaalluueess

   3.17. [581]DDeeffeerrrriinngg  uusseerr--ddeeffiinneedd  vvaarriiaabbllee  eexxppaannssiioonn  ttoo  rruunnttiimmee
   3.18. [582]TTyyppee  ccoonnvveerrssiioonnss  uussiinngg  vvaarriiaabblleess
   3.19. [583]UUssiinngg  eexxtteerrnnaall  ffiilltteerrss  iinn  ffoorrmmaatt  ssttrriinnggss
   4.1. [584]MMaattcchhiinngg  aallll  aaddddrreesssseess  iinn  aaddddrreessss  lliissttss
   4.2. [585]UUssiinngg  bboooolleeaann  ooppeerraattoorrss  iinn  ppaatttteerrnnss
   4.3. [586]SSppeecciiffyyiinngg  aa  ""ddeeffaauulltt""  hhooookk
   5.1. [587]mmiimmee..ttyyppeess
   5.2. [588]AAttttaacchhmmeenntt  ccoouunnttiinngg
   6.1. [589]UURRLLss
   6.2. [590]MMaannaaggiinngg  mmuullttiippllee  aaccccoouunnttss

Chapter 1. Introduction

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [591]11..  MMuutttt  HHoommee  PPaaggee
   [592]22..  MMaaiilliinngg  LLiissttss
   [593]33..  GGeettttiinngg  MMuutttt
   [594]44..  MMuutttt  OOnnlliinnee  RReessoouurrcceess
   [595]55..  CCoonnttrriibbuuttiinngg  ttoo  MMuutttt
   [596]66..  TTyyppooggrraapphhiiccaall  CCoonnvveennttiioonnss
   [597]77..  CCooppyyrriigghhtt

   _M_u_t_t is a small but very powerful text-based MIME mail client. Mutt is
   highly configurable, and is well suited to the mail power user with
   advanced features like key bindings, keyboard macros, mail threading,
   regular expression searches and a powerful pattern matching language
   for selecting groups of messages.

1. Mutt Home Page

   The official homepage can be found at [598]hhttttpp::////wwwwww..mmuutttt..oorrgg//.

2. Mailing Lists

   To subscribe to one of the following mailing lists, send a message with
   the word _s_u_b_s_c_r_i_b_e in the body to _l_i_s_t_-_n_a_m_e-request@mutt.org.
     * <[599]mmuutttt--aannnnoouunnccee--rreeqquueesstt@@mmuutttt..oorrgg> -- low traffic list for
       announcements
     * <[600]mmuutttt--uusseerrss--rreeqquueesstt@@mmuutttt..oorrgg> -- help, bug reports and feature
       requests
     * <[601]mmuutttt--ddeevv--rreeqquueesstt@@mmuutttt..oorrgg> -- development mailing list

   All messages posted to _m_u_t_t_-_a_n_n_o_u_n_c_e are automatically forwarded to
   _m_u_t_t_-_u_s_e_r_s, so you do not need to be subscribed to both lists.

3. Getting Mutt

   Mutt releases can be downloaded from [602]ffttpp::////ffttpp..mmuutttt..oorrgg//mmuutttt//. For
   a list of mirror sites, please refer to
   [603]hhttttpp::////wwwwww..mmuutttt..oorrgg//ddoowwnnllooaadd..hhttmmll.

   For nightly tarballs and version control access, please refer to the
   [604]MMuutttt  ddeevveellooppmmeenntt  ssiittee.

4. Mutt Online Resources

   Bug Tracking System
          The official Mutt bug tracking system can be found at
          [605]hhttttpp::////bbuuggss..mmuutttt..oorrgg//

   Wiki
          An (unofficial) wiki can be found at [606]hhttttpp::////wwiikkii..mmuutttt..oorrgg//.

   IRC
          For the IRC user community, visit channel _#_m_u_t_t on
          [607]iirrcc..ffrreeeennooddee..nneett.

   USENET
          For USENET, see the newsgroup [608]ccoommpp..mmaaiill..mmuutttt.

5. Contributing to Mutt

   There are various ways to contribute to the Mutt project.

   Especially for new users it may be helpful to meet other new and
   experienced users to chat about Mutt, talk about problems and share
   tricks.

   Since translations of Mutt into other languages are highly appreciated,
   the Mutt developers always look for skilled translators that help
   improve and continue to maintain stale translations.

   For contributing code patches for new features and bug fixes, please
   refer to the developer pages at [609]hhttttpp::////ddeevv..mmuutttt..oorrgg// for more
   details.

6. Typographical Conventions

   This section lists typographical conventions followed throughout this
   manual. See table [610]TTaabbllee  11..11,,  ""TTyyppooggrraapphhiiccaall  ccoonnvveennttiioonnss  ffoorr
   ssppeecciiaall  tteerrmmss"" for typographical conventions for special terms.

   _T_a_b_l_e_ _1_._1_._ _T_y_p_o_g_r_a_p_h_i_c_a_l_ _c_o_n_v_e_n_t_i_o_n_s_ _f_o_r_ _s_p_e_c_i_a_l_ _t_e_r_m_s
        Item                   Refers to...
   printf(3)      UNIX manual pages, execute man 3 printf
   <PageUp>       named keys
   <create-alias> named Mutt function
   ^G             Control+G key combination
   $mail_check    Mutt configuration option
   $HOME          environment variable

   Examples are presented as:
mutt -v

   Within command synopsis, curly brackets ("{}") denote a set of options
   of which one is mandatory, square brackets ("[]") denote optional
   arguments, three dots denote that the argument may be repeated
   arbitrary times.

7. Copyright

   Mutt is Copyright (c) 1996-2016 Michael R. Elkins <[611]mmee@@mmuutttt..oorrgg>
   and others.

   This program is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by the
   Free Software Foundation; either version 2 of the License, or (at your
   option) any later version.

   This program is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License along
   with this program; if not, write to the Free Software Foundation, Inc.,
   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

Chapter 2. Getting Started

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [612]11..  CCoorree  CCoonncceeppttss
   [613]22..  SSccrreeeennss  aanndd  MMeennuuss

        [614]22..11..  IInnddeexx
        [615]22..22..  PPaaggeerr
        [616]22..33..  FFiillee  BBrroowwsseerr
        [617]22..44..  SSiiddeebbaarr
        [618]22..55..  HHeellpp
        [619]22..66..  CCoommppoossee  MMeennuu
        [620]22..77..  AAlliiaass  MMeennuu
        [621]22..88..  AAttttaacchhmmeenntt  MMeennuu

   [622]33..  MMoovviinngg  AArroouunndd  iinn  MMeennuuss
   [623]44..  EEddiittiinngg  IInnppuutt  FFiieellddss

        [624]44..11..  IInnttrroodduuccttiioonn
        [625]44..22..  HHiissttoorryy

   [626]55..  RReeaaddiinngg  MMaaiill

        [627]55..11..  TThhee  MMeessssaaggee  IInnddeexx
        [628]55..22..  TThhee  PPaaggeerr
        [629]55..33..  TThhrreeaaddeedd  MMooddee
        [630]55..44..  MMiisscceellllaanneeoouuss  FFuunnccttiioonnss

   [631]66..  SSeennddiinngg  MMaaiill

        [632]66..11..  IInnttrroodduuccttiioonn
        [633]66..22..  EEddiittiinngg  tthhee  MMeessssaaggee  HHeeaaddeerr
        [634]66..33..  SSeennddiinngg  CCrryyppttooggrraapphhiiccaallllyy  SSiiggnneedd//EEnnccrryypptteedd  MMeessssaaggeess
        [635]66..44..  SSeennddiinngg  FFoorrmmaatt==FFlloowweedd  MMeessssaaggeess

   [636]77..  FFoorrwwaarrddiinngg  aanndd  BBoouunncciinngg  MMaaiill
   [637]88..  PPoossttppoonniinngg  MMaaiill

   This section is intended as a brief overview of how to use Mutt. There
   are many other features which are described elsewhere in the manual.
   There is even more information available in the Mutt FAQ and various
   web pages. See the [638]MMuutttt  hhoommeeppaaggee for more details.

   The keybindings described in this section are the defaults as
   distributed. Your local system administrator may have altered the
   defaults for your site. You can always type "?" in any menu to display
   the current bindings.

   The first thing you need to do is invoke Mutt, simply by typing mutt at
   the command line. There are various command-line options, see either
   the Mutt man page or the [639]rreeffeerreennccee.

1. Core Concepts

   Mutt is a text-based application which interacts with users through
   different menus which are mostly line-/entry-based or page-based. A
   line-based menu is the so-called "index" menu (listing all messages of
   the currently opened folder) or the "alias" menu (allowing you to
   select recipients from a list). Examples for page-based menus are the
   "pager" (showing one message at a time) or the "help" menu listing all
   available key bindings.

   The user interface consists of a context sensitive help line at the
   top, the menu's contents followed by a context sensitive status line
   and finally the command line. The command line is used to display
   informational and error messages as well as for prompts and for
   entering interactive commands.

   Mutt is configured through variables which, if the user wants to
   permanently use a non-default value, are written to configuration
   files. Mutt supports a rich config file syntax to make even complex
   configuration files readable and commentable.

   Because Mutt allows for customizing almost all key bindings, there are
   so-called "functions" which can be executed manually (using the command
   line) or in macros. Macros allow the user to bind a sequence of
   commands to a single key or a short key sequence instead of repeating a
   sequence of actions over and over.

   Many commands (such as saving or copying a message to another folder)
   can be applied to a single message or a set of messages (so-called
   "tagged" messages). To help selecting messages, Mutt provides a rich
   set of message patterns (such as recipients, sender, body contents,
   date sent/received, etc.) which can be combined into complex
   expressions using the boolean _a_n_d and _o_r operations as well as
   negating. These patterns can also be used to (for example) search for
   messages or to limit the index to show only matching messages.

   Mutt supports a "hook" concept which allows the user to execute
   arbitrary configuration commands and functions in certain situations
   such as entering a folder, starting a new message or replying to an
   existing one. These hooks can be used to highly customize Mutt's
   behavior including managing multiple identities, customizing the
   display for a folder or even implementing auto-archiving based on a
   per-folder basis and much more.

   Besides an interactive mode, Mutt can also be used as a command-line
   tool only send messages. It also supports a mailx(1)-compatible
   interface, see [640]TTaabbllee  99..11,,  ""CCoommmmaanndd  lliinnee  ooppttiioonnss"" for a complete
   list of command-line options.

2. Screens and Menus

2.1. Index

   The index is the screen that you usually see first when you start Mutt.
   It gives an overview over your emails in the currently opened mailbox.
   By default, this is your system mailbox. The information you see in the
   index is a list of emails, each with its number on the left, its flags
   (new email, important email, email that has been forwarded or replied
   to, tagged email, ...), the date when email was sent, its sender, the
   email size, and the subject. Additionally, the index also shows thread
   hierarchies: when you reply to an email, and the other person replies
   back, you can see the other person's email in a "sub-tree" below. This
   is especially useful for personal email between a group of people or
   when you've subscribed to mailing lists.

2.2. Pager

   The pager is responsible for showing the email content. On the top of
   the pager you have an overview over the most important email headers
   like the sender, the recipient, the subject, and much more information.
   How much information you actually see depends on your configuration,
   which we'll describe below.

   Below the headers, you see the email body which usually contains the
   message. If the email contains any attachments, you will see more
   information about them below the email body, or, if the attachments are
   text files, you can view them directly in the pager.

   To give the user a good overview, it is possible to configure Mutt to
   show different things in the pager with different colors. Virtually
   everything that can be described with a regular expression can be
   colored, e.g. URLs, email addresses or smileys.

2.3. File Browser

   The file browser is the interface to the local or remote file system.
   When selecting a mailbox to open, the browser allows custom sorting of
   items, limiting the items shown by a regular expression and a freely
   adjustable format of what to display in which way. It also allows for
   easy navigation through the file system when selecting file(s) to
   attach to a message, select multiple files to attach and many more.

2.4. Sidebar

   The Sidebar shows a list of all your mailboxes. The list can be turned
   on and off, it can be themed and the list style can be configured.

2.5. Help

   The help screen is meant to offer a quick help to the user. It lists
   the current configuration of key bindings and their associated commands
   including a short description, and currently unbound functions that
   still need to be associated with a key binding (or alternatively, they
   can be called via the Mutt command prompt).

2.6. Compose Menu

   The compose menu features a split screen containing the information
   which really matter before actually sending a message by mail: who gets
   the message as what (recipients and who gets what kind of copy).
   Additionally, users may set security options like deciding whether to
   sign, encrypt or sign and encrypt a message with/for what keys. Also,
   it's used to attach messages, to re-edit any attachment including the
   message itself.

2.7. Alias Menu

   The alias menu is used to help users finding the recipients of
   messages. For users who need to contact many people, there's no need to
   remember addresses or names completely because it allows for searching,
   too. The alias mechanism and thus the alias menu also features grouping
   several addresses by a shorter nickname, the actual alias, so that
   users don't have to select each single recipient manually.

2.8. Attachment Menu

   As will be later discussed in detail, Mutt features a good and stable
   MIME implementation, that is, it supports sending and receiving
   messages of arbitrary MIME types. The attachment menu displays a
   message's structure in detail: what content parts are attached to which
   parent part (which gives a true tree structure), which type is of what
   type and what size. Single parts may saved, deleted or modified to
   offer great and easy access to message's internals.

3. Moving Around in Menus

   The most important navigation keys common to line- or entry-based menus
   are shown in [641]TTaabbllee  22..11,,  ""MMoosstt  ccoommmmoonn  nnaavviiggaattiioonn  kkeeyyss  iinn
   eennttrryy--bbaasseedd  mmeennuuss"" and in [642]TTaabbllee  22..22,,  ""MMoosstt  ccoommmmoonn  nnaavviiggaattiioonn  kkeeyyss
   iinn  ppaaggee--bbaasseedd  mmeennuuss"" for page-based menus.

   _T_a_b_l_e_ _2_._1_._ _M_o_s_t_ _c_o_m_m_o_n_ _n_a_v_i_g_a_t_i_o_n_ _k_e_y_s_ _i_n_ _e_n_t_r_y_-_b_a_s_e_d_ _m_e_n_u_s
        Key          Function                    Description
   j or <Down>   <next-entry>     move to the next entry
   k or <Up>     <previous-entry> move to the previous entry
   z or <PageDn> <page-down>      go to the next page
   Z or <PageUp> <page-up>        go to the previous page
   = or <Home>   <first-entry>    jump to the first entry
   * or <End>    <last-entry>     jump to the last entry
   q             <quit>           exit the current menu
   ?             <help>           list all keybindings for the current menu

   _T_a_b_l_e_ _2_._2_._ _M_o_s_t_ _c_o_m_m_o_n_ _n_a_v_i_g_a_t_i_o_n_ _k_e_y_s_ _i_n_ _p_a_g_e_-_b_a_s_e_d_ _m_e_n_u_s
            Key              Function          Description
   J or <Return>          <next-line>     scroll down one line
   <Backspace>            <previous-line> scroll up one line
   K, <Space> or <PageDn> <next-page>     move to the next page
   - or <PageUp>          <previous-page> move the previous page
   <Home>                 <top>           move to the top
   <End>                  <bottom>        move to the bottom

4. Editing Input Fields

4.1. Introduction

   Mutt has a built-in line editor for inputting text, e.g. email
   addresses or filenames. The keys used to manipulate text input are very
   similar to those of Emacs. See [643]TTaabbllee  22..33,,  ""MMoosstt  ccoommmmoonn  lliinnee  eeddiittoorr
   kkeeyyss"" for a full reference of available functions, their default key
   bindings, and short descriptions.

   _T_a_b_l_e_ _2_._3_._ _M_o_s_t_ _c_o_m_m_o_n_ _l_i_n_e_ _e_d_i_t_o_r_ _k_e_y_s
        Key           Function                  Description
   ^A or <Home>   <bol>             move to the start of the line
   ^B or <Left>   <backward-char>   move back one char
   Esc B          <backward-word>   move back one word
   ^D or <Delete> <delete-char>     delete the char under the cursor
   ^E or <End>    <eol>             move to the end of the line
   ^F or <Right>  <forward-char>    move forward one char
   Esc F          <forward-word>    move forward one word
   <Tab>          <complete>        complete filename or alias
   ^T             <complete-query>  complete address with query
   ^K             <kill-eol>        delete to the end of the line
   Esc d          <kill-eow>        delete to the end of the word
   ^W             <kill-word>       kill the word in front of the cursor
   ^U             <kill-line>       delete entire line
   ^V             <quote-char>      quote the next typed key
   <Up>           <history-up>      recall previous string from history
   <Down>         <history-down>    recall next string from history
   <BackSpace>    <backspace>       kill the char in front of the cursor
   Esc u          <upcase-word>     convert word to upper case
   Esc l          <downcase-word>   convert word to lower case
   Esc c          <capitalize-word> capitalize the word
   ^G             n/a               abort
   <Return>       n/a               finish editing

   You can remap the _e_d_i_t_o_r functions using the [644]bbiinndd command. For
   example, to make the <Delete> key delete the character in front of the
   cursor rather than under, you could use:
bind editor <delete> backspace

4.2. History

   Mutt maintains a history for the built-in editor. The number of items
   is controlled by the [645]$$hhiissttoorryy variable and can be made persistent
   using an external file specified using [646]$$hhiissttoorryy__ffiillee. You may
   cycle through them at an editor prompt by using the <history-up> and/or
   <history-down> commands. Mutt will remember the currently entered text
   as you cycle through history, and will wrap around to the initial entry
   line.

   Mutt maintains several distinct history lists, one for each of the
   following categories:
     * .muttrc commands
     * addresses and aliases
     * shell commands
     * filenames
     * patterns
     * everything else

   Mutt automatically filters out consecutively repeated items from the
   history. It also mimics the behavior of some shells by ignoring items
   starting with a space. The latter feature can be useful in macros to
   not clobber the history's valuable entries with unwanted entries.

5. Reading Mail

   Similar to many other mail clients, there are two modes in which mail
   is read in Mutt. The first is a list of messages in the mailbox, which
   is called the "index" menu in Mutt. The second mode is the display of
   the message contents. This is called the "pager."

   The next few sections describe the functions provided in each of these
   modes.

5.1. The Message Index

   Common keys used to navigate through and manage messages in the index
   are shown in [647]TTaabbllee  22..44,,  ""MMoosstt  ccoommmmoonn  mmeessssaaggee  iinnddeexx  kkeeyyss"". How
   messages are presented in the index menu can be customized using the
   [648]$$iinnddeexx__ffoorrmmaatt variable.

   _T_a_b_l_e_ _2_._4_._ _M_o_s_t_ _c_o_m_m_o_n_ _m_e_s_s_a_g_e_ _i_n_d_e_x_ _k_e_y_s
     Key                    Description
   c        change to a different mailbox
   Esc c    change to a folder in read-only mode
   C        copy the current message to another mailbox
   Esc C    decode a message and copy it to a folder
   Esc s    decode a message and save it to a folder
   D        delete messages matching a pattern
   d        delete the current message
   F        mark as important
   l        show messages matching a pattern
   N        mark message as new
   o        change the current sort method
   O        reverse sort the mailbox
   q        save changes and exit
   s        save-message
   T        tag messages matching a pattern
   t        toggle the tag on a message
   Esc t    toggle tag on entire message thread
   U        undelete messages matching a pattern
   u        undelete-message
   v        view-attachments
   x        abort changes and exit
   <Return> display-message
   <Tab>    jump to the next new or unread message
   @        show the author's full e-mail address
   $        save changes to mailbox
   /        search
   Esc /    search-reverse
   ^L       clear and redraw the screen
   ^T       untag messages matching a pattern

   In addition to who sent the message and the subject, a short summary of
   the disposition of each message is printed beside the message number.
   Zero or more of the "flags" in [649]TTaabbllee  22..55,,  ""MMeessssaaggee  ssttaattuuss  ffllaaggss""
   may appear, some of which can be turned on or off using these
   functions: <set-flag> and <clear-flag> bound by default to "w" and "W"
   respectively.

   Furthermore, the flags in [650]TTaabbllee  22..66,,  ""MMeessssaaggee  rreecciippiieenntt  ffllaaggss""
   reflect who the message is addressed to. They can be customized with
   the [651]$$ttoo__cchhaarrss variable.

   _T_a_b_l_e_ _2_._5_._ _M_e_s_s_a_g_e_ _s_t_a_t_u_s_ _f_l_a_g_s
   Flag                          Description
   D    message is deleted (is marked for deletion)
   d    message has attachments marked for deletion
   K    contains a PGP public key
   N    message is new
   O    message is old
   P    message is PGP encrypted
   r    message has been replied to
   S    message is signed, and the signature is successfully verified
   s    message is signed
   !    message is flagged
   *    message is tagged
   n    thread contains new messages (only if collapsed)
   o    thread contains old messages (only if collapsed)

   _T_a_b_l_e_ _2_._6_._ _M_e_s_s_a_g_e_ _r_e_c_i_p_i_e_n_t_ _f_l_a_g_s
   Flag                    Description
   +    message is to you and you only
   T    message is to you, but also to or CC'ed to others
   C    message is CC'ed to you
   F    message is from you
   L    message is sent to a subscribed mailing list

5.2. The Pager

   By default, Mutt uses its built-in pager to display the contents of
   messages (an external pager such as less(1) can be configured, see
   [652]$$ppaaggeerr variable). The pager is very similar to the Unix program
   less(1) though not nearly as featureful.

   _T_a_b_l_e_ _2_._7_._ _M_o_s_t_ _c_o_m_m_o_n_ _p_a_g_e_r_ _k_e_y_s
   Key Description
   <Return> go down one line
   <Space> display the next page (or next message if at the end of a
   message)
   - go back to the previous page
   n search for next match
   S skip beyond quoted text
   T toggle display of quoted text
   ? show keybindings
   / regular expression search
   Esc / backward regular expression search
   \ toggle highlighting of search matches
   ^ jump to the top of the message

   In addition to key bindings in [653]TTaabbllee  22..77,,  ""MMoosstt  ccoommmmoonn  ppaaggeerr
   kkeeyyss"", many of the functions from the index menu are also available in
   the pager, such as <delete-message> or <copy-message> (this is one
   advantage over using an external pager to view messages).

   Also, the internal pager supports a couple other advanced features. For
   one, it will accept and translate the "standard" nroff sequences for
   bold and underline. These sequences are a series of either the letter,
   backspace ("^H"), the letter again for bold or the letter, backspace,
   "_" for denoting underline. Mutt will attempt to display these in bold
   and underline respectively if your terminal supports them. If not, you
   can use the bold and underline [654]ccoolloorr objects to specify a _c_o_l_o_r or
   mono attribute for them.

   Additionally, the internal pager supports the ANSI escape sequences for
   character attributes. Mutt translates them into the correct color and
   character settings. The sequences Mutt supports are:
\e[_P_s;_P_s;.._P_s;m

   where _P_s can be one of the codes shown in [655]TTaabbllee  22..88,,  ""AANNSSII  eessccaappee
   sseeqquueenncceess"".

   _T_a_b_l_e_ _2_._8_._ _A_N_S_I_ _e_s_c_a_p_e_ _s_e_q_u_e_n_c_e_s
   Escape code Description
   0 All attributes off
   1 Bold on
   4 Underline on
   5 Blink on
   7 Reverse video on
   3_<_c_o_l_o_r_> Foreground color is _<_c_o_l_o_r_> (see [656]TTaabbllee  22..99,,  ""CCoolloorr
   sseeqquueenncceess"")
   4_<_c_o_l_o_r_> Background color is _<_c_o_l_o_r_> (see [657]TTaabbllee  22..99,,  ""CCoolloorr
   sseeqquueenncceess"")

   _T_a_b_l_e_ _2_._9_._ _C_o_l_o_r_ _s_e_q_u_e_n_c_e_s
   Color code  Color
   0          Black
   1          Red
   2          Green
   3          Yellow
   4          Blue
   5          Magenta
   6          Cyan
   7          White

   Mutt uses these attributes for handling text/enriched messages, and
   they can also be used by an external [658]aauuttoovviieeww script for
   highlighting purposes.

Note

   If you change the colors for your display, for example by changing the
   color associated with color2 for your xterm, then that color will be
   used instead of green.

Note

   Note that the search commands in the pager take regular expressions,
   which are not quite the same as the more complex [659]ppaatttteerrnnss used by
   the search command in the index. This is because patterns are used to
   select messages by criteria whereas the pager already displays a
   selected message.

5.3. Threaded Mode

   So-called "threads" provide a hierarchy of messages where replies are
   linked to their parent message(s). This organizational form is
   extremely useful in mailing lists where different parts of the
   discussion diverge. Mutt displays threads as a tree structure.

   In Mutt, when a mailbox is [660]ssoorrtteedd by _t_h_r_e_a_d_s, there are a few
   additional functions available in the _i_n_d_e_x and _p_a_g_e_r modes as shown in
   [661]TTaabbllee  22..1100,,  ""MMoosstt  ccoommmmoonn  tthhrreeaadd  mmooddee  kkeeyyss"".

   _T_a_b_l_e_ _2_._1_0_._ _M_o_s_t_ _c_o_m_m_o_n_ _t_h_r_e_a_d_ _m_o_d_e_ _k_e_y_s
   Key Function Description
   ^D <delete-thread> delete all messages in the current thread
   ^U <undelete-thread> undelete all messages in the current thread
   ^N <next-thread> jump to the start of the next thread
   ^P <previous-thread> jump to the start of the previous thread
   ^R <read-thread> mark the current thread as read
   Esc d <delete-subthread> delete all messages in the current subthread
   Esc u <undelete-subthread> undelete all messages in the current
   subthread
   Esc n <next-subthread> jump to the start of the next subthread
   Esc p <previous-subthread> jump to the start of the previous subthread
   Esc r <read-subthread> mark the current subthread as read
   Esc t <tag-thread> toggle the tag on the current thread
   Esc v <collapse-thread> toggle collapse for the current thread
   Esc V <collapse-all> toggle collapse for all threads
   P <parent-message> jump to parent message in thread

   Collapsing a thread displays only the first message in the thread and
   hides the others. This is useful when threads contain so many messages
   that you can only see a handful of threads on the screen. See %M in
   [662]$$iinnddeexx__ffoorrmmaatt. For example, you could use "%?M?(#%03M)&(%4l)?" in
   [663]$$iinnddeexx__ffoorrmmaatt to optionally display the number of hidden messages
   if the thread is collapsed. The %?<char>?<if-part>&<else-part>? syntax
   is explained in detail in [664]ffoorrmmaatt  ssttrriinngg  ccoonnddiittiioonnaallss.

   Technically, every reply should contain a list of its parent messages
   in the thread tree, but not all do. In these cases, Mutt groups them by
   subject which can be controlled using the [665]$$ssttrriicctt__tthhrreeaaddss
   variable.

5.4. Miscellaneous Functions

   In addition, the _i_n_d_e_x and _p_a_g_e_r menus have these interesting
   functions:

   <create-alias> (default: a)
          Creates a new alias based upon the current message (or prompts
          for a new one). Once editing is complete, an [666]aalliiaass command
          is added to the file specified by the [667]$$aalliiaass__ffiillee variable
          for future use

Note

          Mutt does not read the [668]$$aalliiaass__ffiillee upon startup so you must
          explicitly [669]ssoouurrccee the file.

   <check-traditional-pgp> (default: Esc P)
          This function will search the current message for content signed
          or encrypted with PGP the "traditional" way, that is, without
          proper MIME tagging. Technically, this function will temporarily
          change the MIME content types of the body parts containing PGP
          data; this is similar to the [670]<<eeddiitt--ttyyppee>> function's effect.

   <edit> (default: e)
          This command (available in the index and pager) allows you to
          edit the raw current message as it's present in the mail folder.
          After you have finished editing, the changed message will be
          appended to the current folder, and the original message will be
          marked for deletion; if the message is unchanged it won't be
          replaced.

   <edit-type> (default: ^E on the attachment menu, and in the pager and
          index menus; ^T on the compose menu)
          This command is used to temporarily edit an attachment's content
          type to fix, for instance, bogus character set parameters. When
          invoked from the index or from the pager, you'll have the
          opportunity to edit the top-level attachment's content type. On
          the [671]aattttaacchhmmeenntt  mmeennuu, you can change any attachment's
          content type. These changes are not persistent, and get lost
          upon changing folders.

          Note that this command is also available on the [672]ccoommppoossee
          mmeennuu. There, it's used to fine-tune the properties of
          attachments you are going to send.

   <enter-command> (default: ":")
          This command is used to execute any command you would normally
          put in a configuration file. A common use is to check the
          settings of variables, or in conjunction with [673]mmaaccrrooss to
          change settings on the fly.

   <extract-keys> (default: ^K)
          This command extracts PGP public keys from the current or tagged
          message(s) and adds them to your PGP public key ring.

   <forget-passphrase> (default: ^F)
          This command wipes the passphrase(s) from memory. It is useful,
          if you misspelled the passphrase.

   <list-reply> (default: L)
          Reply to the current or tagged message(s) by extracting any
          addresses which match the regular expressions given by the
          [674]lliissttss  oorr  ssuubbssccrriibbee commands, but also honor any
          Mail-Followup-To header(s) if the [675]$$hhoonnoorr__ffoolllloowwuupp__ttoo
          configuration variable is set. In addition, the List-Post header
          field is examined for mailto: URLs specifying a mailing list
          address. Using this when replying to messages posted to mailing
          lists helps avoid duplicate copies being sent to the author of
          the message you are replying to.

   <pipe-message> (default: |)
          Asks for an external Unix command and pipes the current or
          tagged message(s) to it. The variables [676]$$ppiippee__ddeeccooddee,
          [677]$$ppiippee__sspplliitt, [678]$$ppiippee__sseepp and [679]$$wwaaiitt__kkeeyy control the
          exact behavior of this function.

   <resend-message> (default: Esc e)
          Mutt takes the current message as a template for a new message.
          This function is best described as "recall from arbitrary
          folders". It can conveniently be used to forward MIME messages
          while preserving the original mail structure. Note that the
          amount of headers included here depends on the value of the
          [680]$$wweeeedd variable.

          This function is also available from the attachment menu. You
          can use this to easily resend a message which was included with
          a bounce message as a message/rfc822 body part.

   <shell-escape> (default: !)
          Asks for an external Unix command and executes it. The
          [681]$$wwaaiitt__kkeeyy can be used to control whether Mutt will wait for
          a key to be pressed when the command returns (presumably to let
          the user read the output of the command), based on the return
          status of the named command. If no command is given, an
          interactive shell is executed.

   <toggle-quoted> (default: T)
          The pager uses the [682]$$qquuoottee__rreeggeexxpp variable to detect quoted
          text when displaying the body of the message. This function
          toggles the display of the quoted material in the message. It is
          particularly useful when being interested in just the response
          and there is a large amount of quoted text in the way.

   <skip-quoted> (default: S)
          This function will go to the next line of non-quoted text which
          comes after a line of quoted text in the internal pager.

6. Sending Mail

6.1. Introduction

   The bindings shown in [683]TTaabbllee  22..1111,,  ""MMoosstt  ccoommmmoonn  mmaaiill  sseennddiinngg  kkeeyyss""
   are available in the _i_n_d_e_x and _p_a_g_e_r to start a new message.

   _T_a_b_l_e_ _2_._1_1_._ _M_o_s_t_ _c_o_m_m_o_n_ _m_a_i_l_ _s_e_n_d_i_n_g_ _k_e_y_s
    Key    Function              Description
   m     <compose>     compose a new message
   r     <reply>       reply to sender
   g     <group-reply> reply to all recipients
   L     <list-reply>  reply to mailing list address
   f     <forward>     forward message
   b     <bounce>      bounce (remail) message
   Esc k <mail-key>    mail a PGP public key to someone

   _B_o_u_n_c_i_n_g a message sends the message as-is to the recipient you
   specify. _F_o_r_w_a_r_d_i_n_g a message allows you to add comments or modify the
   message you are forwarding. These items are discussed in greater detail
   in the next section "[684]FFoorrwwaarrddiinngg  aanndd  BBoouunncciinngg  MMaaiill."

   Mutt will then enter the _c_o_m_p_o_s_e menu and prompt you for the recipients
   to place on the "To:" header field when you hit m to start a new
   message. Next, it will ask you for the "Subject:" field for the
   message, providing a default if you are replying to or forwarding a
   message. You again have the chance to adjust recipients, subject, and
   security settings right before actually sending the message. See also
   [685]$$aasskkcccc, [686]$$aasskkbbcccc, [687]$$aauuttooeeddiitt, [688]$$bboouunnccee,
   [689]$$ffaasstt__rreeppllyy, and [690]$$iinncclluuddee for changing how and if Mutt asks
   these questions.

   When replying, Mutt fills these fields with proper values depending on
   the reply type. The types of replying supported are:

   Simple reply
          Reply to the author directly.

   Group reply
          Reply to the author as well to all recipients except you; this
          consults [691]aalltteerrnnaatteess.

   List reply
          Reply to all mailing list addresses found, either specified via
          configuration or auto-detected. See [692]SSeeccttiioonn  1122,,  ""MMaaiilliinngg
          LLiissttss"" for details.

   After getting recipients for new messages, forwards or replies, Mutt
   will then automatically start your [693]$$eeddiittoorr on the message body. If
   the [694]$$eeddiitt__hheeaaddeerrss variable is set, the headers will be at the top
   of the message in your editor; the message body should start on a new
   line after the existing blank line at the end of headers. Any messages
   you are replying to will be added in sort order to the message, with
   appropriate [695]$$aattttrriibbuuttiioonn, [696]$$iinnddeenntt__ssttrriinngg and
   [697]$$ppoosstt__iinnddeenntt__ssttrriinngg. When forwarding a message, if the
   [698]$$mmiimmee__ffoorrwwaarrdd variable is unset, a copy of the forwarded message
   will be included. If you have specified a [699]$$ssiiggnnaattuurree, it will be
   appended to the message.

   Once you have finished editing the body of your mail message, you are
   returned to the _c_o_m_p_o_s_e menu providing the functions shown in
   [700]TTaabbllee  22..1122,,  ""MMoosstt  ccoommmmoonn  ccoommppoossee  mmeennuu  kkeeyyss"" to modify, send or
   postpone the message.

   _T_a_b_l_e_ _2_._1_2_._ _M_o_s_t_ _c_o_m_m_o_n_ _c_o_m_p_o_s_e_ _m_e_n_u_ _k_e_y_s
    Key       Function                       Description
   a     <attach-file>       attach a file
   A     <attach-message>    attach message(s) to the message
   Esc k <attach-key>        attach a PGP public key
   d     <edit-description>  edit description on attachment
   D     <detach-file>       detach a file
   t     <edit-to>           edit the To field
   Esc f <edit-from>         edit the From field
   r     <edit-reply-to>     edit the Reply-To field
   c     <edit-cc>           edit the Cc field
   b     <edit-bcc>          edit the Bcc field
   y     <send-message>      send the message
   s     <edit-subject>      edit the Subject
   S     <smime-menu>        select S/MIME options
   f     <edit-fcc>          specify an "Fcc" mailbox
   p     <pgp-menu>          select PGP options
   P     <postpone-message>  postpone this message until later
   q     <quit>              quit (abort) sending the message
   w     <write-fcc>         write the message to a folder
   i     <ispell>            check spelling (if available on your system)
   ^F    <forget-passphrase> wipe passphrase(s) from memory

   The compose menu is also used to edit the attachments for a message
   which can be either files or other messages. The <attach-message>
   function to will prompt you for a folder to attach messages from. You
   can now tag messages in that folder and they will be attached to the
   message you are sending.

Note

   Note that certain operations like composing a new mail, replying,
   forwarding, etc. are not permitted when you are in that folder. The %r
   in [701]$$ssttaattuuss__ffoorrmmaatt will change to a "A" to indicate that you are in
   attach-message mode.

6.2. Editing the Message Header

   When editing the header because of [702]$$eeddiitt__hheeaaddeerrss being set, there
   are a several pseudo headers available which will not be included in
   sent messages but trigger special Mutt behavior.

6.2.1. Fcc: Pseudo Header

   If you specify

   Fcc: _f_i_l_e_n_a_m_e

   as a header, Mutt will pick up _f_i_l_e_n_a_m_e just as if you had used the
   <edit-fcc> function in the _c_o_m_p_o_s_e menu. It can later be changed from
   the compose menu.

6.2.2. Attach: Pseudo Header

   You can also attach files to your message by specifying

   Attach: _f_i_l_e_n_a_m_e [ _d_e_s_c_r_i_p_t_i_o_n ]

   where _f_i_l_e_n_a_m_e is the file to attach and _d_e_s_c_r_i_p_t_i_o_n is an optional
   string to use as the description of the attached file. Spaces in
   filenames have to be escaped using backslash ("\"). The file can be
   removed as well as more added from the compose menu.

6.2.3. Pgp: Pseudo Header

   If you want to use PGP, you can specify

   Pgp: [ E | S | S_<_i_d_> ]

   "E" selects encryption, "S" selects signing and "S<id>" selects signing
   with the given key, setting [703]$$ppggpp__ssiiggnn__aass permanently. The
   selection can later be changed in the compose menu.

6.2.4. In-Reply-To: Header

   When replying to messages, the _I_n_-_R_e_p_l_y_-_T_o_: header contains the
   Message-Id of the message(s) you reply to. If you remove or modify its
   value, Mutt will not generate a _R_e_f_e_r_e_n_c_e_s_: field, which allows you to
   create a new message thread, for example to create a new message to a
   mailing list without having to enter the mailing list's address.

   If you intend to start a new thread by replying, please make really
   sure you remove the _I_n_-_R_e_p_l_y_-_T_o_: header in your editor. Otherwise,
   though you'll produce a technically valid reply, some netiquette
   guardians will be annoyed by this so-called "thread hijacking".

6.3. Sending Cryptographically Signed/Encrypted Messages

   If you have told Mutt to PGP or S/MIME encrypt a message, it will guide
   you through a key selection process when you try to send the message.
   Mutt will not ask you any questions about keys which have a certified
   user ID matching one of the message recipients' mail addresses.
   However, there may be situations in which there are several keys,
   weakly certified user ID fields, or where no matching keys can be
   found.

   In these cases, you are dropped into a menu with a list of keys from
   which you can select one. When you quit this menu, or Mutt can't find
   any matching keys, you are prompted for a user ID. You can, as usually,
   abort this prompt using ^G. When you do so, Mutt will return to the
   compose screen.

   Once you have successfully finished the key selection, the message will
   be encrypted using the selected public keys when sent out.

   Most fields of the entries in the key selection menu (see also
   [704]$$ppggpp__eennttrryy__ffoorrmmaatt) have obvious meanings. But some explanations on
   the capabilities, flags, and validity fields are in order.

   The flags sequence ("%f") will expand to one of the flags in
   [705]TTaabbllee  22..1133,,  ""PPGGPP  kkeeyy  mmeennuu  ffllaaggss"".

   _T_a_b_l_e_ _2_._1_3_._ _P_G_P_ _k_e_y_ _m_e_n_u_ _f_l_a_g_s
   Flag                    Description
   R    The key has been revoked and can't be used.
   X    The key is expired and can't be used.
   d    You have marked the key as disabled.
   c    There are unknown critical self-signature packets.

   The capabilities field ("%c") expands to a two-character sequence
   representing a key's capabilities. The first character gives the key's
   encryption capabilities: A minus sign ("-") means that the key cannot
   be used for encryption. A dot (".") means that it's marked as a
   signature key in one of the user IDs, but may also be used for
   encryption. The letter "e" indicates that this key can be used for
   encryption.

   The second character indicates the key's signing capabilities. Once
   again, a "-" implies "not for signing", "." implies that the key is
   marked as an encryption key in one of the user-ids, and "s" denotes a
   key which can be used for signing.

   Finally, the validity field ("%t") indicates how well-certified a
   user-id is. A question mark ("?") indicates undefined validity, a minus
   character ("-") marks an untrusted association, a space character means
   a partially trusted association, and a plus character ("+") indicates
   complete validity.

6.4. Sending Format=Flowed Messages

6.4.1. Concept

   format=flowed-style messages (or f=f for short) are text/plain messages
   that consist of paragraphs which a receiver's mail client may reformat
   to its own needs which mostly means to customize line lengths
   regardless of what the sender sent. Technically this is achieved by
   letting lines of a "flowable" paragraph end in spaces except for the
   last line.

   While for text-mode clients like Mutt it's the best way to assume only
   a standard 80x25 character cell terminal, it may be desired to let the
   receiver decide completely how to view a message.

6.4.2. Mutt Support

   Mutt only supports setting the required format=flowed MIME parameter on
   outgoing messages if the [706]$$tteexxtt__fflloowweedd variable is set,
   specifically it does not add the trailing spaces.

   After editing the initial message text and before entering the compose
   menu, Mutt properly space-stuffs the message. _S_p_a_c_e_-_s_t_u_f_f_i_n_g is
   required by RfC3676 defining format=flowed and means to prepend a space
   to:
     * all lines starting with a space
     * lines starting with the word "From" followed by space
     * all lines starting with ">" which is not intended to be a quote
       character

Note

   Mutt only supports space-stuffing for the first two types of lines but
   not for the third: It is impossible to safely detect whether a leading
   > character starts a quote or not. Furthermore, Mutt only applies
   space-stuffing _o_n_c_e after the initial edit is finished.

   All leading spaces are to be removed by receiving clients to restore
   the original message prior to further processing.

6.4.3. Editor Considerations

   As Mutt provides no additional features to compose f=f messages, it's
   completely up to the user and his editor to produce proper messages.
   Please consider your editor's documentation if you intend to send f=f
   messages.

   Please note that when editing messages from the compose menu several
   times before really sending a mail, it's up to the user to ensure that
   the message is properly space-stuffed.

   For example, _v_i_m provides the w flag for its formatoptions setting to
   assist in creating f=f messages, see :help fo-table for details.

6.4.4. Reformatting

   Mutt has some support for reformatting when viewing and replying to
   format=flowed messages. In order to take advantage of these,
   [707]$$rreeffllooww__tteexxtt must be set.
     * Paragraphs are automatically reflowed and wrapped at a width
       specified by [708]$$rreeffllooww__wwrraapp.
     * In its original format, the quoting style of format=flowed messages
       can be difficult to read, and doesn't intermix well with non-flowed
       replies. Setting [709]$$rreeffllooww__ssppaaccee__qquuootteess adds spaces after each
       level of quoting when in the pager and replying in a non-flowed
       format (i.e. with [710]$$tteexxtt__fflloowweedd unset).
     * If [711]$$rreeffllooww__ssppaaccee__qquuootteess is unset, mutt will still add one
       trailing space after all the quotes in the pager (but not when
       replying).

7. Forwarding and Bouncing Mail

   Bouncing and forwarding let you send an existing message to recipients
   that you specify. Bouncing a message sends a verbatim copy of a message
   to alternative addresses as if they were the message's original
   recipients specified in the Bcc header. Forwarding a message, on the
   other hand, allows you to modify the message before it is resent (for
   example, by adding your own comments). Bouncing is done using the
   <bounce> function and forwarding using the <forward> function bound to
   "b" and "f" respectively.

   Forwarding can be done by including the original message in the new
   message's body (surrounded by indicating lines) or including it as a
   MIME attachment, depending on the value of the [712]$$mmiimmee__ffoorrwwaarrdd
   variable. Decoding of attachments, like in the pager, can be controlled
   by the [713]$$ffoorrwwaarrdd__ddeeccooddee and [714]$$mmiimmee__ffoorrwwaarrdd__ddeeccooddee variables,
   respectively. The desired forwarding format may depend on the content,
   therefore [715]$$mmiimmee__ffoorrwwaarrdd is a quadoption which, for example, can be
   set to "ask-no".

   The inclusion of headers is controlled by the current setting of the
   [716]$$wweeeedd variable, unless [717]$$mmiimmee__ffoorrwwaarrdd is set.

   Editing the message to forward follows the same procedure as sending or
   replying to a message does.

8. Postponing Mail

   At times it is desirable to delay sending a message that you have
   already begun to compose. When the <postpone-message> function is used
   in the _c_o_m_p_o_s_e menu, the body of your message and attachments are
   stored in the mailbox specified by the [718]$$ppoossttppoonneedd variable. This
   means that you can recall the message even if you exit Mutt and then
   restart it at a later time.

   Once a message is postponed, there are several ways to resume it. From
   the command line you can use the "-p" option, or if you compose a new
   message from the _i_n_d_e_x or _p_a_g_e_r you will be prompted if postponed
   messages exist. If multiple messages are currently postponed, the
   _p_o_s_t_p_o_n_e_d menu will pop up and you can select which message you would
   like to resume.

Note

   If you postpone a reply to a message, the reply setting of the message
   is only updated when you actually finish the message and send it. Also,
   you must be in the same folder with the message you replied to for the
   status of the message to be updated.

   See also the [719]$$ppoossttppoonnee quad-option.

Chapter 3. Configuration

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [720]11..  LLooccaattiioonn  ooff  IInniittiiaalliizzaattiioonn  FFiilleess
   [721]22..  SSyynnttaaxx  ooff  IInniittiiaalliizzaattiioonn  FFiilleess
   [722]33..  AAddddrreessss  GGrroouuppss
   [723]44..  DDeeffiinniinngg//UUssiinngg  AAlliiaasseess
   [724]55..  CChhaannggiinngg  tthhee  DDeeffaauulltt  KKeeyy  BBiinnddiinnggss
   [725]66..  DDeeffiinniinngg  AAlliiaasseess  ffoorr  CChhaarraacctteerr  SSeettss
   [726]77..  SSeettttiinngg  VVaarriiaabblleess  BBaasseedd  UUppoonn  MMaaiillbbooxx
   [727]88..  KKeeyybbooaarrdd  MMaaccrrooss
   [728]99..  UUssiinngg  CCoolloorr  aanndd  MMoonnoo  VViiddeeoo  AAttttrriibbuutteess
   [729]1100..  MMeessssaaggee  HHeeaaddeerr  DDiissppllaayy

        [730]1100..11..  HHeeaaddeerr  DDiissppllaayy
        [731]1100..22..  SSeelleeccttiinngg  HHeeaaddeerrss
        [732]1100..33..  OOrrddeerriinngg  DDiissppllaayyeedd  HHeeaaddeerrss

   [733]1111..  AAlltteerrnnaattiivvee  AAddddrreesssseess
   [734]1122..  MMaaiilliinngg  LLiissttss
   [735]1133..  UUssiinngg  MMuullttiippllee  SSppooooll  MMaaiillbbooxxeess
   [736]1144..  MMoonniittoorriinngg  IInnccoommiinngg  MMaaiill
   [737]1155..  UUsseerr--DDeeffiinneedd  HHeeaaddeerrss
   [738]1166..  SSppeecciiffyy  DDeeffaauulltt  SSaavvee  MMaaiillbbooxx
   [739]1177..  SSppeecciiffyy  DDeeffaauulltt  FFcccc::  MMaaiillbbooxx  WWhheenn  CCoommppoossiinngg
   [740]1188..  SSppeecciiffyy  DDeeffaauulltt  SSaavvee  FFiilleennaammee  aanndd  DDeeffaauulltt  FFcccc::  MMaaiillbbooxx  aatt  OOnnccee
   [741]1199..  CChhaannggee  SSeettttiinnggss  BBaasseedd  UUppoonn  MMeessssaaggee  RReecciippiieennttss
   [742]2200..  CChhaannggee  SSeettttiinnggss  BBeeffoorree  FFoorrmmaattttiinngg  aa  MMeessssaaggee
   [743]2211..  CChhoooossiinngg  tthhee  CCrryyppttooggrraapphhiicc  KKeeyy  ooff  tthhee  RReecciippiieenntt
   [744]2222..  AAddddiinngg  KKeeyy  SSeeqquueenncceess  ttoo  tthhee  KKeeyybbooaarrdd  BBuuffffeerr
   [745]2233..  EExxeeccuuttiinngg  FFuunnccttiioonnss
   [746]2244..  MMeessssaaggee  SSccoorriinngg
   [747]2255..  SSppaamm  DDeetteeccttiioonn
   [748]2266..  SSeettttiinngg  aanndd  QQuueerryyiinngg  VVaarriiaabblleess

        [749]2266..11..  VVaarriiaabbllee  TTyyppeess
        [750]2266..22..  CCoommmmaannddss
        [751]2266..33..  UUsseerr--DDeeffiinneedd  VVaarriiaabblleess
        [752]2266..44..  TTyyppee  CCoonnvveerrssiioonnss

   [753]2277..  RReeaaddiinngg  IInniittiiaalliizzaattiioonn  CCoommmmaannddss  FFrroomm  AAnnootthheerr  FFiillee
   [754]2288..  RReemmoovviinngg  HHooookkss
   [755]2299..  FFoorrmmaatt  SSttrriinnggss

        [756]2299..11..  BBaassiicc  uussaaggee
        [757]2299..22..  CCoonnddiittiioonnaallss
        [758]2299..33..  FFiilltteerrss
        [759]2299..44..  PPaaddddiinngg

   [760]3300..  CCoonnttrrooll  aalllloowweedd  hheeaaddeerr  ffiieellddss  iinn  aa  mmaaiillttoo::  UURRLL

1. Location of Initialization Files

   While the default configuration (or "preferences") make Mutt usable
   right out of the box, it is often desirable to tailor Mutt to suit your
   own tastes. When Mutt is first invoked, it will attempt to read the
   "system" configuration file (defaults set by your local system
   administrator), unless the "-n" [761]ccoommmmaanndd  lliinnee option is specified.
   This file is typically /usr/local/share/mutt/Muttrc or /etc/Muttrc.
   Mutt will next look for a file named .muttrc in your home directory. If
   this file does not exist and your home directory has a subdirectory
   named .mutt, Mutt tries to load a file named .mutt/muttrc.

   .muttrc is the file where you will usually place your [762]ccoommmmaannddss to
   configure Mutt.

   In addition, Mutt supports version specific configuration files that
   are parsed instead of the default files as explained above. For
   instance, if your system has a Muttrc-0.88 file in the system
   configuration directory, and you are running version 0.88 of Mutt, this
   file will be sourced instead of the Muttrc file. The same is true of
   the user configuration file, if you have a file .muttrc-0.88.6 in your
   home directory, when you run Mutt version 0.88.6, it will source this
   file instead of the default .muttrc file. The version number is the
   same which is visible using the "-v" [763]ccoommmmaanndd  lliinnee switch or using
   the show-version key (default: V) from the index menu.

2. Syntax of Initialization Files

   An initialization file consists of a series of [764]ccoommmmaannddss. Each line
   of the file may contain one or more commands. When multiple commands
   are used, they must be separated by a semicolon (";").

   _E_x_a_m_p_l_e_ _3_._1_._ _M_u_l_t_i_p_l_e_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _c_o_m_m_a_n_d_s_ _p_e_r_ _l_i_n_e
set realname='Mutt user' ; ignore x-

   The hash mark, or pound sign ("#"), is used as a "comment" character.
   You can use it to annotate your initialization file. All text after the
   comment character to the end of the line is ignored.

   _E_x_a_m_p_l_e_ _3_._2_._ _C_o_m_m_e_n_t_i_n_g_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _f_i_l_e_s
my_hdr X-Disclaimer: Why are you listening to me? # This is a comment

   Single quotes ("'") and double quotes (""") can be used to quote
   strings which contain spaces or other special characters. The
   difference between the two types of quotes is similar to that of many
   popular shell programs, namely that a single quote is used to specify a
   literal string (one that is not interpreted for shell variables or
   quoting with a backslash [see next paragraph]), while double quotes
   indicate a string for which should be evaluated. For example, backticks
   are evaluated inside of double quotes, but _n_o_t for single quotes.

   "\" quotes the next character, just as in shells such as bash and zsh.
   For example, if want to put quotes """ inside of a string, you can use
   "\" to force the next character to be a literal instead of interpreted
   character.

   _E_x_a_m_p_l_e_ _3_._3_._ _E_s_c_a_p_i_n_g_ _q_u_o_t_e_s_ _i_n_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _f_i_l_e_s
set realname="Michael \"MuttDude\" Elkins"

   "\\" means to insert a literal "\" into the line. "\n" and "\r" have
   their usual C meanings of linefeed and carriage-return, respectively.

   A "\" at the end of a line can be used to split commands over multiple
   lines as it "escapes" the line end, provided that the split points
   don't appear in the middle of command names. Lines are first
   concatenated before interpretation so that a multi-line can be
   commented by commenting out the first line only.

   _E_x_a_m_p_l_e_ _3_._4_._ _S_p_l_i_t_t_i_n_g_ _l_o_n_g_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _c_o_m_m_a_n_d_s_ _o_v_e_r_ _s_e_v_e_r_a_l_ _l_i_n_e_s
set status_format="some very \
long value split \
over several lines"

   It is also possible to substitute the output of a Unix command in an
   initialization file. This is accomplished by enclosing the command in
   backticks (``). In [765]EExxaammppllee  33..55,,  ""UUssiinngg  eexxtteerrnnaall  ccoommmmaanndd''ss  oouuttppuutt
   iinn  ccoonnffiigguurraattiioonn  ffiilleess"", the output of the Unix command "uname -a" will
   be substituted before the line is parsed. Since initialization files
   are line oriented, only the first line of output from the Unix command
   will be substituted.

   _E_x_a_m_p_l_e_ _3_._5_._ _U_s_i_n_g_ _e_x_t_e_r_n_a_l_ _c_o_m_m_a_n_d_'_s_ _o_u_t_p_u_t_ _i_n_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _f_i_l_e_s
my_hdr X-Operating-System: `uname -a`

   Both environment variables and Mutt variables can be accessed by
   prepending "$" to the name of the variable. For example,

   _E_x_a_m_p_l_e_ _3_._6_._ _U_s_i_n_g_ _e_n_v_i_r_o_n_m_e_n_t_ _v_a_r_i_a_b_l_e_s_ _i_n_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _f_i_l_e_s
set record=+sent_on_$HOSTNAME

   will cause Mutt to save outgoing messages to a folder named
   "sent_on_kremvax" if the environment variable $HOSTNAME is set to
   "kremvax." (See [766]$$rreeccoorrdd for details.)

   Mutt expands the variable when it is assigned, not when it is used. If
   the value of a variable on the right-hand side of an assignment changes
   after the assignment, the variable on the left-hand side will not be
   affected.

   The commands understood by Mutt are explained in the next paragraphs.
   For a complete list, see the [767]ccoommmmaanndd  rreeffeerreennccee.

   All configuration files are expected to be in the current locale as
   specified by the [768]$$cchhaarrsseett variable which doesn't have a default
   value since it's determined by Mutt at startup. If a configuration file
   is not encoded in the same character set the [769]$$ccoonnffiigg__cchhaarrsseett
   variable should be used: all lines starting with the next are recoded
   from [770]$$ccoonnffiigg__cchhaarrsseett to [771]$$cchhaarrsseett.

   This mechanism should be avoided if possible as it has the following
   implications:
     * These variables should be set early in a configuration file with
       [772]$$cchhaarrsseett preceding [773]$$ccoonnffiigg__cchhaarrsseett so Mutt knows what
       character set to convert to.
     * If [774]$$ccoonnffiigg__cchhaarrsseett is set, it should be set in each
       configuration file because the value is global and _n_o_t per
       configuration file.
     * Because Mutt first recodes a line before it attempts to parse it, a
       conversion introducing question marks or other characters as part
       of errors (unconvertable characters, transliteration) may introduce
       syntax errors or silently change the meaning of certain tokens
       (e.g. inserting question marks into regular expressions).

3. Address Groups

   Usage:

   group [ -group _n_a_m_e ...] { -rx _e_x_p_r ... | -addr _e_x_p_r ... }
   ungroup [ -group _n_a_m_e ...] { _* | -rx _e_x_p_r ... | -addr _e_x_p_r ... }

   Mutt supports grouping addresses logically into named groups. An
   address or address pattern can appear in several groups at the same
   time. These groups can be used in [775]ppaatttteerrnnss (for searching,
   limiting and tagging) and in hooks by using group patterns. This can be
   useful to classify mail and take certain actions depending on in what
   groups the message is. For example, the mutt user's mailing list would
   fit into the categories "mailing list" and "mutt-related". Using
   [776]sseenndd--hhooookk, the sender can be set to a dedicated one for writing
   mailing list messages, and the signature could be set to a mutt-related
   one for writing to a mutt list -- for other lists, the list sender
   setting still applies but a different signature can be selected. Or,
   given a group only containing recipients known to accept encrypted
   mail, "auto-encryption" can be achieved easily.

   The _g_r_o_u_p command is used to directly add either addresses or regular
   expressions to the specified group or groups. The different categories
   of arguments to the _g_r_o_u_p command can be in any order. The flags -rx
   and -addr specify what the following strings (that cannot begin with a
   hyphen) should be interpreted as: either a regular expression or an
   email address, respectively.

   These address groups can also be created implicitly by the [777]aalliiaass,
   [778]lliissttss, [779]ssuubbssccrriibbee and [780]aalltteerrnnaatteess commands by specifying
   the optional -group option. For example,
alternates -group me address1 address2
alternates -group me -group work address3

   would create a group named "me" which contains all your addresses and a
   group named "work" which contains only your work address _a_d_d_r_e_s_s_3.
   Besides many other possibilities, this could be used to automatically
   mark your own messages in a mailing list folder as read or use a
   special signature for work-related messages.

   The _u_n_g_r_o_u_p command is used to remove addresses or regular expressions
   from the specified group or groups. The syntax is similar to the _g_r_o_u_p
   command, however the special character * can be used to empty a group
   of all of its contents. As soon as a group gets empty because all
   addresses and regular expressions have been removed, it'll internally
   be removed, too (i.e. there cannot be an empty group). When removing
   regular expressions from a group, the pattern must be specified exactly
   as given to the _g_r_o_u_p command or -group argument.

4. Defining/Using Aliases

   Usage:

   alias [ -group _n_a_m_e ...] _k_e_y _a_d_d_r_e_s_s [ _a_d_d_r_e_s_s ...]
   unalias [ -group _n_a_m_e ...] { _* | _k_e_y ... }

   It's usually very cumbersome to remember or type out the address of
   someone you are communicating with. Mutt allows you to create "aliases"
   which map a short string to a full address.

Note

   If you want to create an alias for more than one address, you _m_u_s_t
   separate the addresses with a comma (",").

   The optional -group argument to _a_l_i_a_s causes the aliased address(es) to
   be added to the named _g_r_o_u_p.

   To remove an alias or aliases ("*" means all aliases):
alias muttdude me@cs.hmc.edu (Michael Elkins)
alias theguys manny, moe, jack

   Unlike other mailers, Mutt doesn't require aliases to be defined in a
   special file. The _a_l_i_a_s command can appear anywhere in a configuration
   file, as long as this file is [781]ssoouurrcceedd. Consequently, you can have
   multiple alias files, or you can have all aliases defined in your
   .muttrc.

   On the other hand, the [782]<<ccrreeaattee--aalliiaass>> function can use only one
   file, the one pointed to by the [783]$$aalliiaass__ffiillee variable (which is
   ~/.muttrc by default). This file is not special either, in the sense
   that Mutt will happily append aliases to any file, but in order for the
   new aliases to take effect you need to explicitly [784]ssoouurrccee this file
   too.

   _E_x_a_m_p_l_e_ _3_._7_._ _C_o_n_f_i_g_u_r_i_n_g_ _e_x_t_e_r_n_a_l_ _a_l_i_a_s_ _f_i_l_e_s
source /usr/local/share/Mutt.aliases
source ~/.mail_aliases
set alias_file=~/.mail_aliases

   To use aliases, you merely use the alias at any place in Mutt where
   Mutt prompts for addresses, such as the _T_o_: or _C_c_: prompt. You can also
   enter aliases in your editor at the appropriate headers if you have the
   [785]$$eeddiitt__hheeaaddeerrss variable set.

   In addition, at the various address prompts, you can use the tab
   character to expand a partial alias to the full alias. If there are
   multiple matches, Mutt will bring up a menu with the matching aliases.
   In order to be presented with the full list of aliases, you must hit
   tab without a partial alias, such as at the beginning of the prompt or
   after a comma denoting multiple addresses.

   In the alias menu, you can select as many aliases as you want with the
   select-entry key (default: <Return>), and use the _e_x_i_t key (default: q)
   to return to the address prompt.

5. Changing the Default Key Bindings

   Usage:

   bind _m_a_p _k_e_y _f_u_n_c_t_i_o_n

   This command allows you to change the default key bindings (operation
   invoked when pressing a key).

   _m_a_p specifies in which menu the binding belongs. Multiple maps may be
   specified by separating them with commas (no additional whitespace is
   allowed). The currently defined maps are:

   generic
          This is not a real menu, but is used as a fallback for all of
          the other menus except for the pager and editor modes. If a key
          is not defined in another menu, Mutt will look for a binding to
          use in this menu. This allows you to bind a key to a certain
          function in multiple menus instead of having multiple _b_i_n_d
          statements to accomplish the same task.

   alias
          The alias menu is the list of your personal aliases as defined
          in your .muttrc. It is the mapping from a short alias name to
          the full email address(es) of the recipient(s).

   attach
          The attachment menu is used to access the attachments on
          received messages.

   browser
          The browser is used for both browsing the local directory
          structure, and for listing all of your incoming mailboxes.

   editor
          The editor is used to allow the user to enter a single line of
          text, such as the _T_o or _S_u_b_j_e_c_t prompts in the compose menu.

   index
          The index is the list of messages contained in a mailbox.

   compose
          The compose menu is the screen used when sending a new message.

   pager
          The pager is the mode used to display message/attachment data,
          and help listings.

   pgp
          The pgp menu is used to select the OpenPGP keys used to encrypt
          outgoing messages.

   smime
          The smime menu is used to select the OpenSSL certificates used
          to encrypt outgoing messages.

   postpone
          The postpone menu is similar to the index menu, except is used
          when recalling a message the user was composing, but saved until
          later.

   query
          The query menu is the browser for results returned by
          [786]$$qquueerryy__ccoommmmaanndd.

   mix
          The mixmaster screen is used to select remailer options for
          outgoing messages (if Mutt is compiled with Mixmaster support).

   _k_e_y is the key (or key sequence) you wish to bind. To specify a control
   character, use the sequence _\_C_x, where _x is the letter of the control
   character (for example, to specify control-A use "\Ca"). Note that the
   case of _x as well as _\_C is ignored, so that _\_C_A, _\_C_a, _\_c_A and _\_c_a are
   all equivalent. An alternative form is to specify the key as a three
   digit octal number prefixed with a "\" (for example _\_1_7_7 is equivalent
   to _\_c_?). In addition, _k_e_y may be a symbolic name as shown in
   [787]TTaabbllee  33..11,,  ""SSyymmbboolliicc  kkeeyy  nnaammeess"".

   _T_a_b_l_e_ _3_._1_._ _S_y_m_b_o_l_i_c_ _k_e_y_ _n_a_m_e_s
   Symbolic name       Meaning
   \t            tab
   <tab>         tab
   <backtab>     backtab / shift-tab
   \r            carriage return
   \n            newline
   \e            escape
   <esc>         escape
   <up>          up arrow
   <down>        down arrow
   <left>        left arrow
   <right>       right arrow
   <pageup>      Page Up
   <pagedown>    Page Down
   <backspace>   Backspace
   <delete>      Delete
   <insert>      Insert
   <enter>       Enter
   <return>      Return
   <home>        Home
   <end>         End
   <space>       Space bar
   <f1>          function key 1
   <f10>         function key 10

   The <what-key> function can be used to explore keycode and symbolic
   names for other keys on your keyboard. Executing this function will
   display information about each key pressed, until terminated by ^G.

   _k_e_y does not need to be enclosed in quotes unless it contains a space
   (" ") or semi-colon (";").

   _f_u_n_c_t_i_o_n specifies which action to take when _k_e_y is pressed. For a
   complete list of functions, see the [788]rreeffeerreennccee. Note that the _b_i_n_d
   expects _f_u_n_c_t_i_o_n to be specified without angle brackets.

   The special function <noop> unbinds the specified key sequence.

6. Defining Aliases for Character Sets

   Usage:

   charset-hook _a_l_i_a_s _c_h_a_r_s_e_t
   iconv-hook _c_h_a_r_s_e_t _l_o_c_a_l_-_c_h_a_r_s_e_t

   The _c_h_a_r_s_e_t_-_h_o_o_k command defines an alias for a character set. This is
   useful to properly display messages which are tagged with a character
   set name not known to Mutt.

   The _i_c_o_n_v_-_h_o_o_k command defines a system-specific name for a character
   set. This is helpful when your systems character conversion library
   insists on using strange, system-specific names for character sets.

7. Setting Variables Based Upon Mailbox

   Usage:

   folder-hook _[_!_]_r_e_g_e_x_p _c_o_m_m_a_n_d

   It is often desirable to change settings based on which mailbox you are
   reading. The _f_o_l_d_e_r_-_h_o_o_k command provides a method by which you can
   execute any configuration command. _r_e_g_e_x_p is a regular expression
   specifying in which mailboxes to execute _c_o_m_m_a_n_d before loading. If a
   mailbox matches multiple _f_o_l_d_e_r_-_h_o_o_ks, they are executed in the order
   given in the .muttrc.

   The regexp parameter has [789]mmaaiillbbooxx  sshhoorrttccuutt expansion performed on
   the first character. See [790]MMaaiillbbooxx  MMaattcchhiinngg  iinn  HHooookkss for more
   details.

Note

   If you use the "!" shortcut for [791]$$ssppoooollffiillee at the beginning of the
   pattern, you must place it inside of double or single quotes in order
   to distinguish it from the logical _n_o_t operator for the expression.

Note

   Settings are _n_o_t restored when you leave the mailbox. For example, a
   command action to perform is to change the sorting method based upon
   the mailbox being read:
folder-hook mutt "set sort=threads"

   However, the sorting method is not restored to its previous value when
   reading a different mailbox. To specify a _d_e_f_a_u_l_t command, use the
   pattern "." before other _f_o_l_d_e_r_-_h_o_o_ks adjusting a value on a per-folder
   basis because _f_o_l_d_e_r_-_h_o_o_ks are evaluated in the order given in the
   configuration file.

Note

   The keyboard buffer will not be processed until after all hooks are
   run; multiple [792]ppuusshh or [793]eexxeecc commands will end up being
   processed in reverse order.

   The following example will set the [794]ssoorrtt variable to date-sent for
   all folders but to threads for all folders containing "mutt" in their
   name.

   _E_x_a_m_p_l_e_ _3_._8_._ _S_e_t_t_i_n_g_ _s_o_r_t_ _m_e_t_h_o_d_ _b_a_s_e_d_ _o_n_ _m_a_i_l_b_o_x_ _n_a_m_e
folder-hook . "set sort=date-sent"
folder-hook mutt "set sort=threads"

8. Keyboard Macros

   Usage:

   macro _m_e_n_u _k_e_y _s_e_q_u_e_n_c_e [ _d_e_s_c_r_i_p_t_i_o_n ]

   Macros are useful when you would like a single key to perform a series
   of actions. When you press _k_e_y in menu _m_e_n_u, Mutt will behave as if you
   had typed _s_e_q_u_e_n_c_e. So if you have a common sequence of commands you
   type, you can create a macro to execute those commands with a single
   key or fewer keys.

   _m_e_n_u is the [795]mmaapp which the macro will be bound in. Multiple maps
   may be specified by separating multiple menu arguments by commas.
   Whitespace may not be used in between the menu arguments and the commas
   separating them.

   _k_e_y and _s_e_q_u_e_n_c_e are expanded by the same rules as the [796]kkeeyy
   bbiinnddiinnggss with some additions. The first is that control characters in
   _s_e_q_u_e_n_c_e can also be specified as _^_x. In order to get a caret ("^") you
   need to use _^_^. Secondly, to specify a certain key such as _u_p or to
   invoke a function directly, you can use the format _<_k_e_y_ _n_a_m_e_> and
   _<_f_u_n_c_t_i_o_n_ _n_a_m_e_>. For a listing of key names see the section on [797]kkeeyy
   bbiinnddiinnggss. Functions are listed in the [798]rreeffeerreennccee.

   The advantage with using function names directly is that the macros
   will work regardless of the current key bindings, so they are not
   dependent on the user having particular key definitions. This makes
   them more robust and portable, and also facilitates defining of macros
   in files used by more than one user (e.g., the system Muttrc).

   Optionally you can specify a descriptive text after _s_e_q_u_e_n_c_e, which is
   shown in the help screens if they contain a description.

Note

   Macro definitions (if any) listed in the help screen(s), are silently
   truncated at the screen width, and are not wrapped.

9. Using Color and Mono Video Attributes

   Usage:

   color _o_b_j_e_c_t _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d
   color { header | body } _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _r_e_g_e_x_p
   color index _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _p_a_t_t_e_r_n
   uncolor { index | header | body } { _* | _p_a_t_t_e_r_n ... }

   If your terminal supports color, you can spice up Mutt by creating your
   own color scheme. To define the color of an object (type of
   information), you must specify both a foreground color _a_n_d a background
   color (it is not possible to only specify one or the other).

   _h_e_a_d_e_r and _b_o_d_y match _r_e_g_e_x_p in the header/body of a message, _i_n_d_e_x
   matches _p_a_t_t_e_r_n (see [799]SSeeccttiioonn  33,,  ""PPaatttteerrnnss::  SSeeaarrcchhiinngg,,  LLiimmiittiinngg  aanndd
   TTaaggggiinngg"") in the message index. Note that IMAP server-side searches
   (=b, =B, =h) are not supported for color index patterns.

   _o_b_j_e_c_t can be one of:
     * attachment
     * bold (highlighting bold patterns in the body of messages)
     * error (error messages printed by Mutt)
     * hdrdefault (default color of the message header in the pager)
     * indicator (arrow or bar used to indicate the current item in a
       menu)
     * markers (the "+" markers at the beginning of wrapped lines in the
       pager)
     * message (informational messages)
     * normal
     * prompt
     * quoted (text matching [800]$$qquuoottee__rreeggeexxpp in the body of a message)
     * quoted1, quoted2, ..., quoted_N (higher levels of quoting)
     * search (highlighting of words in the pager)
     * signature
     * status (mode lines used to display info about the mailbox or
       message)
     * tilde (the "~" used to pad blank lines in the pager)
     * tree (thread tree drawn in the message index and attachment menu)
     * underline (highlighting underlined patterns in the body of
       messages)

   _f_o_r_e_g_r_o_u_n_d and _b_a_c_k_g_r_o_u_n_d can be one of the following:
     * white
     * black
     * green
     * magenta
     * blue
     * cyan
     * yellow
     * red
     * default
     * color_x

   _f_o_r_e_g_r_o_u_n_d can optionally be prefixed with the keyword bright to make
   the foreground color boldfaced (e.g., brightred).

   If your terminal supports it, the special keyword _d_e_f_a_u_l_t can be used
   as a transparent color. The value _b_r_i_g_h_t_d_e_f_a_u_l_t is also valid. If Mutt
   is linked against the _S_-_L_a_n_g library, you also need to set the
   $COLORFGBG environment variable to the default colors of your terminal
   for this to work; for example (for Bourne-like shells):
set COLORFGBG="green;black"
export COLORFGBG

Note

   The _S_-_L_a_n_g library requires you to use the _l_i_g_h_t_g_r_a_y and _b_r_o_w_n keywords
   instead of _w_h_i_t_e and _y_e_l_l_o_w when setting this variable.

Note

   The _u_n_c_o_l_o_r command can be applied to the index, header and body
   objects only. It removes entries from the list. You _m_u_s_t specify the
   same pattern specified in the _c_o_l_o_r command for it to be removed. The
   pattern "*" is a special token which means to clear the color list of
   all entries.

   Mutt also recognizes the keywords _c_o_l_o_r_0, _c_o_l_o_r_1, ..., _c_o_l_o_r_N_-_1 (_N
   being the number of colors supported by your terminal). This is useful
   when you remap the colors for your display (for example by changing the
   color associated with _c_o_l_o_r_2 for your xterm), since color names may
   then lose their normal meaning.

   If your terminal does not support color, it is still possible change
   the video attributes through the use of the "mono" command. Usage:

   mono _o_b_j_e_c_t _a_t_t_r_i_b_u_t_e
   mono { header | body } _a_t_t_r_i_b_u_t_e _r_e_g_e_x_p
   mono index _a_t_t_r_i_b_u_t_e _p_a_t_t_e_r_n
   unmono { index | header | body } { _* | _p_a_t_t_e_r_n ... }

   For _o_b_j_e_c_t, see the _c_o_l_o_r command. _a_t_t_r_i_b_u_t_e can be one of the
   following:
     * none
     * bold
     * underline
     * reverse
     * standout

10. Message Header Display

10.1. Header Display

   When displaying a message in the pager, Mutt folds long header lines at
   [801]$$wwrraapp columns. Though there're precise rules about where to break
   and how, Mutt always folds headers using a tab for readability. (Note
   that the sending side is not affected by this, Mutt tries to implement
   standards compliant folding.)

10.2. Selecting Headers

   Usage:

   ignore _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ...]
   unignore { _* | _p_a_t_t_e_r_n ... }

   Messages often have many header fields added by automatic processing
   systems, or which may not seem useful to display on the screen. This
   command allows you to specify header fields which you don't normally
   want to see in the pager.

   You do not need to specify the full header field name. For example,
   "ignore content-" will ignore all header fields that begin with the
   pattern "content-". "ignore *" will ignore all headers.

   To remove a previously added token from the list, use the "unignore"
   command. The "unignore" command will make Mutt display headers with the
   given pattern. For example, if you do "ignore x-" it is possible to
   "unignore x-mailer".

   "unignore *" will remove all tokens from the ignore list.

   _E_x_a_m_p_l_e_ _3_._9_._ _H_e_a_d_e_r_ _w_e_e_d_i_n_g
# Sven's draconian header weeding
ignore *
unignore from date subject to cc
unignore organization organisation x-mailer: x-newsreader: x-mailing-list:
unignore posted-to:

10.3. Ordering Displayed Headers

   Usage:

   hdr_order _h_e_a_d_e_r [ _h_e_a_d_e_r ...]
   unhdr_order { _* | _h_e_a_d_e_r ... }

   With the _h_d_r___o_r_d_e_r command you can specify an order in which Mutt will
   attempt to present these headers to you when viewing messages.

   "_u_n_h_d_r___o_r_d_e_r *" will clear all previous headers from the order list,
   thus removing the header order effects set by the system-wide startup
   file.

   _E_x_a_m_p_l_e_ _3_._1_0_._ _C_o_n_f_i_g_u_r_i_n_g_ _h_e_a_d_e_r_ _d_i_s_p_l_a_y_ _o_r_d_e_r
hdr_order From Date: From: To: Cc: Subject:

11. Alternative Addresses

   Usage:

   alternates [ -group _n_a_m_e ...] _r_e_g_e_x_p [ _r_e_g_e_x_p ...]
   unalternates [ -group _n_a_m_e ...] { _* | _r_e_g_e_x_p ... }

   With various functions, Mutt will treat messages differently, depending
   on whether you sent them or whether you received them from someone
   else. For instance, when replying to a message that you sent to a
   different party, Mutt will automatically suggest to send the response
   to the original message's recipients -- responding to yourself won't
   make much sense in many cases. (See [802]$$rreeppllyy__ttoo.)

   Many users receive e-mail under a number of different addresses. To
   fully use Mutt's features here, the program must be able to recognize
   what e-mail addresses you receive mail under. That's the purpose of the
   _a_l_t_e_r_n_a_t_e_s command: It takes a list of regular expressions, each of
   which can identify an address under which you receive e-mail.

   As addresses are matched using regular expressions and not exact strict
   comparisons, you should make sure you specify your addresses as precise
   as possible to avoid mismatches. For example, if you specify:
alternates user@example

   Mutt will consider "some-user@example" as being your address, too which
   may not be desired. As a solution, in such cases addresses should be
   specified as:
alternates '^user@example$'

   The -group flag causes all of the subsequent regular expressions to be
   added to the named group.

   The _u_n_a_l_t_e_r_n_a_t_e_s command can be used to write exceptions to _a_l_t_e_r_n_a_t_e_s
   patterns. If an address matches something in an _a_l_t_e_r_n_a_t_e_s command, but
   you nonetheless do not think it is from you, you can list a more
   precise pattern under an _u_n_a_l_t_e_r_n_a_t_e_s command.

   To remove a regular expression from the _a_l_t_e_r_n_a_t_e_s list, use the
   _u_n_a_l_t_e_r_n_a_t_e_s command with exactly the same _r_e_g_e_x_p. Likewise, if the
   _r_e_g_e_x_p for an _a_l_t_e_r_n_a_t_e_s command matches an entry on the _u_n_a_l_t_e_r_n_a_t_e_s
   list, that _u_n_a_l_t_e_r_n_a_t_e_s entry will be removed. If the _r_e_g_e_x_p for
   _u_n_a_l_t_e_r_n_a_t_e_s is "*", _a_l_l_ _e_n_t_r_i_e_s on _a_l_t_e_r_n_a_t_e_s will be removed.

12. Mailing Lists

   Usage:

   lists [ -group _n_a_m_e ...] _r_e_g_e_x_p [ _r_e_g_e_x_p ...]
   unlists { _* | _r_e_g_e_x_p ... }
   subscribe [ -group _n_a_m_e ...] _r_e_g_e_x_p [ _r_e_g_e_x_p ...]
   unsubscribe { _* | _r_e_g_e_x_p ... }

   Mutt has a few nice features for [803]hhaannddlliinngg  mmaaiilliinngg  lliissttss. In order
   to take advantage of them, you must specify which addresses belong to
   mailing lists, and which mailing lists you are subscribed to. Mutt also
   has limited support for auto-detecting mailing lists: it supports
   parsing mailto: links in the common List-Post: header which has the
   same effect as specifying the list address via the _l_i_s_t_s command
   (except the group feature). Once you have done this, the
   [804]<<lliisstt--rreeppllyy>> function will work for all known lists. Additionally,
   when you send a message to a subscribed list, Mutt will add a
   Mail-Followup-To header to tell other users' mail user agents not to
   send copies of replies to your personal address.

Note

   The Mail-Followup-To header is a non-standard extension which is not
   supported by all mail user agents. Adding it is not bullet-proof
   against receiving personal CCs of list messages. Also note that the
   generation of the Mail-Followup-To header is controlled by the
   [805]$$ffoolllloowwuupp__ttoo configuration variable since it's common practice on
   some mailing lists to send Cc upon replies (which is more a group- than
   a list-reply).

   More precisely, Mutt maintains lists of patterns for the addresses of
   known and subscribed mailing lists. Every subscribed mailing list is
   known. To mark a mailing list as known, use the _l_i_s_t command. To mark
   it as subscribed, use _s_u_b_s_c_r_i_b_e.

   You can use regular expressions with both commands. To mark all
   messages sent to a specific bug report's address on Debian's bug
   tracking system as list mail, for instance, you could say
subscribe [0-9]+.*@bugs.debian.org

   as it's often sufficient to just give a portion of the list's e-mail
   address.

   Specify as much of the address as you need to to remove ambiguity. For
   example, if you've subscribed to the Mutt mailing list, you will
   receive mail addressed to mutt-users@mutt.org. So, to tell Mutt that
   this is a mailing list, you could add lists mutt-users@ to your
   initialization file. To tell Mutt that you are subscribed to it, add
   _s_u_b_s_c_r_i_b_e mutt-users to your initialization file instead. If you also
   happen to get mail from someone whose address is
   mutt-users@example.com, you could use _l_i_s_t_s ^mutt-users@mutt\\.org$ or
   _s_u_b_s_c_r_i_b_e ^mutt-users@mutt\\.org$ to match only mail from the actual
   list.

   The -group flag adds all of the subsequent regular expressions to the
   named [806]aaddddrreessss  ggrroouupp in addition to adding to the specified address
   list.

   The "unlists" command is used to remove a token from the list of known
   and subscribed mailing-lists. Use "unlists *" to remove all tokens.

   To remove a mailing list from the list of subscribed mailing lists, but
   keep it on the list of known mailing lists, use _u_n_s_u_b_s_c_r_i_b_e.

13. Using Multiple Spool Mailboxes

   Usage:

   mbox-hook _[_!_]_r_e_g_e_x_p _m_a_i_l_b_o_x

   This command is used to move read messages from a specified mailbox to
   a different mailbox automatically when you quit or change folders.
   _r_e_g_e_x_p is a regular expression specifying the mailbox to treat as a
   "spool" mailbox and _m_a_i_l_b_o_x specifies where mail should be saved when
   read.

   The regexp parameter has [807]mmaaiillbbooxx  sshhoorrttccuutt expansion performed on
   the first character. See [808]MMaaiillbbooxx  MMaattcchhiinngg  iinn  HHooookkss for more
   details.

   Unlike some of the other _h_o_o_k commands, only the _f_i_r_s_t matching regexp
   is used (it is not possible to save read mail in more than a single
   mailbox).

14. Monitoring Incoming Mail

   Usage:

   mailboxes _m_a_i_l_b_o_x [ _m_a_i_l_b_o_x ...]
   unmailboxes { _* | _m_a_i_l_b_o_x ... }

   This command specifies folders which can receive mail and which will be
   checked for new messages periodically.

   _f_o_l_d_e_r can either be a local file or directory (Mbox/Mmdf or
   Maildir/Mh). If Mutt was built with POP and/or IMAP support, _f_o_l_d_e_r can
   also be a POP/IMAP folder URL. The URL syntax is described in
   [809]SSeeccttiioonn  11..22,,  ""UURRLL  SSyynnttaaxx"", POP and IMAP are described in
   [810]SSeeccttiioonn  33,,  ""PPOOPP33  SSuuppppoorrtt"" and [811]SSeeccttiioonn  44,,  ""IIMMAAPP  SSuuppppoorrtt""
   respectively.

   Mutt provides a number of advanced features for handling (possibly
   many) folders and new mail within them, please refer to
   [812]SSeeccttiioonn  1100,,  ""NNeeww  MMaaiill  DDeetteeccttiioonn"" for details (including in what
   situations and how often Mutt checks for new mail).

   The "unmailboxes" command is used to remove a token from the list of
   folders which receive mail. Use "unmailboxes *" to remove all tokens.

Note

   The folders in the _m_a_i_l_b_o_x_e_s command are resolved when the command is
   executed, so if these names contain [813]sshhoorrttccuutt  cchhaarraacctteerrss (such as
   "=" and "!"), any variable definition that affects these characters
   (like [814]$$ffoollddeerr and [815]$$ssppoooollffiillee) should be set before the
   _m_a_i_l_b_o_x_e_s command. If none of these shortcuts are used, a local path
   should be absolute as otherwise Mutt tries to find it relative to the
   directory from where Mutt was started which may not always be desired.

15. User-Defined Headers

   Usage:

   my_hdr _s_t_r_i_n_g
   unmy_hdr { _* | _f_i_e_l_d ... }

   The _m_y___h_d_r command allows you to create your own header fields which
   will be added to every message you send and appear in the editor if
   [816]$$eeddiitt__hheeaaddeerrss is set.

   For example, if you would like to add an "Organization:" header field
   to all of your outgoing messages, you can put the command something
   like shown in [817]EExxaammppllee  33..1111,,  ""DDeeffiinniinngg  ccuussttoomm  hheeaaddeerrss"" in your
   .muttrc.

   _E_x_a_m_p_l_e_ _3_._1_1_._ _D_e_f_i_n_i_n_g_ _c_u_s_t_o_m_ _h_e_a_d_e_r_s
my_hdr Organization: A Really Big Company, Anytown, USA

Note

   Space characters are _n_o_t allowed between the keyword and the colon
   (":"). The standard for electronic mail (RFC2822) says that space is
   illegal there, so Mutt enforces the rule.

   If you would like to add a header field to a single message, you should
   either set the [818]$$eeddiitt__hheeaaddeerrss variable, or use the <edit-headers>
   function (default: "E") in the compose menu so that you can edit the
   header of your message along with the body.

   To remove user defined header fields, use the _u_n_m_y___h_d_r command. You may
   specify an asterisk ("*") to remove all header fields, or the fields to
   remove. For example, to remove all "To" and "Cc" header fields, you
   could use:
unmy_hdr to cc

16. Specify Default Save Mailbox

   Usage:

   save-hook _[_!_]_p_a_t_t_e_r_n _m_a_i_l_b_o_x

   This command is used to override the default mailbox used when saving
   messages. _m_a_i_l_b_o_x will be used as the default if the message matches
   _p_a_t_t_e_r_n, see [819]MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss for information on the
   exact format.

   To provide more flexibility and good defaults, Mutt applies the
   expandos of [820]$$iinnddeexx__ffoorrmmaatt to _m_a_i_l_b_o_x after it was expanded.

   _E_x_a_m_p_l_e_ _3_._1_2_._ _U_s_i_n_g_ _%_-_e_x_p_a_n_d_o_s_ _i_n_ _s_a_v_e_-_h_o_o_k
# default: save all to ~/Mail/<author name>
save-hook . ~/Mail/%F

# save from me@turing.cs.hmc.edu and me@cs.hmc.edu to $folder/elkins
save-hook me@(turing\\.)?cs\\.hmc\\.edu$ +elkins

# save from aol.com to $folder/spam
save-hook aol\\.com$ +spam

   Also see the [821]ffcccc--ssaavvee--hhooookk command.

17. Specify Default Fcc: Mailbox When Composing

   Usage:

   fcc-hook _[_!_]_p_a_t_t_e_r_n _m_a_i_l_b_o_x

   This command is used to save outgoing mail in a mailbox other than
   [822]$$rreeccoorrdd. Mutt searches the initial list of message recipients for
   the first matching _p_a_t_t_e_r_n and uses _m_a_i_l_b_o_x as the default Fcc:
   mailbox. If no match is found the message will be saved to [823]$$rreeccoorrdd
   mailbox.

   To provide more flexibility and good defaults, Mutt applies the
   expandos of [824]$$iinnddeexx__ffoorrmmaatt to _m_a_i_l_b_o_x after it was expanded.

   See [825]MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss for information on the exact format
   of _p_a_t_t_e_r_n.
fcc-hook [@.]aol\\.com$ +spammers

   ...will save a copy of all messages going to the aol.com domain to the
   `+spammers' mailbox by default. Also see the [826]ffcccc--ssaavvee--hhooookk
   command.

18. Specify Default Save Filename and Default Fcc: Mailbox at Once

   Usage:

   fcc-save-hook _[_!_]_p_a_t_t_e_r_n _m_a_i_l_b_o_x

   This command is a shortcut, equivalent to doing both a [827]ffcccc--hhooookk
   and a [828]ssaavvee--hhooookk with its arguments, including %-expansion on
   _m_a_i_l_b_o_x according to [829]$$iinnddeexx__ffoorrmmaatt.

19. Change Settings Based Upon Message Recipients

   Usage:

   reply-hook _[_!_]_p_a_t_t_e_r_n _c_o_m_m_a_n_d
   send-hook _[_!_]_p_a_t_t_e_r_n _c_o_m_m_a_n_d
   send2-hook _[_!_]_p_a_t_t_e_r_n _c_o_m_m_a_n_d

   These commands can be used to execute arbitrary configuration commands
   based upon recipients of the message. _p_a_t_t_e_r_n is used to match the
   message, see [830]MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss for details. _c_o_m_m_a_n_d is
   executed when _p_a_t_t_e_r_n matches.

   _r_e_p_l_y_-_h_o_o_k is matched against the message you are _r_e_p_l_y_i_n_g_ _t_o, instead
   of the message you are _s_e_n_d_i_n_g. _s_e_n_d_-_h_o_o_k is matched against all
   messages, both _n_e_w and _r_e_p_l_i_e_s.

Note

   _r_e_p_l_y_-_h_o_o_ks are matched _b_e_f_o_r_e the _s_e_n_d_-_h_o_o_k, _r_e_g_a_r_d_l_e_s_s of the order
   specified in the user's configuration file. However, you can inhibit
   _s_e_n_d_-_h_o_o_k in the reply case by using the pattern '! ~Q' (_n_o_t_ _r_e_p_l_i_e_d,
   see [831]MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss) in the _s_e_n_d_-_h_o_o_k to tell when
   _r_e_p_l_y_-_h_o_o_k have been executed.

   _s_e_n_d_2_-_h_o_o_k is matched every time a message is changed, either by
   editing it, or by using the compose menu to change its recipients or
   subject. _s_e_n_d_2_-_h_o_o_k is executed after _s_e_n_d_-_h_o_o_k, and can, e.g., be used
   to set parameters such as the [832]$$sseennddmmaaiill variable depending on the
   message's sender address.

   For each type of _s_e_n_d_-_h_o_o_k or _r_e_p_l_y_-_h_o_o_k, when multiple matches occur,
   commands are executed in the order they are specified in the .muttrc
   (for that type of hook).

   Example: _s_e_n_d_-_h_o_o_k mutt "_s_e_t mime_forward signature=''"

   Another typical use for this command is to change the values of the
   [833]$$aattttrriibbuuttiioonn, [834]$$ssiiggnnaattuurree and [835]$$llooccaallee variables in order
   to change the language of the attributions and signatures based upon
   the recipients.

Note

   _s_e_n_d_-_h_o_o_k's are only executed once after getting the initial list of
   recipients. Adding a recipient after replying or editing the message
   will not cause any _s_e_n_d_-_h_o_o_k to be executed, similarly if
   [836]$$aauuttooeeddiitt is set (as then the initial list of recipients is
   empty). Also note that [837]mmyy__hhddrr commands which modify recipient
   headers, or the message's subject, don't have any effect on the current
   message when executed from a _s_e_n_d_-_h_o_o_k.

20. Change Settings Before Formatting a Message

   Usage:

   message-hook _[_!_]_p_a_t_t_e_r_n _c_o_m_m_a_n_d

   This command can be used to execute arbitrary configuration commands
   before viewing or formatting a message based upon information about the
   message. _c_o_m_m_a_n_d is executed if the _p_a_t_t_e_r_n matches the message to be
   displayed. When multiple matches occur, commands are executed in the
   order they are specified in the .muttrc.

   See [838]MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss for information on the exact format
   of _p_a_t_t_e_r_n.

   Example:
message-hook ~A 'set pager=builtin'
message-hook '~f freshmeat-news' 'set pager="less \"+/^  subject: .*\""'

21. Choosing the Cryptographic Key of the Recipient

   Usage:

   crypt-hook _r_e_g_e_x_p _k_e_y_i_d

   When encrypting messages with PGP/GnuPG or OpenSSL, you may want to
   associate a certain key with a given e-mail address automatically,
   either because the recipient's public key can't be deduced from the
   destination address, or because, for some reasons, you need to override
   the key Mutt would normally use. The _c_r_y_p_t_-_h_o_o_k command provides a
   method by which you can specify the ID of the public key to be used
   when encrypting messages to a certain recipient. You may use multiple
   crypt-hooks with the same regexp; multiple matching crypt-hooks result
   in the use of multiple keyids for a recipient. During key selection,
   Mutt will confirm whether each crypt-hook is to be used (unless the
   [839]$$ccrryypptt__ccoonnffiirrmmhhooookk option is unset). If all crypt-hooks for a
   recipient are declined, Mutt will use the original recipient address
   for key selection instead.

   The meaning of _k_e_y_i_d is to be taken broadly in this context: You can
   either put a numerical key ID or fingerprint here, an e-mail address,
   or even just a real name.

22. Adding Key Sequences to the Keyboard Buffer

   Usage:

   push _s_t_r_i_n_g

   This command adds the named string to the beginning of the keyboard
   buffer. The string may contain control characters, key names and
   function names like the sequence string in the [840]mmaaccrroo command. You
   may use it to automatically run a sequence of commands at startup, or
   when entering certain folders. For example, [841]EExxaammppllee  33..1133,,
   ""EEmmbbeeddddiinngg  ppuusshh  iinn  ffoollddeerr--hhooookk"" shows how to automatically collapse all
   threads when entering a folder.

   _E_x_a_m_p_l_e_ _3_._1_3_._ _E_m_b_e_d_d_i_n_g_ _p_u_s_h_ _i_n_ _f_o_l_d_e_r_-_h_o_o_k
folder-hook . 'push <collapse-all>'

   For using functions like shown in the example, it's important to use
   angle brackets ("<" and ">") to make Mutt recognize the input as a
   function name. Otherwise it will simulate individual just keystrokes,
   i.e. "push collapse-all" would be interpreted as if you had typed "c",
   followed by "o", followed by "l", ..., which is not desired and may
   lead to very unexpected behavior.

   Keystrokes can be used, too, but are less portable because of
   potentially changed key bindings. With default bindings, this is
   equivalent to the above example:
folder-hook . 'push \eV'

   because it simulates that Esc+V was pressed (which is the default
   binding of <collapse-all>).

23. Executing Functions

   Usage:

   exec _f_u_n_c_t_i_o_n [ _f_u_n_c_t_i_o_n ...]

   This command can be used to execute any function. Functions are listed
   in the [842]ffuunnccttiioonn  rreeffeerreennccee. "_e_x_e_c function" is equivalent to "push
   <function>".

24. Message Scoring

   Usage:

   score _p_a_t_t_e_r_n _v_a_l_u_e
   unscore { _* | _p_a_t_t_e_r_n ... }

   The _s_c_o_r_e commands adds _v_a_l_u_e to a message's score if _p_a_t_t_e_r_n matches
   it. _p_a_t_t_e_r_n is a string in the format described in the [843]ppaatttteerrnnss
   section (note: For efficiency reasons, patterns which scan information
   not available in the index, such as ~b, ~B, ~h, or ~X may not be used).
   _v_a_l_u_e is a positive or negative integer. A message's final score is the
   sum total of all matching _s_c_o_r_e entries. However, you may optionally
   prefix _v_a_l_u_e with an equal sign ("=") to cause evaluation to stop at a
   particular entry if there is a match. Negative final scores are rounded
   up to 0.

   The _u_n_s_c_o_r_e command removes score entries from the list. You _m_u_s_t
   specify the same pattern specified in the _s_c_o_r_e command for it to be
   removed. The pattern "*" is a special token which means to clear the
   list of all score entries.

25. Spam Detection

   Usage:

   spam _p_a_t_t_e_r_n _f_o_r_m_a_t
   nospam { _* | _p_a_t_t_e_r_n }

   Mutt has generalized support for external spam-scoring filters. By
   defining your spam patterns with the _s_p_a_m and nospam commands, you can
   _l_i_m_i_t, _s_e_a_r_c_h, and _s_o_r_t your mail based on its spam attributes, as
   determined by the external filter. You also can display the spam
   attributes in your index display using the %H selector in the
   [844]$$iinnddeexx__ffoorrmmaatt variable. (Tip: try %?H?[%H] ? to display spam tags
   only when they are defined for a given message.)

   Your first step is to define your external filter's spam patterns using
   the _s_p_a_m command. _p_a_t_t_e_r_n should be a regular expression that matches a
   header in a mail message. If any message in the mailbox matches this
   regular expression, it will receive a "spam tag" or "spam attribute"
   (unless it also matches a _n_o_s_p_a_m pattern -- see below.) The appearance
   of this attribute is entirely up to you, and is governed by the _f_o_r_m_a_t
   parameter. _f_o_r_m_a_t can be any static text, but it also can include
   back-references from the _p_a_t_t_e_r_n expression. (A regular expression
   "back-reference" refers to a sub-expression contained within
   parentheses.) %1 is replaced with the first back-reference in the
   regex, %2 with the second, etc.

   To match spam tags, mutt needs the corresponding header information
   which is always the case for local and POP folders but not for IMAP in
   the default configuration. Depending on the spam header to be analyzed,
   [845]$$iimmaapp__hheeaaddeerrss may need to be adjusted.

   If you're using multiple spam filters, a message can have more than one
   spam-related header. You can define _s_p_a_m patterns for each filter you
   use. If a message matches two or more of these patterns, and the
   [846]$$ssppaamm__sseeppaarraattoorr variable is set to a string, then the message's
   spam tag will consist of all the _f_o_r_m_a_t strings joined together, with
   the value of [847]$$ssppaamm__sseeppaarraattoorr separating them.

   For example, suppose one uses DCC, SpamAssassin, and PureMessage, then
   the configuration might look like in [848]EExxaammppllee  33..1144,,  ""CCoonnffiigguurriinngg
   ssppaamm  ddeetteeccttiioonn"".

   _E_x_a_m_p_l_e_ _3_._1_4_._ _C_o_n_f_i_g_u_r_i_n_g_ _s_p_a_m_ _d_e_t_e_c_t_i_o_n
spam "X-DCC-.*-Metrics:.*(....)=many"         "90+/DCC-%1"
spam "X-Spam-Status: Yes"                     "90+/SA"
spam "X-PerlMX-Spam: .*Probability=([0-9]+)%" "%1/PM"
set spam_separator=", "

   If then a message is received that DCC registered with "many" hits
   under the "Fuz2" checksum, and that PureMessage registered with a 97%
   probability of being spam, that message's spam tag would read
   90+/DCC-Fuz2, 97/PM. (The four characters before "=many" in a DCC
   report indicate the checksum used -- in this case, "Fuz2".)

   If the [849]$$ssppaamm__sseeppaarraattoorr variable is unset, then each spam pattern
   match supersedes the previous one. Instead of getting joined _f_o_r_m_a_t
   strings, you'll get only the last one to match.

   The spam tag is what will be displayed in the index when you use %H in
   the [850]$$iinnddeexx__ffoorrmmaatt variable. It's also the string that the ~H
   pattern-matching expression matches against for <search> and <limit>
   functions. And it's what sorting by spam attribute will use as a sort
   key.

   That's a pretty complicated example, and most people's actual
   environments will have only one spam filter. The simpler your
   configuration, the more effective Mutt can be, especially when it comes
   to sorting.

   Generally, when you sort by spam tag, Mutt will sort _l_e_x_i_c_a_l_l_y -- that
   is, by ordering strings alphanumerically. However, if a spam tag begins
   with a number, Mutt will sort numerically first, and lexically only
   when two numbers are equal in value. (This is like UNIX's sort -n.) A
   message with no spam attributes at all -- that is, one that didn't
   match _a_n_y of your _s_p_a_m patterns -- is sorted at lowest priority.
   Numbers are sorted next, beginning with 0 and ranging upward. Finally,
   non-numeric strings are sorted, with "a" taking lower priority than
   "z". Clearly, in general, sorting by spam tags is most effective when
   you can coerce your filter to give you a raw number. But in case you
   can't, Mutt can still do something useful.

   The _n_o_s_p_a_m command can be used to write exceptions to _s_p_a_m patterns. If
   a header pattern matches something in a _s_p_a_m command, but you
   nonetheless do not want it to receive a spam tag, you can list a more
   precise pattern under a _n_o_s_p_a_m command.

   If the _p_a_t_t_e_r_n given to _n_o_s_p_a_m is exactly the same as the _p_a_t_t_e_r_n on an
   existing _s_p_a_m list entry, the effect will be to remove the entry from
   the spam list, instead of adding an exception. Likewise, if the _p_a_t_t_e_r_n
   for a _s_p_a_m command matches an entry on the _n_o_s_p_a_m list, that nospam
   entry will be removed. If the _p_a_t_t_e_r_n for _n_o_s_p_a_m is "*", _a_l_l_ _e_n_t_r_i_e_s_ _o_n
   _b_o_t_h_ _l_i_s_t_s will be removed. This might be the default action if you use
   _s_p_a_m and _n_o_s_p_a_m in conjunction with a _f_o_l_d_e_r_-_h_o_o_k.

   You can have as many _s_p_a_m or _n_o_s_p_a_m commands as you like. You can even
   do your own primitive _s_p_a_m detection within Mutt -- for example, if you
   consider all mail from MAILER-DAEMON to be spam, you can use a _s_p_a_m
   command like this:
spam "^From: .*MAILER-DAEMON"       "999"

26. Setting and Querying Variables

26.1. Variable Types

   Mutt supports these types of configuration variables:

   boolean
          A boolean expression, either "yes" or "no".

   number
          A signed integer number in the range -32768 to 32767.

   string
          Arbitrary text.

   path
          A specialized string for representing paths including support
          for mailbox shortcuts (see [851]SSeeccttiioonn  88,,  ""MMaaiillbbooxx  SShhoorrttccuuttss"")
          as well as tilde ("~") for a user's home directory and more.

   quadoption
          Like a boolean but triggers a prompt when set to "ask-yes" or
          "ask-no" with "yes" and "no" preselected respectively.

   sort order
          A specialized string allowing only particular words as values
          depending on the variable.

   regular expression
          A regular expression, see [852]SSeeccttiioonn  22,,  ""RReegguullaarr  EExxpprreessssiioonnss""
          for an introduction.

   folder magic
          Specifies the type of folder to use: _m_b_o_x, _m_m_d_f, _m_h or _m_a_i_l_d_i_r.
          Currently only used to determine the type for newly created
          folders.

   e-mail address
          An e-mail address either with or without realname. The older
          "user@example.org (Joe User)" form is supported but strongly
          deprecated.

   user-defined
          Arbitrary text, see [853]SSeeccttiioonn  2266..33,,  ""UUsseerr--DDeeffiinneedd  VVaarriiaabblleess""
          for details.

26.2. Commands

   The following commands are available to manipulate and query variables:

   Usage:

   set { [ no | inv ] _v_a_r_i_a_b_l_e | _v_a_r_i_a_b_l_e_=_v_a_l_u_e } [...]
   toggle _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
   unset _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
   reset _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]

   This command is used to set (and unset) [854]ccoonnffiigguurraattiioonn  vvaarriiaabblleess.
   There are four basic types of variables: boolean, number, string and
   quadoption. _b_o_o_l_e_a_n variables can be _s_e_t (true) or _u_n_s_e_t (false).
   _n_u_m_b_e_r variables can be assigned a positive integer value. _s_t_r_i_n_g
   variables consist of any number of printable characters and must be
   enclosed in quotes if they contain spaces or tabs. You may also use the
   escape sequences "\n" and "\t" for newline and tab, respectively.
   _q_u_a_d_o_p_t_i_o_n variables are used to control whether or not to be prompted
   for certain actions, or to specify a default action. A value of _y_e_s
   will cause the action to be carried out automatically as if you had
   answered yes to the question. Similarly, a value of _n_o will cause the
   action to be carried out as if you had answered "no." A value of
   _a_s_k_-_y_e_s will cause a prompt with a default answer of "yes" and _a_s_k_-_n_o
   will provide a default answer of "no."

   Prefixing a variable with "no" will unset it. Example: _s_e_t noaskbcc.

   For _b_o_o_l_e_a_n variables, you may optionally prefix the variable name with
   inv to toggle the value (on or off). This is useful when writing
   macros. Example: _s_e_t invsmart_wrap.

   The _t_o_g_g_l_e command automatically prepends the inv prefix to all
   specified variables.

   The _u_n_s_e_t command automatically prepends the no prefix to all specified
   variables.

   Using the <enter-command> function in the _i_n_d_e_x menu, you can query the
   value of a variable by prefixing the name of the variable with a
   question mark:
set ?allow_8bit

   The question mark is actually only required for boolean and quadoption
   variables.

   The _r_e_s_e_t command resets all given variables to the compile time
   defaults (hopefully mentioned in this manual). If you use the command
   _s_e_t and prefix the variable with "&" this has the same behavior as the
   _r_e_s_e_t command.

   With the _r_e_s_e_t command there exists the special variable "all", which
   allows you to reset all variables to their system defaults.

26.3. User-Defined Variables

26.3.1. Introduction

   Along with the variables listed in the [855]CCoonnffiigguurraattiioonn  vvaarriiaabblleess
   section, Mutt supports user-defined variables with names starting with
   my_ as in, for example, my_cfgdir.

   The _s_e_t command either creates a custom my_ variable or changes its
   value if it does exist already. The _u_n_s_e_t and _r_e_s_e_t commands remove the
   variable entirely.

   Since user-defined variables are expanded in the same way that
   environment variables are (except for the [856]sshheellll--eessccaappee command and
   backtick expansion), this feature can be used to make configuration
   files more readable.

26.3.2. Examples

   The following example defines and uses the variable my_cfgdir to
   abbreviate the calls of the [857]ssoouurrccee command:

   _E_x_a_m_p_l_e_ _3_._1_5_._ _U_s_i_n_g_ _u_s_e_r_-_d_e_f_i_n_e_d_ _v_a_r_i_a_b_l_e_s_ _f_o_r_ _c_o_n_f_i_g_ _f_i_l_e_ _r_e_a_d_a_b_i_l_i_t_y
set my_cfgdir = $HOME/mutt/config

source $my_cfgdir/hooks
source $my_cfgdir/macros
# more source commands...

   A custom variable can also be used in macros to backup the current
   value of another variable. In the following example, the value of the
   [858]$$ddeelleettee is changed temporarily while its original value is saved
   as my_delete. After the macro has executed all commands, the original
   value of [859]$$ddeelleettee is restored.

   _E_x_a_m_p_l_e_ _3_._1_6_._ _U_s_i_n_g_ _u_s_e_r_-_d_e_f_i_n_e_d_ _v_a_r_i_a_b_l_e_s_ _f_o_r_ _b_a_c_k_i_n_g_ _u_p_ _o_t_h_e_r_ _c_o_n_f_i_g
   _o_p_t_i_o_n_ _v_a_l_u_e_s
macro pager ,x '\
<enter-command>set my_delete=$delete<enter>\
<enter-command>set delete=yes<enter>\
...\
<enter-command>set delete=$my_delete<enter>'

   Since Mutt expands such values already when parsing the configuration
   file(s), the value of $my_delete in the last example would be the value
   of [860]$$ddeelleettee exactly as it was at that point during parsing the
   configuration file. If another statement would change the value for
   [861]$$ddeelleettee later in the same or another file, it would have no effect
   on $my_delete. However, the expansion can be deferred to runtime, as
   shown in the next example, when escaping the dollar sign.

   _E_x_a_m_p_l_e_ _3_._1_7_._ _D_e_f_e_r_r_i_n_g_ _u_s_e_r_-_d_e_f_i_n_e_d_ _v_a_r_i_a_b_l_e_ _e_x_p_a_n_s_i_o_n_ _t_o_ _r_u_n_t_i_m_e
macro pager <PageDown> "\
<enter-command> set my_old_pager_stop=\$pager_stop pager_stop<Enter>\
<next-page>\
<enter-command> set pager_stop=\$my_old_pager_stop<Enter>\
<enter-command> unset my_old_pager_stop<Enter>"

   Note that there is a space between <enter-command> and the _s_e_t
   configuration command, preventing Mutt from recording the _m_a_c_r_o's
   commands into its history.

26.4. Type Conversions

   Variables are always assigned string values which Mutt parses into its
   internal representation according to the type of the variable, for
   example an integer number for numeric types. For all queries (including
   $-expansion) the value is converted from its internal type back into
   string. As a result, any variable can be assigned any value given that
   its content is valid for the target. This also counts for custom
   variables which are of type string. In case of parsing errors, Mutt
   will print error messages. [862]EExxaammppllee  33..1188,,  ""TTyyppee  ccoonnvveerrssiioonnss  uussiinngg
   vvaarriiaabblleess"" demonstrates type conversions.

   _E_x_a_m_p_l_e_ _3_._1_8_._ _T_y_p_e_ _c_o_n_v_e_r_s_i_o_n_s_ _u_s_i_n_g_ _v_a_r_i_a_b_l_e_s
set my_lines = "5"                # value is string "5"
set pager_index_lines = $my_lines # value is integer 5

set my_sort = "date-received"     # value is string "date-received"
set sort = "last-$my_sort"        # value is sort last-date-received

set my_inc = $read_inc            # value is string "10" (default of $read_inc)
set my_foo = $my_inc              # value is string "10"

   These assignments are all valid. If, however, the value of $my_lines
   would have been "five" (or something else that cannot be parsed into a
   number), the assignment to $pager_index_lines would have produced an
   error message.

   Type conversion applies to all configuration commands which take
   arguments. But please note that every expanded value of a variable is
   considered just a single token. A working example is:
set my_pattern = "~A"
set my_number = "10"

# same as: score ~A +10
score $my_pattern +$my_number

   What does _n_o_t work is:
set my_mx = "+mailbox1 +mailbox2"
mailboxes $my_mx +mailbox3

   because the value of $my_mx is interpreted as a single mailbox named
   "+mailbox1 +mailbox2" and not two distinct mailboxes.

27. Reading Initialization Commands From Another File

   Usage:

   source _f_i_l_e_n_a_m_e

   This command allows the inclusion of initialization commands from other
   files. For example, I place all of my aliases in ~/.mail_aliases so
   that I can make my ~/.muttrc readable and keep my aliases private.

   If the filename begins with a tilde ("~"), it will be expanded to the
   path of your home directory.

   If the filename ends with a vertical bar ("|"), then _f_i_l_e_n_a_m_e is
   considered to be an executable program from which to read input (e.g.
   _s_o_u_r_c_e ~/bin/myscript|).

28. Removing Hooks

   Usage:

   unhook { _* | _h_o_o_k_-_t_y_p_e }

   This command permits you to flush hooks you have previously defined.
   You can either remove all hooks by giving the "*" character as an
   argument, or you can remove all hooks of a specific type by saying
   something like _u_n_h_o_o_k send-hook.

29. Format Strings

29.1. Basic usage

   Format strings are a general concept you'll find in several locations
   through the Mutt configuration, especially in the [863]$$iinnddeexx__ffoorrmmaatt,
   [864]$$ppaaggeerr__ffoorrmmaatt, [865]$$ssttaattuuss__ffoorrmmaatt, and other related variables.
   These can be very straightforward, and it's quite possible you already
   know how to use them.

   The most basic format string element is a percent symbol followed by
   another character. For example, %s represents a message's Subject:
   header in the [866]$$iinnddeexx__ffoorrmmaatt variable. The "expandos" available are
   documented with each format variable, but there are general modifiers
   available with all formatting expandos, too. Those are our concern
   here.

   Some of the modifiers are borrowed right out of C (though you might
   know them from Perl, Python, shell, or another language). These are the
   [-]m.n modifiers, as in %-12.12s. As with such programming languages,
   these modifiers allow you to specify the minimum and maximum size of
   the resulting string, as well as its justification. If the "-" sign
   follows the percent, the string will be left-justified instead of
   right-justified. If there's a number immediately following that, it's
   the minimum amount of space the formatted string will occupy -- if it's
   naturally smaller than that, it will be padded out with spaces. If a
   decimal point and another number follow, that's the maximum space
   allowable -- the string will not be permitted to exceed that width, no
   matter its natural size. Each of these three elements is optional, so
   that all these are legal format strings: %-12s, %4c, %.15F and
   %-12.15L.

   Mutt adds some other modifiers to format strings. If you use an equals
   symbol (=) as a numeric prefix (like the minus above), it will force
   the string to be centered within its minimum space range. For example,
   %=14y will reserve 14 characters for the %y expansion -- that's the
   X-Label: header, in [867]$$iinnddeexx__ffoorrmmaatt. If the expansion results in a
   string less than 14 characters, it will be centered in a 14-character
   space. If the X-Label for a message were "test", that expansion would
   look like "     test     ".

   There are two very little-known modifiers that affect the way that an
   expando is replaced. If there is an underline ("_") character between
   any format modifiers (as above) and the expando letter, it will expands
   in all lower case. And if you use a colon (":"), it will replace all
   decimal points with underlines.

29.2. Conditionals

   Depending on the format string variable, some of its sequences can be
   used to optionally print a string if their value is nonzero. For
   example, you may only want to see the number of flagged messages if
   such messages exist, since zero is not particularly meaningful. To
   optionally print a string based upon one of the above sequences, the
   following construct is used:
%?<sequence_char>?<optional_string>?

   where _s_e_q_u_e_n_c_e___c_h_a_r is an expando, and _o_p_t_i_o_n_a_l___s_t_r_i_n_g is the string
   you would like printed if _s_e_q_u_e_n_c_e___c_h_a_r is nonzero. _o_p_t_i_o_n_a_l___s_t_r_i_n_g may
   contain other sequences as well as normal text, but you may not nest
   optional strings.

   Here is an example illustrating how to optionally print the number of
   new messages in a mailbox in [868]$$ssttaattuuss__ffoorrmmaatt:
%?n?%n new messages.?

   You can also switch between two strings using the following construct:
%?<sequence_char>?<if_string>&<else_string>?

   If the value of _s_e_q_u_e_n_c_e___c_h_a_r is non-zero, _i_f___s_t_r_i_n_g will be expanded,
   otherwise _e_l_s_e___s_t_r_i_n_g will be expanded.

29.3. Filters

   Any format string ending in a vertical bar ("|") will be expanded and
   piped through the first word in the string, using spaces as separator.
   The string returned will be used for display. If the returned string
   ends in %, it will be passed through the formatter a second time. This
   allows the filter to generate a replacement format string including %
   expandos.

   All % expandos in a format string are expanded before the script is
   called so that:

   _E_x_a_m_p_l_e_ _3_._1_9_._ _U_s_i_n_g_ _e_x_t_e_r_n_a_l_ _f_i_l_t_e_r_s_ _i_n_ _f_o_r_m_a_t_ _s_t_r_i_n_g_s
set status_format="script.sh '%r %f (%L)'|"

   will make Mutt expand %r, %f and %L before calling the script. The
   example also shows that arguments can be quoted: the script will
   receive the expanded string between the single quotes as the only
   argument.

   A practical example is the mutt_xtitle script installed in the samples
   subdirectory of the Mutt documentation: it can be used as filter for
   [869]$$ssttaattuuss__ffoorrmmaatt to set the current terminal's title, if supported.

29.4. Padding

   In most format strings, Mutt supports different types of padding using
   special %-expandos:

   %|X
          When this occurs, Mutt will fill the rest of the line with the
          character X. For example, filling the rest of the line with
          dashes is done by setting:

set status_format = "%v on %h: %B: %?n?%n&no? new messages %|-"

   %>X
          Since the previous expando stops at the end of line, there must
          be a way to fill the gap between two items via the %>X expando:
          it puts as many characters X in between two items so that the
          rest of the line will be right-justified. For example, to not
          put the version string and hostname the above example on the
          left but on the right and fill the gap with spaces, one might
          use (note the space after %>):

set status_format = "%B: %?n?%n&no? new messages %> (%v on %h)"

   %*X
          Normal right-justification will print everything to the left of
          the %>, displaying padding and whatever lies to the right only
          if there's room. By contrast, "soft-fill" gives priority to the
          right-hand side, guaranteeing space to display it and showing
          padding only if there's still room. If necessary, soft-fill will
          eat text leftwards to make room for rightward text. For example,
          to right-justify the subject making sure as much as possible of
          it fits on screen, one might use (note two spaces after %* : the
          second ensures there's a space between the truncated right-hand
          side and the subject):

set index_format="%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?)%*  %s"

30. Control allowed header fields in a mailto: URL

   Usage:

   mailto_allow { _* | _h_e_a_d_e_r_-_f_i_e_l_d ... }
   unmailto_allow { _* | _h_e_a_d_e_r_-_f_i_e_l_d ... }

   As a security measure, Mutt will only add user-approved header fields
   from a mailto: URL. This is necessary since Mutt will handle certain
   header fields, such as Attach:, in a special way. The mailto_allow and
   unmailto_allow commands allow the user to modify the list of approved
   headers.

   Mutt initializes the default list to contain only the Subject and Body
   header fields, which are the only requirement specified by the mailto:
   specification in RFC2368.

Chapter 4. Advanced Usage

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [870]11..  CChhaarraacctteerr  SSeett  HHaannddlliinngg
   [871]22..  RReegguullaarr  EExxpprreessssiioonnss
   [872]33..  PPaatttteerrnnss::  SSeeaarrcchhiinngg,,  LLiimmiittiinngg  aanndd  TTaaggggiinngg

        [873]33..11..  PPaatttteerrnn  MMooddiiffiieerr
        [874]33..22..  SSiimmppllee  SSeeaarrcchheess
        [875]33..33..  NNeessttiinngg  aanndd  BBoooolleeaann  OOppeerraattoorrss
        [876]33..44..  SSeeaarrcchhiinngg  bbyy  DDaattee

   [877]44..  UUssiinngg  TTaaggss
   [878]55..  UUssiinngg  HHooookkss

        [879]55..11..  MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss
        [880]55..22..  MMaaiillbbooxx  MMaattcchhiinngg  iinn  HHooookkss

   [881]66..  EExxtteerrnnaall  AAddddrreessss  QQuueerriieess
   [882]77..  MMaaiillbbooxx  FFoorrmmaattss
   [883]88..  MMaaiillbbooxx  SShhoorrttccuuttss
   [884]99..  HHaannddlliinngg  MMaaiilliinngg  LLiissttss
   [885]1100..  NNeeww  MMaaiill  DDeetteeccttiioonn

        [886]1100..11..  HHooww  NNeeww  MMaaiill  DDeetteeccttiioonn  WWoorrkkss
        [887]1100..22..  PPoolllliinngg  FFoorr  NNeeww  MMaaiill
        [888]1100..33..  CCaallccuullaattiinngg  MMaaiillbbooxx  MMeessssaaggee  CCoouunnttss

   [889]1111..  EEddiittiinngg  TThhrreeaaddss

        [890]1111..11..  LLiinnkkiinngg  TThhrreeaaddss
        [891]1111..22..  BBrreeaakkiinngg  TThhrreeaaddss

   [892]1122..  DDeelliivveerryy  SSttaattuuss  NNoottiiffiiccaattiioonn  ((DDSSNN))  SSuuppppoorrtt
   [893]1133..  SSttaarrtt  aa  WWWWWW  BBrroowwsseerr  oonn  UURRLLss
   [894]1144..  MMiisscceellllaannyy

1. Character Set Handling

   A "character set" is basically a mapping between bytes and glyphs and
   implies a certain character encoding scheme. For example, for the ISO
   8859 family of character sets, an encoding of 8bit per character is
   used. For the Unicode character set, different character encodings may
   be used, UTF-8 being the most popular. In UTF-8, a character is
   represented using a variable number of bytes ranging from 1 to 4.

   Since Mutt is a command-line tool run from a shell, and delegates
   certain tasks to external tools (such as an editor for
   composing/editing messages), all of these tools need to agree on a
   character set and encoding. There exists no way to reliably deduce the
   character set a plain text file has. Interoperability is gained by the
   use of well-defined environment variables. The full set can be printed
   by issuing locale on the command line.

   Upon startup, Mutt determines the character set on its own using
   routines that inspect locale-specific environment variables. Therefore,
   it is generally not necessary to set the $charset variable in Mutt. It
   may even be counter-productive as Mutt uses system and library
   functions that derive the character set themselves and on which Mutt
   has no influence. It's safest to let Mutt work out the locale setup
   itself.

   If you happen to work with several character sets on a regular basis,
   it's highly advisable to use Unicode and an UTF-8 locale. Unicode can
   represent nearly all characters in a message at the same time. When not
   using a Unicode locale, it may happen that you receive messages with
   characters not representable in your locale. When displaying such a
   message, or replying to or forwarding it, information may get lost
   possibly rendering the message unusable (not only for you but also for
   the recipient, this breakage is not reversible as lost information
   cannot be guessed).

   A Unicode locale makes all conversions superfluous which eliminates the
   risk of conversion errors. It also eliminates potentially wrong
   expectations about the character set between Mutt and external
   programs.

   The terminal emulator used also must be properly configured for the
   current locale. Terminal emulators usually do _n_o_t derive the locale
   from environment variables, they need to be configured separately. If
   the terminal is incorrectly configured, Mutt may display random and
   unexpected characters (question marks, octal codes, or just random
   glyphs), format strings may not work as expected, you may not be abled
   to enter non-ascii characters, and possible more. Data is always
   represented using bytes and so a correct setup is very important as to
   the machine, all character sets "look" the same.

   Warning: A mismatch between what system and library functions think the
   locale is and what Mutt was told what the locale is may make it behave
   badly with non-ascii input: it will fail at seemingly random places.
   This warning is to be taken seriously since not only local mail
   handling may suffer: sent messages may carry wrong character set
   information the _r_e_c_e_i_v_e_r has too deal with. The need to set $charset
   directly in most cases points at terminal and environment variable
   setup problems, not Mutt problems.

   A list of officially assigned and known character sets can be found at
   [895]IIAANNAA, a list of locally supported locales can be obtained by
   running locale -a.

2. Regular Expressions

   All string patterns in Mutt including those in more complex
   [896]ppaatttteerrnnss must be specified using regular expressions (regexp) in
   the "POSIX extended" syntax (which is more or less the syntax used by
   egrep and GNU awk). For your convenience, we have included below a
   brief description of this syntax.

   The search is case sensitive if the pattern contains at least one upper
   case letter, and case insensitive otherwise.

Note

   "\" must be quoted if used for a regular expression in an
   initialization command: "\\".

   A regular expression is a pattern that describes a set of strings.
   Regular expressions are constructed analogously to arithmetic
   expressions, by using various operators to combine smaller expressions.

Note

   The regular expression can be enclosed/delimited by either " or ' which
   is useful if the regular expression includes a white-space character.
   See [897]SSyynnttaaxx  ooff  IInniittiiaalliizzaattiioonn  FFiilleess for more information on " and '
   delimiter processing. To match a literal " or ' you must preface it
   with \ (backslash).

   The fundamental building blocks are the regular expressions that match
   a single character. Most characters, including all letters and digits,
   are regular expressions that match themselves. Any metacharacter with
   special meaning may be quoted by preceding it with a backslash.

   The period "." matches any single character. The caret "^" and the
   dollar sign "$" are metacharacters that respectively match the empty
   string at the beginning and end of a line.

   A list of characters enclosed by "[" and "]" matches any single
   character in that list; if the first character of the list is a caret
   "^" then it matches any character _n_o_t in the list. For example, the
   regular expression _[_0_1_2_3_4_5_6_7_8_9_] matches any single digit. A range of
   ASCII characters may be specified by giving the first and last
   characters, separated by a hyphen "-". Most metacharacters lose their
   special meaning inside lists. To include a literal "]" place it first
   in the list. Similarly, to include a literal "^" place it anywhere but
   first. Finally, to include a literal hyphen "-" place it last.

   Certain named classes of characters are predefined. Character classes
   consist of "[:", a keyword denoting the class, and ":]". The following
   classes are defined by the POSIX standard in [898]TTaabbllee  44..11,,  ""PPOOSSIIXX
   rreegguullaarr  eexxpprreessssiioonn  cchhaarraacctteerr  ccllaasssseess""

   _T_a_b_l_e_ _4_._1_._ _P_O_S_I_X_ _r_e_g_u_l_a_r_ _e_x_p_r_e_s_s_i_o_n_ _c_h_a_r_a_c_t_e_r_ _c_l_a_s_s_e_s
   Character class Description
   [:alnum:] Alphanumeric characters
   [:alpha:] Alphabetic characters
   [:blank:] Space or tab characters
   [:cntrl:] Control characters
   [:digit:] Numeric characters
   [:graph:] Characters that are both printable and visible. (A space is
   printable, but not visible, while an "a" is both)
   [:lower:] Lower-case alphabetic characters
   [:print:] Printable characters (characters that are not control
   characters)
   [:punct:] Punctuation characters (characters that are not letter,
   digits, control characters, or space characters)
   [:space:] Space characters (such as space, tab and formfeed, to name a
   few)
   [:upper:] Upper-case alphabetic characters
   [:xdigit:] Characters that are hexadecimal digits

   A character class is only valid in a regular expression inside the
   brackets of a character list.

Note

   Note that the brackets in these class names are part of the symbolic
   names, and must be included in addition to the brackets delimiting the
   bracket list. For example, _[_[_:_d_i_g_i_t_:_]_] is equivalent to _[_0_-_9_].

   Two additional special sequences can appear in character lists. These
   apply to non-ASCII character sets, which can have single symbols
   (called collating elements) that are represented with more than one
   character, as well as several characters that are equivalent for
   collating or sorting purposes:

   Collating Symbols
          A collating symbol is a multi-character collating element
          enclosed in "[." and ".]". For example, if "ch" is a collating
          element, then _[_[_._c_h_._]_] is a regexp that matches this collating
          element, while _[_c_h_] is a regexp that matches either "c" or "h".

   Equivalence Classes
          An equivalence class is a locale-specific name for a list of
          characters that are equivalent. The name is enclosed in "[=" and
          "=]". For example, the name "e" might be used to represent all
          of "e" with grave ("e"), "e" with acute ("e") and "e". In this
          case, _[_[_=_e_=_]_] is a regexp that matches any of: "e" with grave
          ("e"), "e" with acute ("e") and "e".

   A regular expression matching a single character may be followed by one
   of several repetition operators described in [899]TTaabbllee  44..22,,  ""RReegguullaarr
   eexxpprreessssiioonn  rreeppeettiittiioonn  ooppeerraattoorrss"".

   _T_a_b_l_e_ _4_._2_._ _R_e_g_u_l_a_r_ _e_x_p_r_e_s_s_i_o_n_ _r_e_p_e_t_i_t_i_o_n_ _o_p_e_r_a_t_o_r_s
   Operator Description
   ? The preceding item is optional and matched at most once
   * The preceding item will be matched zero or more times
   + The preceding item will be matched one or more times
   {n} The preceding item is matched exactly _n times
   {n,} The preceding item is matched _n or more times
   {,m} The preceding item is matched at most _m times
   {n,m} The preceding item is matched at least _n times, but no more than
   _m times

   Two regular expressions may be concatenated; the resulting regular
   expression matches any string formed by concatenating two substrings
   that respectively match the concatenated subexpressions.

   Two regular expressions may be joined by the infix operator "|"; the
   resulting regular expression matches any string matching either
   subexpression.

   Repetition takes precedence over concatenation, which in turn takes
   precedence over alternation. A whole subexpression may be enclosed in
   parentheses to override these precedence rules.

Note

   If you compile Mutt with the included regular expression engine, the
   following operators may also be used in regular expressions as
   described in [900]TTaabbllee  44..33,,  ""GGNNUU  rreegguullaarr  eexxpprreessssiioonn  eexxtteennssiioonnss"".

   _T_a_b_l_e_ _4_._3_._ _G_N_U_ _r_e_g_u_l_a_r_ _e_x_p_r_e_s_s_i_o_n_ _e_x_t_e_n_s_i_o_n_s
   Expression Description
   \\y Matches the empty string at either the beginning or the end of a
   word
   \\B Matches the empty string within a word
   \\< Matches the empty string at the beginning of a word
   \\> Matches the empty string at the end of a word
   \\w Matches any word-constituent character (letter, digit, or
   underscore)
   \\W Matches any character that is not word-constituent
   \\` Matches the empty string at the beginning of a buffer (string)
   \\' Matches the empty string at the end of a buffer

   Please note however that these operators are not defined by POSIX, so
   they may or may not be available in stock libraries on various systems.

3. Patterns: Searching, Limiting and Tagging

3.1. Pattern Modifier

   Many of Mutt's commands allow you to specify a pattern to match (limit,
   tag-pattern, delete-pattern, etc.). [901]TTaabbllee  44..44,,  ""PPaatttteerrnn  mmooddiiffiieerrss""
   shows several ways to select messages.

   _T_a_b_l_e_ _4_._4_._ _P_a_t_t_e_r_n_ _m_o_d_i_f_i_e_r_s
   Pattern modifier Description
   ~A all messages
   ~b _E_X_P_R messages which contain _E_X_P_R in the message body
   =b _S_T_R_I_N_G messages which contain _S_T_R_I_N_G in the message body. If IMAP is
   enabled, searches for _S_T_R_I_N_G on the server, rather than downloading
   each message and searching it locally.
   ~B _E_X_P_R messages which contain _E_X_P_R in the whole message
   =B _S_T_R_I_N_G messages which contain _S_T_R_I_N_G in the whole message. If IMAP
   is enabled, searches for _S_T_R_I_N_G on the server, rather than downloading
   each message and searching it locally.
   ~c _E_X_P_R messages carbon-copied to _E_X_P_R
   %c _G_R_O_U_P messages carbon-copied to any member of _G_R_O_U_P
   ~C _E_X_P_R messages either to: or cc: _E_X_P_R
   %C _G_R_O_U_P messages either to: or cc: to any member of _G_R_O_U_P
   ~d [_M_I_N]-[_M_A_X] messages with "date-sent" in a Date range
   ~D deleted messages
   ~e _E_X_P_R messages which contains _E_X_P_R in the "Sender" field
   %e _G_R_O_U_P messages which contain a member of _G_R_O_U_P in the "Sender" field
   ~E expired messages
   ~F flagged messages
   ~f _E_X_P_R messages originating from _E_X_P_R
   %f _G_R_O_U_P messages originating from any member of _G_R_O_U_P
   ~g cryptographically signed messages
   ~G cryptographically encrypted messages
   ~h _E_X_P_R messages which contain _E_X_P_R in the message header
   =h _S_T_R_I_N_G messages which contain _S_T_R_I_N_G in the message header. If IMAP
   is enabled, searches for _S_T_R_I_N_G on the server, rather than downloading
   each message and searching it locally; _S_T_R_I_N_G must be of the form
   "header: substring" (see below).
   ~H _E_X_P_R messages with a spam attribute matching _E_X_P_R
   ~i _E_X_P_R messages which match _E_X_P_R in the "Message-ID" field
   ~k messages which contain PGP key material
   ~L _E_X_P_R messages either originated or received by _E_X_P_R
   %L _G_R_O_U_P message either originated or received by any member of _G_R_O_U_P
   ~l messages addressed to a known mailing list
   ~m [_M_I_N]-[_M_A_X] messages in the range _M_I_N to _M_A_X *)
   ~n [_M_I_N]-[_M_A_X] messages with a score in the range _M_I_N to _M_A_X *)
   ~N new messages
   ~O old messages
   ~p messages addressed to you (consults _a_l_t_e_r_n_a_t_e_s)
   ~P messages from you (consults _a_l_t_e_r_n_a_t_e_s)
   ~Q messages which have been replied to
   ~r [_M_I_N]-[_M_A_X] messages with "date-received" in a Date range
   ~R read messages
   ~s _E_X_P_R messages having _E_X_P_R in the "Subject" field.
   ~S superseded messages
   ~t _E_X_P_R messages addressed to _E_X_P_R
   ~T tagged messages
   ~u messages addressed to a subscribed mailing list
   ~U unread messages
   ~v messages part of a collapsed thread.
   ~V cryptographically verified messages
   ~x _E_X_P_R messages which contain _E_X_P_R in the "References" or
   "In-Reply-To" field
   ~X [_M_I_N]-[_M_A_X] messages with _M_I_N to _M_A_X attachments *)
   ~y _E_X_P_R messages which contain _E_X_P_R in the "X-Label" field
   ~z [_M_I_N]-[_M_A_X] messages with a size in the range _M_I_N to _M_A_X *) **)
   ~= duplicated messages (see [902]$$dduupplliiccaattee__tthhrreeaaddss)
   ~$ unreferenced messages (requires threaded view)
   ~(_P_A_T_T_E_R_N) messages in threads containing messages matching _P_A_T_T_E_R_N,
   e.g. all threads containing messages from you: ~(~P)

   Where _E_X_P_R is a [903]rreegguullaarr  eexxpprreessssiioonn, and _G_R_O_U_P is an [904]aaddddrreessss
   ggrroouupp.

   *) The forms "<[_M_A_X]", ">[_M_I_N]", "[_M_I_N]-" and "-[_M_A_X]" are allowed,
   too.

   **) The suffixes "K" and "M" are allowed to specify kilobyte and
   megabyte respectively.

   Special attention has to be payed when using regular expressions inside
   of patterns. Specifically, Mutt's parser for these patterns will strip
   one level of backslash ("\"), which is normally used for quoting. If it
   is your intention to use a backslash in the regular expression, you
   will need to use two backslashes instead ("\\"). You can force Mutt to
   treat _E_X_P_R as a simple string instead of a regular expression by using
   = instead of ~ in the pattern name. For example, =b *.* will find all
   messages that contain the literal string "*.*". Simple string matches
   are less powerful than regular expressions but can be considerably
   faster. This is especially true for IMAP folders, because string
   matches can be performed on the server instead of by fetching every
   message. IMAP treats =h specially: it must be of the form "header:
   substring" and will not partially match header names. The substring
   part may be omitted if you simply wish to find messages containing a
   particular header without regard to its value.

   Patterns matching lists of addresses (notably c, C, p, P and t) match
   if there is at least one match in the whole list. If you want to make
   sure that all elements of that list match, you need to prefix your
   pattern with "^". This example matches all mails which only has
   recipients from Germany.

   _E_x_a_m_p_l_e_ _4_._1_._ _M_a_t_c_h_i_n_g_ _a_l_l_ _a_d_d_r_e_s_s_e_s_ _i_n_ _a_d_d_r_e_s_s_ _l_i_s_t_s
^~C \.de$

3.2. Simple Searches

   Mutt supports two versions of so called "simple searches". These are
   issued if the query entered for searching, limiting and similar
   operations does not seem to contain a valid pattern modifier (i.e. it
   does not contain one of these characters: "~", "=" or "%"). If the
   query is supposed to contain one of these special characters, they must
   be escaped by prepending a backslash ("\").

   The first type is by checking whether the query string equals a keyword
   case-insensitively from [905]TTaabbllee  44..55,,  ""SSiimmppllee  sseeaarrcchh  kkeeyywwoorrddss"": If
   that is the case, Mutt will use the shown pattern modifier instead. If
   a keyword would conflict with your search keyword, you need to turn it
   into a regular expression to avoid matching the keyword table. For
   example, if you want to find all messages matching "flag" (using
   [906]$$ssiimmppllee__sseeaarrcchh) but don't want to match flagged messages, simply
   search for "[f]lag".

   _T_a_b_l_e_ _4_._5_._ _S_i_m_p_l_e_ _s_e_a_r_c_h_ _k_e_y_w_o_r_d_s
   Keyword Pattern modifier
   all     ~A
   .       ~A
   ^       ~A
   del     ~D
   flag    ~F
   new     ~N
   old     ~O
   repl    ~Q
   read    ~R
   tag     ~T
   unread  ~U

   The second type of simple search is to build a complex search pattern
   using [907]$$ssiimmppllee__sseeaarrcchh as a template. Mutt will insert your query
   properly quoted and search for the composed complex query.

3.3. Nesting and Boolean Operators

   Logical AND is performed by specifying more than one criterion. For
   example:
~t mutt ~f elkins

   would select messages which contain the word "mutt" in the list of
   recipients _a_n_d that have the word "elkins" in the "From" header field.

   Mutt also recognizes the following operators to create more complex
   search patterns:
     * ! -- logical NOT operator
     * | -- logical OR operator
     * () -- logical grouping operator

   Here is an example illustrating a complex search pattern. This pattern
   will select all messages which do not contain "mutt" in the "To" or
   "Cc" field and which are from "elkins".

   _E_x_a_m_p_l_e_ _4_._2_._ _U_s_i_n_g_ _b_o_o_l_e_a_n_ _o_p_e_r_a_t_o_r_s_ _i_n_ _p_a_t_t_e_r_n_s
!(~t mutt|~c mutt) ~f elkins

   Here is an example using white space in the regular expression (note
   the "'" and """ delimiters). For this to match, the mail's subject must
   match the "^Junk +From +Me$" and it must be from either "Jim +Somebody"
   or "Ed +SomeoneElse":
'~s "^Junk +From +Me$" ~f ("Jim +Somebody"|"Ed +SomeoneElse")'

Note

   If a regular expression contains parenthesis, or a vertical bar ("|"),
   you _m_u_s_t enclose the expression in double or single quotes since those
   characters are also used to separate different parts of Mutt's pattern
   language. For example: ~f "me@(mutt\.org|cs\.hmc\.edu)" Without the
   quotes, the parenthesis wouldn't end. This would be separated to two
   OR'd patterns: _~_f_ _m_e_@_(_m_u_t_t_\_._o_r_g and _c_s_\_._h_m_c_\_._e_d_u_). They are never what
   you want.

3.4. Searching by Date

   Mutt supports two types of dates, _a_b_s_o_l_u_t_e and _r_e_l_a_t_i_v_e.

3.4.1. Absolute Dates

   Dates _m_u_s_t be in DD/MM/YY format (month and year are optional,
   defaulting to the current month and year). An example of a valid range
   of dates is:
Limit to messages matching: ~d 20/1/95-31/10

   If you omit the minimum (first) date, and just specify "-DD/MM/YY", all
   messages _b_e_f_o_r_e the given date will be selected. If you omit the
   maximum (second) date, and specify "DD/MM/YY-", all messages _a_f_t_e_r the
   given date will be selected. If you specify a single date with no dash
   ("-"), only messages sent on the given date will be selected.

   You can add error margins to absolute dates. An error margin is a sign
   (+ or -), followed by a digit, followed by one of the units in
   [908]TTaabbllee  44..66,,  ""DDaattee  uunniittss"". As a special case, you can replace the
   sign by a "*" character, which is equivalent to giving identical plus
   and minus error margins.

   _T_a_b_l_e_ _4_._6_._ _D_a_t_e_ _u_n_i_t_s
   Unit Description
   y    Years
   m    Months
   w    Weeks
   d    Days

   Example: To select any messages two weeks around January 15, 2001,
   you'd use the following pattern:
Limit to messages matching: ~d 15/1/2001*2w

3.4.2. Relative Dates

   This type of date is relative to the current date, and may be specified
   as:
     * >_o_f_f_s_e_t for messages older than _o_f_f_s_e_t units
     * <_o_f_f_s_e_t for messages newer than _o_f_f_s_e_t units
     * =_o_f_f_s_e_t for messages exactly _o_f_f_s_e_t units old

   _o_f_f_s_e_t is specified as a positive number with one of the units from
   [909]TTaabbllee  44..66,,  ""DDaattee  uunniittss"".

   Example: to select messages less than 1 month old, you would use
Limit to messages matching: ~d <1m

Note

   All dates used when searching are relative to the _l_o_c_a_l time zone, so
   unless you change the setting of your [910]$$iinnddeexx__ffoorrmmaatt to include a
   %[...] format, these are _n_o_t the dates shown in the main index.

4. Using Tags

   Sometimes it is desirable to perform an operation on a group of
   messages all at once rather than one at a time. An example might be to
   save messages to a mailing list to a separate folder, or to delete all
   messages with a given subject. To tag all messages matching a pattern,
   use the <tag-pattern> function, which is bound to "shift-T" by default.
   Or you can select individual messages by hand using the <tag-message>
   function, which is bound to "t" by default. See [911]ppaatttteerrnnss for
   Mutt's pattern matching syntax.

   Once you have tagged the desired messages, you can use the "tag-prefix"
   operator, which is the ";" (semicolon) key by default. When the
   "tag-prefix" operator is used, the _n_e_x_t operation will be applied to
   all tagged messages if that operation can be used in that manner. If
   the [912]$$aauuttoo__ttaagg variable is set, the next operation applies to the
   tagged messages automatically, without requiring the "tag-prefix".

   In [913]mmaaccrrooss or [914]ppuusshh commands, you can use the <tag-prefix-cond>
   operator. If there are no tagged messages, Mutt will "eat" the rest of
   the macro to abort it's execution. Mutt will stop "eating" the macro
   when it encounters the <end-cond> operator; after this operator the
   rest of the macro will be executed as normal.

5. Using Hooks

   A _h_o_o_k is a concept found in many other programs which allows you to
   execute arbitrary commands before performing some operation. For
   example, you may wish to tailor your configuration based upon which
   mailbox you are reading, or to whom you are sending mail. In the Mutt
   world, a _h_o_o_k consists of a [915]rreegguullaarr  eexxpprreessssiioonn or [916]ppaatttteerrnn
   along with a configuration option/command. See:
     * [917]aaccccoouunntt--hhooookk
     * [918]cchhaarrsseett--hhooookk
     * [919]ccrryypptt--hhooookk
     * [920]ffcccc--hhooookk
     * [921]ffcccc--ssaavvee--hhooookk
     * [922]ffoollddeerr--hhooookk
     * [923]iiccoonnvv--hhooookk
     * [924]mmbbooxx--hhooookk
     * [925]mmeessssaaggee--hhooookk
     * [926]rreeppllyy--hhooookk
     * [927]ssaavvee--hhooookk
     * [928]sseenndd--hhooookk
     * [929]sseenndd22--hhooookk

   for specific details on each type of _h_o_o_k available.

Note

   If a hook changes configuration settings, these changes remain
   effective until the end of the current Mutt session. As this is
   generally not desired, a "default" hook needs to be added before all
   other hooks of that type to restore configuration defaults.

   _E_x_a_m_p_l_e_ _4_._3_._ _S_p_e_c_i_f_y_i_n_g_ _a_ _"_d_e_f_a_u_l_t_"_ _h_o_o_k
send-hook . 'unmy_hdr From:'
send-hook ~C'^b@b\.b$' my_hdr from: c@c.c

   In [930]EExxaammppllee  44..33,,  ""SSppeecciiffyyiinngg  aa  ""ddeeffaauulltt""  hhooookk"", by default the
   value of [931]$$ffrroomm and [932]$$rreeaallnnaammee is not overridden. When sending
   messages either To: or Cc: to <b@b.b>, the From: header is changed to
   <c@c.c>.

5.1. Message Matching in Hooks

   Hooks that act upon messages (_m_e_s_s_a_g_e_-_h_o_o_k, _r_e_p_l_y_-_h_o_o_k, _s_e_n_d_-_h_o_o_k,
   _s_e_n_d_2_-_h_o_o_k, _s_a_v_e_-_h_o_o_k, _f_c_c_-_h_o_o_k) are evaluated in a slightly different
   manner. For the other types of hooks, a [933]rreegguullaarr  eexxpprreessssiioonn is
   sufficient. But in dealing with messages a finer grain of control is
   needed for matching since for different purposes you want to match
   different criteria.

   Mutt allows the use of the [934]sseeaarrcchh  ppaatttteerrnn language for matching
   messages in hook commands. This works in exactly the same way as it
   would when _l_i_m_i_t_i_n_g or _s_e_a_r_c_h_i_n_g the mailbox, except that you are
   restricted to those operators which match information Mutt extracts
   from the header of the message (i.e., from, to, cc, date, subject,
   etc.).

   For example, if you wanted to set your return address based upon
   sending mail to a specific address, you could do something like:
send-hook '~t ^me@cs\.hmc\.edu$' 'my_hdr From: Mutt User <user@host>'

   which would execute the given command when sending mail to
   _m_e_@_c_s_._h_m_c_._e_d_u.

   However, it is not required that you write the pattern to match using
   the full searching language. You can still specify a simple _r_e_g_u_l_a_r
   _e_x_p_r_e_s_s_i_o_n like the other hooks, in which case Mutt will translate your
   pattern into the full language, using the translation specified by the
   [935]$$ddeeffaauulltt__hhooookk variable. The pattern is translated at the time the
   hook is declared, so the value of [936]$$ddeeffaauulltt__hhooookk that is in effect
   at that time will be used.

5.2. Mailbox Matching in Hooks

   Hooks that match against mailboxes (_f_o_l_d_e_r_-_h_o_o_k, _m_b_o_x_-_h_o_o_k) apply both
   [937]rreegguullaarr  eexxpprreessssiioonn syntax as well as [938]mmaaiillbbooxx  sshhoorrttccuutt
   expansion on the regexp parameter. There is some overlap between these,
   so special attention should be paid to the first character of the
   regexp.
# Here, ^ will expand to "the current mailbox" not "beginning of string":
folder-hook ^/home/user/Mail/bar "set sort=threads"

# If you want ^ to be interpreted as "beginning of string", one workaround
# is to enclose the regexp in parenthesis:
folder-hook (^/home/user/Mail/bar) "set sort=threads"

# This will expand to the default save folder for the alias "imap.example.com",
which
# is probably not what you want:
folder-hook @imap.example.com "set sort=threads"

# A workaround is to use parenthesis or a backslash:
folder-hook (@imap.example.com) "set sort=threads"
folder-hook '\@imap.example.com' "set sort=threads"

   Keep in mind that mailbox shortcut expansion on the regexp parameter
   takes place when the hook is initially parsed, not when the hook is
   matching against a mailbox. When Mutt starts up and is reading the
   .muttrc, some mailbox shortcuts may not be usable. For example, the
   "current mailbox" shortcut, ^, will expand to an empty string because
   no mailbox has been opened yet. Mutt will issue an error for this case
   or if the mailbox shortcut results in an empty regexp.

6. External Address Queries

   Mutt supports connecting to external directory databases such as LDAP,
   ph/qi, bbdb, or NIS through a wrapper script which connects to Mutt
   using a simple interface. Using the [939]$$qquueerryy__ccoommmmaanndd variable, you
   specify the wrapper command to use. For example:
set query_command = "mutt_ldap_query.pl %s"

   The wrapper script should accept the query on the command-line. It
   should return a one line message, then each matching response on a
   single line, each line containing a tab separated address then name
   then some other optional information. On error, or if there are no
   matching addresses, return a non-zero exit code and a one line error
   message.

   An example multiple response output:
Searching database ... 20 entries ... 3 matching:
me@cs.hmc.edu           Michael Elkins  mutt dude
blong@fiction.net       Brandon Long    mutt and more
roessler@does-not-exist.org        Thomas Roessler mutt pgp

   There are two mechanisms for accessing the query function of Mutt. One
   is to do a query from the index menu using the <query> function
   (default: Q). This will prompt for a query, then bring up the query
   menu which will list the matching responses. From the query menu, you
   can select addresses to create aliases, or to mail. You can tag
   multiple addresses to mail, start a new query, or have a new query
   appended to the current responses.

   The other mechanism for accessing the query function is for address
   completion, similar to the alias completion. In any prompt for address
   entry, you can use the <complete-query> function (default: ^T) to run a
   query based on the current address you have typed. Like aliases, Mutt
   will look for what you have typed back to the last space or comma. If
   there is a single response for that query, Mutt will expand the address
   in place. If there are multiple responses, Mutt will activate the query
   menu. At the query menu, you can select one or more addresses to be
   added to the prompt.

7. Mailbox Formats

   Mutt supports reading and writing of four different local mailbox
   formats: mbox, MMDF, MH and Maildir. The mailbox type is auto detected,
   so there is no need to use a flag for different mailbox types. When
   creating new mailboxes, Mutt uses the default specified with the
   [940]$$mmbbooxx__ttyyppee variable. A short description of the formats follows.

   _m_b_o_x. This is a widely used mailbox format for UNIX. All messages are
   stored in a single file. Each message has a line of the form:
From me@cs.hmc.edu Fri, 11 Apr 1997 11:44:56 PST

   to denote the start of a new message (this is often referred to as the
   "From_" line). The mbox format requires mailbox locking, is prone to
   mailbox corruption with concurrently writing clients or misinterpreted
   From_ lines. Depending on the environment, new mail detection can be
   unreliable. Mbox folders are fast to open and easy to archive.

   _M_M_D_F. This is a variant of the _m_b_o_x format. Each message is surrounded
   by lines containing "^A^A^A^A" (four times control-A's). The same
   problems as for mbox apply (also with finding the right message
   separator as four control-A's may appear in message bodies).

   _M_H. A radical departure from _m_b_o_x and _M_M_D_F, a mailbox consists of a
   directory and each message is stored in a separate file. The filename
   indicates the message number (however, this is may not correspond to
   the message number Mutt displays). Deleted messages are renamed with a
   comma (",") prepended to the filename. Mutt detects this type of
   mailbox by looking for either .mh_sequences or .xmhcache files (needed
   to distinguish normal directories from MH mailboxes). MH is more robust
   with concurrent clients writing the mailbox, but still may suffer from
   lost flags; message corruption is less likely to occur than with
   mbox/mmdf. It's usually slower to open compared to mbox/mmdf since many
   small files have to be read (Mutt provides [941]SSeeccttiioonn  77..11,,  ""HHeeaaddeerr
   CCaacchhiinngg"" to greatly speed this process up). Depending on the
   environment, MH is not very disk-space efficient.

   _M_a_i_l_d_i_r. The newest of the mailbox formats, used by the Qmail MTA (a
   replacement for sendmail). Similar to _M_H, except that it adds three
   subdirectories of the mailbox: _t_m_p, _n_e_w and _c_u_r. Filenames for the
   messages are chosen in such a way they are unique, even when two
   programs are writing the mailbox over NFS, which means that no file
   locking is needed and corruption is very unlikely. Maildir maybe slower
   to open without caching in Mutt, it too is not very disk-space
   efficient depending on the environment. Since no additional files are
   used for metadata (which is embedded in the message filenames) and
   Maildir is locking-free, it's easy to sync across different machines
   using file-level synchronization tools.

8. Mailbox Shortcuts

   There are a number of built in shortcuts which refer to specific
   mailboxes. These shortcuts can be used anywhere you are prompted for a
   file or mailbox path or in path-related configuration variables. Note
   that these only work at the beginning of a string.

   _T_a_b_l_e_ _4_._7_._ _M_a_i_l_b_o_x_ _s_h_o_r_t_c_u_t_s
   Shortcut Refers to...
   ! your [942]$$ssppoooollffiillee (incoming) mailbox
   > your [943]$$mmbbooxx file
   < your [944]$$rreeccoorrdd file
   ^ the current mailbox
   - or !! the file you've last visited
   ~ your home directory
   = or + your [945]$$ffoollddeerr directory
   _@_a_l_i_a_s to the [946]ddeeffaauulltt  ssaavvee  ffoollddeerr as determined by the address of
   the alias

   For example, to store a copy of outgoing messages in the folder they
   were composed in, a [947]ffoollddeerr--hhooookk can be used to set [948]$$rreeccoorrdd:
folder-hook . 'set record=^'

9. Handling Mailing Lists

   Mutt has a few configuration options that make dealing with large
   amounts of mail easier. The first thing you must do is to let Mutt know
   what addresses you consider to be mailing lists (technically this does
   not have to be a mailing list, but that is what it is most often used
   for), and what lists you are subscribed to. This is accomplished
   through the use of the [949]lliissttss  aanndd  ssuubbssccrriibbee commands in your
   .muttrc.

   Now that Mutt knows what your mailing lists are, it can do several
   things, the first of which is the ability to show the name of a list
   through which you received a message (i.e., of a subscribed list) in
   the _i_n_d_e_x menu display. This is useful to distinguish between personal
   and list mail in the same mailbox. In the [950]$$iinnddeexx__ffoorrmmaatt variable,
   the expando "%L" will print the string "To <list>" when "list" appears
   in the "To" field, and "Cc <list>" when it appears in the "Cc" field
   (otherwise it prints the name of the author).

   Often times the "To" and "Cc" fields in mailing list messages tend to
   get quite large. Most people do not bother to remove the author of the
   message they reply to from the list, resulting in two or more copies
   being sent to that person. The <list-reply> function, which by default
   is bound to "L" in the _i_n_d_e_x menu and _p_a_g_e_r, helps reduce the clutter
   by only replying to the known mailing list addresses instead of all
   recipients (except as specified by Mail-Followup-To, see below).

   Mutt also supports the Mail-Followup-To header. When you send a message
   to a list of recipients which includes one or several subscribed
   mailing lists, and if the [951]$$ffoolllloowwuupp__ttoo option is set, Mutt will
   generate a Mail-Followup-To header which contains all the recipients to
   whom you send this message, but not your address. This indicates that
   group-replies or list-replies (also known as "followups") to this
   message should only be sent to the original recipients of the message,
   and not separately to you - you'll receive your copy through one of the
   mailing lists you are subscribed to.

   Conversely, when group-replying or list-replying to a message which has
   a Mail-Followup-To header, Mutt will respect this header if the
   [952]$$hhoonnoorr__ffoolllloowwuupp__ttoo configuration variable is set. Using
   [953]lliisstt--rreeppllyy will in this case also make sure that the reply goes to
   the mailing list, even if it's not specified in the list of recipients
   in the Mail-Followup-To.

Note

   When header editing is enabled, you can create a Mail-Followup-To
   header manually. Mutt will only auto-generate this header if it doesn't
   exist when you send the message.

   The other method some mailing list admins use is to generate a
   "Reply-To" field which points back to the mailing list address rather
   than the author of the message. This can create problems when trying to
   reply directly to the author in private, since most mail clients will
   automatically reply to the address given in the "Reply-To" field. Mutt
   uses the [954]$$rreeppllyy__ttoo variable to help decide which address to use.
   If set to _a_s_k_-_y_e_s or _a_s_k_-_n_o, you will be prompted as to whether or not
   you would like to use the address given in the "Reply-To" field, or
   reply directly to the address given in the "From" field. When set to
   _y_e_s, the "Reply-To" field will be used when present.

   The "X-Label:" header field can be used to further identify mailing
   lists or list subject matter (or just to annotate messages
   individually). The [955]$$iinnddeexx__ffoorrmmaatt variable's "%y" and "%Y" expandos
   can be used to expand "X-Label:" fields in the index, and Mutt's
   pattern-matcher can match regular expressions to "X-Label:" fields with
   the "~y" selector. "X-Label:" is not a standard message header field,
   but it can easily be inserted by procmail and other mail filtering
   agents.

   Lastly, Mutt has the ability to [956]ssoorrtt the mailbox into
   [957]tthhrreeaaddss. A thread is a group of messages which all relate to the
   same subject. This is usually organized into a tree-like structure
   where a message and all of its replies are represented graphically. If
   you've ever used a threaded news client, this is the same concept. It
   makes dealing with large volume mailing lists easier because you can
   easily delete uninteresting threads and quickly find topics of value.

10. New Mail Detection

   Mutt supports setups with multiple folders, allowing all of them to be
   monitored for new mail (see [958]SSeeccttiioonn  1144,,  ""MMoonniittoorriinngg  IInnccoommiinngg  MMaaiill""
   for details).

10.1. How New Mail Detection Works

   For Mbox and Mmdf folders, new mail is detected by comparing access
   and/or modification times of files: Mutt assumes a folder has new mail
   if it wasn't accessed after it was last modified. Utilities like biff
   or frm or any other program which accesses the mailbox might cause Mutt
   to never detect new mail for that mailbox if they do not properly reset
   the access time. Other possible causes of Mutt not detecting new mail
   in these folders are backup tools (updating access times) or
   filesystems mounted without access time update support (for Linux
   systems, see the relatime option).

Note

   Contrary to older Mutt releases, it now maintains the new mail status
   of a folder by properly resetting the access time if the folder
   contains at least one message which is neither read, nor deleted, nor
   marked as old.

   In cases where new mail detection for Mbox or Mmdf folders appears to
   be unreliable, the [959]$$cchheecckk__mmbbooxx__ssiizzee option can be used to make
   Mutt track and consult file sizes for new mail detection instead which
   won't work for size-neutral changes.

   New mail for Maildir is assumed if there is one message in the new/
   subdirectory which is not marked deleted (see [960]$$mmaaiillddiirr__ttrraasshh). For
   MH folders, a mailbox is considered having new mail if there's at least
   one message in the "unseen" sequence as specified by
   [961]$$mmhh__sseeqq__uunnsseeeenn.

   Mutt does not poll POP3 folders for new mail, it only periodically
   checks the currently opened folder (if it's a POP3 folder).

   For IMAP, by default Mutt uses recent message counts provided by the
   server to detect new mail. If the [962]$$iimmaapp__iiddllee option is set, it'll
   use the IMAP IDLE extension if advertised by the server.

   The [963]$$mmaaiill__cchheecckk__rreecceenntt option changes whether Mutt will notify you
   of new mail in an already visited mailbox. When set (the default) it
   will only notify you of new mail received since the last time you
   opened the mailbox. When unset, Mutt will notify you of any new mail in
   the mailbox.

10.2. Polling For New Mail

   When in the index menu and being idle (also see [964]$$ttiimmeeoouutt), Mutt
   periodically checks for new mail in all folders which have been
   configured via the _m_a_i_l_b_o_x_e_s command. The interval depends on the
   folder type: for local/IMAP folders it consults [965]$$mmaaiill__cchheecckk and
   [966]$$ppoopp__cchheecckkiinntteerrvvaall for POP folders.

   Outside the index menu the directory browser supports checking for new
   mail using the <check-new> function which is unbound by default.
   Pressing TAB will bring up a menu showing the files specified by the
   _m_a_i_l_b_o_x_e_s command, and indicate which contain new messages. Mutt will
   automatically enter this mode when invoked from the command line with
   the -y option.

   For the pager, index and directory browser menus, Mutt contains the
   <buffy-list> function (bound to "." by default) which will print a list
   of folders with new mail in the command line at the bottom of the
   screen.

   For the index, by default Mutt displays the number of mailboxes with
   new mail in the status bar, please refer to the [967]$$ssttaattuuss__ffoorrmmaatt
   variable for details.

   When changing folders, Mutt fills the prompt with the first folder from
   the mailboxes list containing new mail (if any), pressing <Space> will
   cycle through folders with new mail. The (by default unbound) function
   <next-unread-mailbox> in the index can be used to immediately open the
   next folder with unread mail (if any).

10.3. Calculating Mailbox Message Counts

   If [968]$$mmaaiill__cchheecckk__ssttaattss is set, Mutt will periodically calculate the
   unread, flagged, and total message counts for each mailbox watched by
   the _m_a_i_l_b_o_x_e_s command. This calculation takes place at the same time as
   new mail polling, but is controlled by a separate timer:
   [969]$$mmaaiill__cchheecckk__ssttaattss__iinntteerrvvaall.

   The sidebar can display these message counts. See [970]$$ssiiddeebbaarr__ffoorrmmaatt.

11. Editing Threads

   Mutt has the ability to dynamically restructure threads that are broken
   either by misconfigured software or bad behavior from some
   correspondents. This allows to clean your mailboxes from these
   annoyances which make it hard to follow a discussion.

11.1. Linking Threads

   Some mailers tend to "forget" to correctly set the "In-Reply-To:" and
   "References:" headers when replying to a message. This results in
   broken discussions because Mutt has not enough information to guess the
   correct threading. You can fix this by tagging the reply, then moving
   to the parent message and using the <link-threads> function (bound to &
   by default). The reply will then be connected to this parent message.

   You can also connect multiple children at once, tagging them and using
   the <tag-prefix> command (";") or the [971]$$aauuttoo__ttaagg option.

11.2. Breaking Threads

   On mailing lists, some people are in the bad habit of starting a new
   discussion by hitting "reply" to any message from the list and changing
   the subject to a totally unrelated one. You can fix such threads by
   using the <break-thread> function (bound by default to #), which will
   turn the subthread starting from the current message into a whole
   different thread.

12. Delivery Status Notification (DSN) Support

   RFC1894 defines a set of MIME content types for relaying information
   about the status of electronic mail messages. These can be thought of
   as "return receipts."

   To support DSN, there are two variables. [972]$$ddssnn__nnoottiiffyy is used to
   request receipts for different results (such as failed message, message
   delivered, etc.). [973]$$ddssnn__rreettuurrnn requests how much of your message
   should be returned with the receipt (headers or full message).

   When using [974]$$sseennddmmaaiill for mail delivery, you need to use either
   Berkeley sendmail 8.8.x (or greater) a MTA supporting DSN command line
   options compatible to Sendmail: The -N and -R options can be used by
   the mail client to make requests as to what type of status messages
   should be returned. Please consider your MTA documentation whether DSN
   is supported.

   For SMTP delivery using [975]$$ssmmttpp__uurrll, it depends on the capabilities
   announced by the server whether Mutt will attempt to request DSN or
   not.

13. Start a WWW Browser on URLs

   If a message contains URLs, it is efficient to get a menu with all the
   URLs and start a WWW browser on one of them. This functionality is
   provided by the external urlview program which can be retrieved at
   [976]ffttpp::////ffttpp..mmuutttt..oorrgg//mmuutttt//ccoonnttrriibb// and the configuration commands:
macro index \cb |urlview\n
macro pager \cb |urlview\n

14. Miscellany

   This section documents various features that fit nowhere else.

   Address normalization
          Mutt normalizes all e-mail addresses to the simplest form
          possible. If an address contains a realname, the form _J_o_e_ _U_s_e_r
          _<_j_o_e_@_e_x_a_m_p_l_e_._c_o_m_> is used and the pure e-mail address without
          angle brackets otherwise, i.e. just _j_o_e_@_e_x_a_m_p_l_e_._c_o_m.

          This normalization affects all headers Mutt generates including
          aliases.

   Initial folder selection
          The folder Mutt opens at startup is determined as follows: the
          folder specified in the $MAIL environment variable if present.
          Otherwise, the value of $MAILDIR is taken into account. If that
          isn't present either, Mutt takes the user's mailbox in the
          mailspool as determined at compile-time (which may also reside
          in the home directory). The [977]$$ssppoooollffiillee setting overrides
          this selection. Highest priority has the mailbox given with the
          -f command line option.

Chapter 5. Mutt's MIME Support

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [978]11..  UUssiinngg  MMIIMMEE  iinn  MMuutttt

        [979]11..11..  MMIIMMEE  OOvveerrvviieeww
        [980]11..22..  VViieewwiinngg  MMIIMMEE  MMeessssaaggeess  iinn  tthhee  PPaaggeerr
        [981]11..33..  TThhee  AAttttaacchhmmeenntt  MMeennuu
        [982]11..44..  TThhee  CCoommppoossee  MMeennuu

   [983]22..  MMIIMMEE  TTyyppee  CCoonnffiigguurraattiioonn  wwiitthh  mmiimmee..ttyyppeess
   [984]33..  MMIIMMEE  VViieewweerr  CCoonnffiigguurraattiioonn  wwiitthh  MMaaiillccaapp

        [985]33..11..  TThhee  BBaassiiccss  ooff  tthhee  MMaaiillccaapp  FFiillee
        [986]33..22..  SSeeccuurree  UUssee  ooff  MMaaiillccaapp
        [987]33..33..  AAddvvaanncceedd  MMaaiillccaapp  UUssaaggee
        [988]33..44..  EExxaammppllee  MMaaiillccaapp  FFiilleess

   [989]44..  MMIIMMEE  AAuuttoovviieeww
   [990]55..  MMIIMMEE  MMuullttiippaarrtt//AAlltteerrnnaattiivvee
   [991]66..  AAttttaacchhmmeenntt  SSeeaarrcchhiinngg  aanndd  CCoouunnttiinngg
   [992]77..  MMIIMMEE  LLooookkuupp

   Quite a bit of effort has been made to make Mutt the premier text-mode
   MIME MUA. Every effort has been made to provide the functionality that
   the discerning MIME user requires, and the conformance to the standards
   wherever possible. When configuring Mutt for MIME, there are two extra
   types of configuration files which Mutt uses. One is the mime.types
   file, which contains the mapping of file extensions to IANA MIME types.
   The other is the mailcap file, which specifies the external commands to
   use for handling specific MIME types.

1. Using MIME in Mutt

1.1. MIME Overview

   MIME is short for "Multipurpose Internet Mail Extension" and describes
   mechanisms to internationalize and structure mail messages. Before the
   introduction of MIME, messages had a single text part and were limited
   to us-ascii header and content. With MIME, messages can have
   attachments (and even attachments which itself have attachments and
   thus form a tree structure), nearly arbitrary characters can be used
   for sender names, recipients and subjects.

   Besides the handling of non-ascii characters in message headers, to
   Mutt the most important aspect of MIME are so-called MIME types. These
   are constructed using a _m_a_j_o_r and _m_i_n_o_r type separated by a forward
   slash. These specify details about the content that follows. Based upon
   these, Mutt decides how to handle this part. The most popular major
   type is "text" with minor types for plain text, HTML and various other
   formats. Major types also exist for images, audio, video and of course
   general application data (e.g. to separate cryptographically signed
   data with a signature, send office documents, and in general arbitrary
   binary data). There's also the multipart major type which represents
   the root of a subtree of MIME parts. A list of supported MIME types can
   be found in [993]TTaabbllee  55..11,,  ""SSuuppppoorrtteedd  MMIIMMEE  ttyyppeess"".

   MIME also defines a set of encoding schemes for transporting MIME
   content over the network: 7bit, 8bit, quoted-printable, base64 and
   binary. There're some rules when to choose what for encoding headers
   and/or body (if needed), and Mutt will in general make a good choice.

   Mutt does most of MIME encoding/decoding behind the scenes to form
   messages conforming to MIME on the sending side. On reception, it can
   be flexibly configured as to how what MIME structure is displayed (and
   if it's displayed): these decisions are based on the content's MIME
   type. There are three areas/menus in dealing with MIME: the pager
   (while viewing a message), the attachment menu and the compose menu.

1.2. Viewing MIME Messages in the Pager

   When you select a message from the index and view it in the pager, Mutt
   decodes as much of a message as possible to a text representation. Mutt
   internally supports a number of MIME types, including the text major
   type (with all minor types), the message/rfc822 (mail messages) type
   and some multipart types. In addition, it recognizes a variety of PGP
   MIME types, including PGP/MIME and application/pgp.

   Mutt will denote attachments with a couple lines describing them. These
   lines are of the form:
[-- Attachment #1: Description --]
[-- Type: text/plain, Encoding: 7bit, Size: 10000 --]

   Where the _D_e_s_c_r_i_p_t_i_o_n is the description or filename given for the
   attachment, and the _E_n_c_o_d_i_n_g is one of the already mentioned content
   encodings.

   If Mutt cannot deal with a MIME type, it will display a message like:
[-- image/gif is unsupported (use 'v' to view this part) --]

1.3. The Attachment Menu

   The default binding for <view-attachments> is "v", which displays the
   attachment menu for a message. The attachment menu displays a list of
   the attachments in a message. From the attachment menu, you can save,
   print, pipe, delete, and view attachments. You can apply these
   operations to a group of attachments at once, by tagging the
   attachments and by using the <tag-prefix> operator. You can also reply
   to the current message from this menu, and only the current attachment
   (or the attachments tagged) will be quoted in your reply. You can view
   attachments as text, or view them using the mailcap viewer definition
   (the mailcap mechanism is explained later in detail).

   Finally, you can apply the usual message-related functions (like
   [994]<<rreesseenndd--mmeessssaaggee>>, and the <reply> and <forward> functions) to
   attachments of type message/rfc822.

   See table [995]TTaabbllee  99..77,,  ""DDeeffaauulltt  AAttttaacchhmmeenntt  MMeennuu  BBiinnddiinnggss"" for all
   available functions.

1.4. The Compose Menu

   The compose menu is the menu you see before you send a message. It
   allows you to edit the recipient list, the subject, and other aspects
   of your message. It also contains a list of the attachments of your
   message, including the main body. From this menu, you can print, copy,
   filter, pipe, edit, compose, review, and rename an attachment or a list
   of tagged attachments. You can also modifying the attachment
   information, notably the type, encoding and description.

   Attachments appear as follows by default:
- 1 [text/plain, 7bit, 1K]           /tmp/mutt-euler-8082-0 <no description>
  2 [applica/x-gunzip, base64, 422K] ~/src/mutt-0.85.tar.gz <no description>

   The "-" denotes that Mutt will delete the file after sending (or
   postponing, or canceling) the message. It can be toggled with the
   <toggle-unlink> command (default: u). The next field is the MIME
   content-type, and can be changed with the <edit-type> command (default:
   ^T). The next field is the encoding for the attachment, which allows a
   binary message to be encoded for transmission on 7bit links. It can be
   changed with the <edit-encoding> command (default: ^E). The next field
   is the size of the attachment, rounded to kilobytes or megabytes. The
   next field is the filename, which can be changed with the <rename-file>
   command (default: R). The final field is the description of the
   attachment, and can be changed with the <edit-description> command
   (default: d). See [996]$$aattttaacchh__ffoorrmmaatt for a full list of available
   expandos to format this display to your needs.

2. MIME Type Configuration with mime.types

   To get most out of MIME, it's important that a MIME part's content type
   matches the content as closely as possible so that the recipient's
   client can automatically select the right viewer for the content.
   However, there's no reliable for Mutt to know how to detect every
   possible file type. Instead, it uses a simple plain text mapping file
   that specifies what file extension corresponds to what MIME type. This
   file is called mime.types.

   When you add an attachment to your mail message, Mutt searches your
   personal mime.types file at $HOME/.mime.types, and then the system
   mime.types file at /usr/local/share/mutt/mime.types or /etc/mime.types

   Each line starts with the full MIME type, followed by a space and
   space-separated list of file extensions. For example you could use:

   _E_x_a_m_p_l_e_ _5_._1_._ _m_i_m_e_._t_y_p_e_s
application/postscript          ps eps
application/pgp                 pgp
audio/x-aiff                    aif aifc aiff

   A sample mime.types file comes with the Mutt distribution, and should
   contain most of the MIME types you are likely to use.

   If Mutt can not determine the MIME type by the extension of the file
   you attach, it will look at the file. If the file is free of binary
   information, Mutt will assume that the file is plain text, and mark it
   as text/plain. If the file contains binary information, then Mutt will
   mark it as application/octet-stream. You can change the MIME type that
   Mutt assigns to an attachment by using the <edit-type> command from the
   compose menu (default: ^T), see [997]TTaabbllee  55..11,,  ""SSuuppppoorrtteedd  MMIIMMEE  ttyyppeess""
   for supported major types. Mutt recognizes all of these if the
   appropriate entry is found in the mime.types file. Non-recognized mime
   types should only be used if the recipient of the message is likely to
   be expecting such attachments.

   _T_a_b_l_e_ _5_._1_._ _S_u_p_p_o_r_t_e_d_ _M_I_M_E_ _t_y_p_e_s
   MIME major type Standard                Description
   application     yes      General application data
   audio           yes      Audio data
   image           yes      Image data
   message         yes      Mail messages, message status information
   model           yes      VRML and other modeling data
   multipart       yes      Container for other MIME parts
   text            yes      Text data
   video           yes      Video data
   chemical        no       Mostly molecular data

   MIME types are not arbitrary, they need to be assigned by [998]IIAANNAA.

3. MIME Viewer Configuration with Mailcap

   Mutt supports RFC 1524 MIME Configuration, in particular the Unix
   specific format specified in Appendix A of RFC 1524. This file format
   is commonly referred to as the "mailcap" format. Many MIME compliant
   programs utilize the mailcap format, allowing you to specify handling
   for all MIME types in one place for all programs. Programs known to use
   this format include Firefox, lynx and metamail.

   In order to handle various MIME types that Mutt doesn't have built-in
   support for, it parses a series of external configuration files to find
   an external handler. The default search string for these files is a
   colon delimited list containing the following files:
    1. $HOME/.mailcap
    2. $PKGDATADIR/mailcap
    3. $SYSCONFDIR/mailcap
    4. /etc/mailcap
    5. /usr/etc/mailcap
    6. /usr/local/etc/mailcap

   where $HOME is your home directory. The $PKGDATADIR and the $SYSCONFDIR
   directories depend on where Mutt is installed: the former is the
   default for shared data, the latter for system configuration files.

   The default search path can be obtained by running the following
   command:
mutt -nF /dev/null -Q mailcap_path

   In particular, the metamail distribution will install a mailcap file,
   usually as /usr/local/etc/mailcap, which contains some baseline
   entries.

3.1. The Basics of the Mailcap File

   A mailcap file consists of a series of lines which are comments, blank,
   or definitions.

   A comment line consists of a # character followed by anything you want.

   A blank line is blank.

   A definition line consists of a content type, a view command, and any
   number of optional fields. Each field of a definition line is divided
   by a semicolon ";" character.

   The content type is specified in the MIME standard "type/subtype"
   notation. For example, text/plain, text/html, image/gif, etc. In
   addition, the mailcap format includes two formats for wildcards, one
   using the special "*" subtype, the other is the implicit wild, where
   you only include the major type. For example, image/*, or video will
   match all image types and video types, respectively.

   The view command is a Unix command for viewing the type specified.
   There are two different types of commands supported. The default is to
   send the body of the MIME message to the command on stdin. You can
   change this behavior by using %s as a parameter to your view command.
   This will cause Mutt to save the body of the MIME message to a
   temporary file, and then call the view command with the %s replaced by
   the name of the temporary file. In both cases, Mutt will turn over the
   terminal to the view program until the program quits, at which time
   Mutt will remove the temporary file if it exists. This means that
   mailcap does _n_o_t work out of the box with programs which detach
   themselves from the terminal right after starting, like open on Mac OS
   X. In order to nevertheless use these programs with mailcap, you
   probably need custom shell scripts.

   So, in the simplest form, you can send a text/plain message to the
   external pager more on standard input:
text/plain; more

   Or, you could send the message as a file:
text/plain; more %s

   Perhaps you would like to use lynx to interactively view a text/html
   message:
text/html; lynx %s

   In this case, lynx does not support viewing a file from standard input,
   so you must use the %s syntax.

Note

   _S_o_m_e_ _o_l_d_e_r_ _v_e_r_s_i_o_n_s_ _o_f_ _l_y_n_x_ _c_o_n_t_a_i_n_ _a_ _b_u_g_ _w_h_e_r_e_ _t_h_e_y_ _w_i_l_l_ _c_h_e_c_k_ _t_h_e
   _m_a_i_l_c_a_p_ _f_i_l_e_ _f_o_r_ _a_ _v_i_e_w_e_r_ _f_o_r_ _t_e_x_t_/_h_t_m_l_._ _T_h_e_y_ _w_i_l_l_ _f_i_n_d_ _t_h_e_ _l_i_n_e_ _w_h_i_c_h
   _c_a_l_l_s_ _l_y_n_x_,_ _a_n_d_ _r_u_n_ _i_t_._ _T_h_i_s_ _c_a_u_s_e_s_ _l_y_n_x_ _t_o_ _c_o_n_t_i_n_u_o_u_s_l_y_ _s_p_a_w_n_ _i_t_s_e_l_f
   _t_o_ _v_i_e_w_ _t_h_e_ _o_b_j_e_c_t_.

   On the other hand, maybe you don't want to use lynx interactively, you
   just want to have it convert the text/html to text/plain, then you can
   use:
text/html; lynx -dump %s | more

   Perhaps you wish to use lynx to view text/html files, and a pager on
   all other text formats, then you would use the following:
text/html; lynx %s
text/*; more

3.2. Secure Use of Mailcap

   The interpretation of shell meta-characters embedded in MIME parameters
   can lead to security problems in general. Mutt tries to quote
   parameters in expansion of %s syntaxes properly, and avoids risky
   characters by substituting them, see the [999]$$mmaaiillccaapp__ssaanniittiizzee
   variable.

   Although Mutt's procedures to invoke programs with mailcap seem to be
   safe, there are other applications parsing mailcap, maybe taking less
   care of it. Therefore you should pay attention to the following rules:

   _K_e_e_p_ _t_h_e_ _%_-_e_x_p_a_n_d_o_s_ _a_w_a_y_ _f_r_o_m_ _s_h_e_l_l_ _q_u_o_t_i_n_g_. Don't quote them with
   single or double quotes. Mutt does this for you, the right way, as
   should any other program which interprets mailcap. Don't put them into
   backtick expansions. Be highly careful with evil statements, and avoid
   them if possible at all. Trying to fix broken behavior with quotes
   introduces new leaks -- there is no alternative to correct quoting in
   the first place.

   If you have to use the %-expandos' values in context where you need
   quoting or backtick expansions, put that value into a shell variable
   and reference the shell variable where necessary, as in the following
   example (using $charset inside the backtick expansion is safe, since it
   is not itself subject to any further expansion):
text/test-mailcap-bug; cat %s; copiousoutput; test=charset=%{charset} \
        && test "`echo $charset | tr '[A-Z]' '[a-z]'`" != iso-8859-1

3.3. Advanced Mailcap Usage

3.3.1. Optional Fields

   In addition to the required content-type and view command fields, you
   can add semi-colon ";" separated fields to set flags and other options.
   Mutt recognizes the following optional fields:

   copiousoutput
          This flag tells Mutt that the command passes possibly large
          amounts of text on standard output. This causes Mutt to invoke a
          pager (either the internal pager or the external pager defined
          by the pager variable) on the output of the view command.
          Without this flag, Mutt assumes that the command is interactive.
          One could use this to replace the pipe to more in the lynx -dump
          example in the Basic section:

text/html; lynx -dump %s ; copiousoutput

          This will cause lynx to format the text/html output as
          text/plain and Mutt will use your standard pager to display the
          results.

          Mutt will set the COLUMNS environment variable to the width of
          the pager. Some programs make use of this environment variable
          automatically. Others provide a command line argument that can
          use this to set the output width:

text/html; lynx -dump -width ${COLUMNS:-80} %s; copiousoutput

          Note that when using the built-in pager, _o_n_l_y entries with this
          flag will be considered a handler for a MIME type -- all other
          entries will be ignored.

   needsterminal
          Mutt uses this flag when viewing attachments with
          [1000]aauuttoo__vviieeww, in order to decide whether it should honor the
          setting of the [1001]$$wwaaiitt__kkeeyy variable or not. When an
          attachment is viewed using an interactive program, and the
          corresponding mailcap entry has a _n_e_e_d_s_t_e_r_m_i_n_a_l flag, Mutt will
          use [1002]$$wwaaiitt__kkeeyy and the exit status of the program to decide
          if it will ask you to press a key after the external program has
          exited. In all other situations it will not prompt you for a
          key.

   compose=<command>
          This flag specifies the command to use to create a new
          attachment of a specific MIME type. Mutt supports this from the
          compose menu.

   composetyped=<command>
          This flag specifies the command to use to create a new
          attachment of a specific MIME type. This command differs from
          the compose command in that Mutt will expect standard MIME
          headers on the data. This can be used to specify parameters,
          filename, description, etc. for a new attachment. Mutt supports
          this from the compose menu.

   print=<command>
          This flag specifies the command to use to print a specific MIME
          type. Mutt supports this from the attachment and compose menus.

   edit=<command>
          This flag specifies the command to use to edit a specific MIME
          type. Mutt supports this from the compose menu, and also uses it
          to compose new attachments. Mutt will default to the defined
          [1003]$$eeddiittoorr for text attachments.

   nametemplate=<template>
          This field specifies the format for the file denoted by %s in
          the command fields. Certain programs will require a certain file
          extension, for instance, to correctly view a file. For instance,
          lynx will only interpret a file as text/html if the file ends in
          .html. So, you would specify lynx as a text/html viewer with a
          line in the mailcap file like:

text/html; lynx %s; nametemplate=%s.html

   test=<command>
          This field specifies a command to run to test whether this
          mailcap entry should be used. The command is defined with the
          command expansion rules defined in the next section. If the
          command returns 0, then the test passed, and Mutt uses this
          entry. If the command returns non-zero, then the test failed,
          and Mutt continues searching for the right entry. Note that the
          content-type must match before Mutt performs the test. For
          example:

text/html; firefox -remote 'openURL(%s)' ; test=RunningX
text/html; lynx %s

          In this example, Mutt will run the program RunningX which will
          return 0 if the X Window manager is running, and non-zero if it
          isn't. If RunningX returns 0, then Mutt will run firefox to
          display the text/html object. If RunningX doesn't return 0, then
          Mutt will go on to the next entry and use lynx to display the
          text/html object.

3.3.2. Search Order

   When searching for an entry in the mailcap file, Mutt will search for
   the most useful entry for its purpose. For instance, if you are
   attempting to print an image/gif, and you have the following entries in
   your mailcap file, Mutt will search for an entry with the print
   command:
image/*;        xv %s
image/gif;      ; print= anytopnm %s | pnmtops | lpr; \
                nametemplate=%s.gif

   Mutt will skip the image/* entry and use the image/gif entry with the
   print command.

   In addition, you can use this with [1004]aauuttoo__vviieeww to denote two
   commands for viewing an attachment, one to be viewed automatically, the
   other to be viewed interactively from the attachment menu using the
   <view-mailcap> function (bound to "m" by default). In addition, you can
   then use the test feature to determine which viewer to use
   interactively depending on your environment.
text/html;      firefox -remote 'openURL(%s)' ; test=RunningX
text/html;      lynx %s; nametemplate=%s.html
text/html;      lynx -dump %s; nametemplate=%s.html; copiousoutput

   For [1005]aauuttoo__vviieeww, Mutt will choose the third entry because of the
   copiousoutput tag. For interactive viewing, Mutt will run the program
   RunningX to determine if it should use the first entry. If the program
   returns non-zero, Mutt will use the second entry for interactive
   viewing. The last entry is for inline display in the pager and the
   <view-attach> function in the attachment menu.

   Entries with the copiousoutput tag should always be specified as the
   last one per type. For non-interactive use, the last entry will then
   actually be the first matching one with the tag set. For
   non-interactive use, only copiousoutput-tagged entries are considered.
   For interactive use, Mutt ignores this tag and treats all entries
   equally. Therefore, if not specified last, all following entries
   without this tag would never be considered for <view-attach> because
   the copiousoutput before them matched already.

3.3.3. Command Expansion

   The various commands defined in the mailcap files are passed to the
   /bin/sh shell using the system(3) function. Before the command is
   passed to /bin/sh -c, it is parsed to expand various special parameters
   with information from Mutt. The keywords Mutt expands are:

   %s
          As seen in the basic mailcap section, this variable is expanded
          to a filename specified by the calling program. This file
          contains the body of the message to view/print/edit or where the
          composing program should place the results of composition. In
          addition, the use of this keyword causes Mutt to not pass the
          body of the message to the view/print/edit program on stdin.

   %t
          Mutt will expand %t to the text representation of the content
          type of the message in the same form as the first parameter of
          the mailcap definition line, i.e. text/html or image/gif.

   %{<parameter>}
          Mutt will expand this to the value of the specified parameter
          from the Content-Type: line of the mail message. For instance,
          if your mail message contains:

Content-Type: text/plain; charset=iso-8859-1

          then Mutt will expand %{charset} to "iso-8859-1". The default
          metamail mailcap file uses this feature to test the charset to
          spawn an xterm using the right charset to view the message.

   \%
          This will be replaced by a literal %.

   Mutt does not currently support the %F and %n keywords specified in RFC
   1524. The main purpose of these parameters is for multipart messages,
   which is handled internally by Mutt.

3.4. Example Mailcap Files

   This mailcap file is fairly simple and standard:
# I'm always running X :)
video/*;        xanim %s > /dev/null
image/*;        xv %s > /dev/null

# I'm always running firefox (if my computer had more memory, maybe)
text/html;      firefox -remote 'openURL(%s)'

   This mailcap file shows quite a number of examples:
# Use xanim to view all videos   Xanim produces a header on startup,
# send that to /dev/null so I don't see it
video/*;        xanim %s > /dev/null

# Send html to a running firefox by remote
text/html;      firefox -remote 'openURL(%s)'; test=RunningFirefox

# If I'm not running firefox but I am running X, start firefox on the
# object
text/html;      firefox %s; test=RunningX

# Else use lynx to view it as text
text/html;      lynx %s

# This version would convert the text/html to text/plain
text/html;      lynx -dump %s; copiousoutput

# I use enscript to print text in two columns to a page
text/*;         more %s; print=enscript -2Gr %s

# Firefox adds a flag to tell itself to view jpegs internally
image/jpeg;xv %s; x-mozilla-flags=internal

# Use xv to view images if I'm running X
# In addition, this uses the \ to extend the line and set my editor
# for images
image/*;xv %s; test=RunningX; \
        edit=xpaint %s

# Convert images to text using the netpbm tools
image/*;  (anytopnm %s | pnmscale -xysize 80 46 | ppmtopgm | pgmtopbm |
pbmtoascii -1x2 ) 2>&1 ; copiousoutput

# Send excel spreadsheets to my NT box
application/ms-excel; open.pl %s

4. MIME Autoview

   Usage:

   auto_view _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ...]
   unauto_view { _* | _m_i_m_e_t_y_p_e ... }

   In addition to explicitly telling Mutt to view an attachment with the
   MIME viewer defined in the mailcap file from the attachments menu, Mutt
   has support for automatically viewing MIME attachments while in the
   pager.

   For this to work, you must define a viewer in the mailcap file which
   uses the copiousoutput option to denote that it is non-interactive.
   Usually, you also use the entry to convert the attachment to a text
   representation which you can view in the pager.

   You then use the _a_u_t_o___v_i_e_w configuration command to list the
   content-types that you wish to view automatically. For instance, if you
   set it to:
auto_view text/html application/x-gunzip \
  application/postscript image/gif application/x-tar-gz

   ...Mutt would try to find corresponding entries for rendering
   attachments of these types as text. A corresponding mailcap could look
   like:
text/html;      lynx -dump %s; copiousoutput; nametemplate=%s.html
image/*;        anytopnm %s | pnmscale -xsize 80 -ysize 50 | ppmtopgm | \
                pgmtopbm | pbmtoascii ; copiousoutput
application/x-gunzip;   gzcat; copiousoutput
application/x-tar-gz; gunzip -c %s | tar -tf - ; copiousoutput
application/postscript; ps2ascii %s; copiousoutput

   _u_n_a_u_t_o___v_i_e_w can be used to remove previous entries from the _a_u_t_o___v_i_e_w
   list. This can be used with [1006]mmeessssaaggee--hhooookk to autoview messages
   based on size, etc. "_u_n_a_u_t_o___v_i_e_w *" will remove all previous entries.

5. MIME Multipart/Alternative

   The multipart/alternative container type only has child MIME parts
   which represent the same content in an alternative way. This is often
   used to send HTML messages which contain an alternative plain text
   representation.

   Mutt has some heuristics for determining which attachment of a
   multipart/alternative type to display:
    1. First, Mutt will check the _a_l_t_e_r_n_a_t_i_v_e___o_r_d_e_r list to determine if
       one of the available types is preferred. It consists of a number of
       MIME types in order, including support for implicit and explicit
       wildcards. For example:
alternative_order text/enriched text/plain text \
  application/postscript image/*

    2. Next, Mutt will check if any of the types have a defined
       [1007]aauuttoo__vviieeww, and use that.
    3. Failing that, Mutt will look for any text type.
    4. As a last attempt, Mutt will look for any type it knows how to
       handle.

   To remove a MIME type from the _a_l_t_e_r_n_a_t_i_v_e___o_r_d_e_r list, use the
   _u_n_a_l_t_e_r_n_a_t_i_v_e___o_r_d_e_r command.

6. Attachment Searching and Counting

   If you ever lose track of attachments in your mailboxes, Mutt's
   attachment-counting and -searching support might be for you. You can
   make your message index display the number of qualifying attachments in
   each message, or search for messages by attachment count. You also can
   configure what kinds of attachments qualify for this feature with the
   _a_t_t_a_c_h_m_e_n_t_s and _u_n_a_t_t_a_c_h_m_e_n_t_s commands.

   In order to provide this information, Mutt needs to fully MIME-parse
   all messages affected first. This can slow down operation especially
   for remote mail folders such as IMAP because all messages have to be
   downloaded first regardless whether the user really wants to view them
   or not though using [1008]SSeeccttiioonn  77..22,,  ""BBooddyy  CCaacchhiinngg"" usually means to
   download the message just once.

   The syntax is:

   attachments _{_ _+_ _|_ _-_ _}_d_i_s_p_o_s_i_t_i_o_n _m_i_m_e_-_t_y_p_e
   unattachments _{_ _+_ _|_ _-_ _}_d_i_s_p_o_s_i_t_i_o_n _m_i_m_e_-_t_y_p_e
   attachments _?

   _d_i_s_p_o_s_i_t_i_o_n is the attachment's Content-Disposition type -- either
   inline or attachment. You can abbreviate this to I or A.

   Disposition is prefixed by either a "+" symbol or a "-" symbol. If it's
   a "+", you're saying that you want to allow this disposition and MIME
   type to qualify. If it's a "-", you're saying that this disposition and
   MIME type is an exception to previous "+" rules. There are examples
   below of how this is useful.

   _m_i_m_e_-_t_y_p_e is the MIME type of the attachment you want the command to
   affect. A MIME type is always of the format major/minor, where major
   describes the broad category of document you're looking at, and minor
   describes the specific type within that category. The major part of
   mime-type must be literal text (or the special token "*"), but the
   minor part may be a regular expression. (Therefore, "*/.*" matches any
   MIME type.)

   The MIME types you give to the _a_t_t_a_c_h_m_e_n_t_s directive are a kind of
   pattern. When you use the _a_t_t_a_c_h_m_e_n_t_s directive, the patterns you
   specify are added to a list. When you use _u_n_a_t_t_a_c_h_m_e_n_t_s, the pattern is
   removed from the list. The patterns are not expanded and matched to
   specific MIME types at this time -- they're just text in a list.
   They're only matched when actually evaluating a message.

   Some examples might help to illustrate. The examples that are not
   commented out define the default configuration of the lists.

   _E_x_a_m_p_l_e_ _5_._2_._ _A_t_t_a_c_h_m_e_n_t_ _c_o_u_n_t_i_n_g

# Removing a pattern from a list removes that pattern literally. It
# does not remove any type matching the pattern.
#
#  attachments   +A */.*
#  attachments   +A image/jpeg
#  unattachments +A */.*
#
# This leaves "attached" image/jpeg files on the allowed attachments
# list. It does not remove all items, as you might expect, because the
# second */.* is not a matching expression at this time.
#
# Remember: "unattachments" only undoes what "attachments" has done!
# It does not trigger any matching on actual messages.

# Qualify any MIME part with an "attachment" disposition, EXCEPT for
# text/x-vcard and application/pgp parts. (PGP parts are already known
# to mutt, and can be searched for with ~g, ~G, and ~k.)
#
# I've added x-pkcs7 to this, since it functions (for S/MIME)
# analogously to PGP signature attachments. S/MIME isn't supported
# in a stock mutt build, but we can still treat it specially here.
#

attachments   +A */.*
attachments   -A text/x-vcard application/pgp.*
attachments   -A application/x-pkcs7-.*


# Discount all MIME parts with an "inline" disposition, unless they're
# text/plain. (Why inline a text/plain part unless it's external to the
# message flow?)

attachments   +I text/plain


# These two lines make Mutt qualify MIME containers.  (So, for example,
# a message/rfc822 forward will count as an attachment.)  The first
# line is unnecessary if you already have "attach-allow */.*", of
# course.  These are off by default!  The MIME elements contained
# within a message/* or multipart/* are still examined, even if the
# containers themselves don't qualify.

#attachments  +A message/.* multipart/.*
#attachments  +I message/.* multipart/.*


## You probably don't really care to know about deleted attachments.
attachments   -A message/external-body
attachments   -I message/external-body

   Entering the command "_a_t_t_a_c_h_m_e_n_t_s ?" as a command will list your
   current settings in Muttrc format, so that it can be pasted elsewhere.

7. MIME Lookup

   Usage:

   mime_lookup _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ...]
   unmime_lookup { _* | _m_i_m_e_t_y_p_e ... }

   Mutt's _m_i_m_e___l_o_o_k_u_p list specifies a list of MIME types that should _n_o_t
   be treated according to their mailcap entry. This option is designed to
   deal with binary types such as application/octet-stream. When an
   attachment's MIME type is listed in _m_i_m_e___l_o_o_k_u_p, then the extension of
   the filename will be compared to the list of extensions in the
   mime.types file. The MIME type associated with this extension will then
   be used to process the attachment according to the rules in the mailcap
   file and according to any other configuration options (such as
   _a_u_t_o___v_i_e_w) specified. Common usage would be:
mime_lookup application/octet-stream application/X-Lotus-Manuscript

   In addition, the unmime_lookup command may be used to disable this
   feature for any particular MIME type if it had been set, for example,
   in a global .muttrc.

Chapter 6. Optional Features

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [1009]11..  GGeenneerraall  NNootteess

        [1010]11..11..  EEnnaabblliinngg//DDiissaabblliinngg  FFeeaattuurreess
        [1011]11..22..  UURRLL  SSyynnttaaxx

   [1012]22..  SSSSLL//TTLLSS  SSuuppppoorrtt
   [1013]33..  PPOOPP33  SSuuppppoorrtt
   [1014]44..  IIMMAAPP  SSuuppppoorrtt

        [1015]44..11..  TThhee  IIMMAAPP  FFoollddeerr  BBrroowwsseerr
        [1016]44..22..  AAuutthheennttiiccaattiioonn

   [1017]55..  SSMMTTPP  SSuuppppoorrtt
   [1018]66..  MMaannaaggiinngg  MMuullttiippllee  AAccccoouunnttss
   [1019]77..  LLooccaall  CCaacchhiinngg

        [1020]77..11..  HHeeaaddeerr  CCaacchhiinngg
        [1021]77..22..  BBooddyy  CCaacchhiinngg
        [1022]77..33..  CCaacchhee  DDiirreeccttoorriieess
        [1023]77..44..  MMaaiinntteennaannccee

   [1024]88..  EExxaacctt  AAddddrreessss  GGeenneerraattiioonn
   [1025]99..  SSeennddiinngg  AAnnoonnyymmoouuss  MMeessssaaggeess  vviiaa  MMiixxmmaasstteerr
   [1026]1100..  SSiiddeebbaarr

        [1027]1100..11..  IInnttrroodduuccttiioonn
        [1028]1100..22..  VVaarriiaabblleess
        [1029]1100..33..  FFuunnccttiioonnss
        [1030]1100..44..  CCoommmmaannddss
        [1031]1100..55..  CCoolloorrss
        [1032]1100..66..  SSoorrtt
        [1033]1100..77..  SSeeee  AAllssoo

1. General Notes

1.1. Enabling/Disabling Features

   Mutt supports several of optional features which can be enabled or
   disabled at compile-time by giving the _c_o_n_f_i_g_u_r_e script certain
   arguments. These are listed in the "Optional features" section of the
   _c_o_n_f_i_g_u_r_e_ _-_-_h_e_l_p output.

   Which features are enabled or disabled can later be determined from the
   output of mutt -v. If a compile option starts with "+" it is enabled
   and disabled if prefixed with "-". For example, if Mutt was compiled
   using GnuTLS for encrypted communication instead of OpenSSL, mutt -v
   would contain:
-USE_SSL_OPENSSL +USE_SSL_GNUTLS

1.2. URL Syntax

   Mutt optionally supports the IMAP, POP3 and SMTP protocols which
   require to access servers using URLs. The canonical syntax for
   specifying URLs in Mutt is (an item enclosed in [] means it is optional
   and may be omitted):
proto[s]://[username[:password]@]server[:port][/path]

   _p_r_o_t_o is the communication protocol: imap for IMAP, pop for POP3 and
   smtp for SMTP. If "s" for "secure communication" is appended, Mutt will
   attempt to establish an encrypted communication using SSL or TLS.

   Since all protocols supported by Mutt support/require authentication,
   login credentials may be specified in the URL. This has the advantage
   that multiple IMAP, POP3 or SMTP servers may be specified (which isn't
   possible using, for example, [1034]$$iimmaapp__uusseerr). The username may
   contain the "@" symbol being used by many mail systems as part of the
   login name. The special characters "/" (%2F), ":" (%3A) and "%" (%25)
   have to be URL-encoded in usernames using the %-notation.

   A password can be given, too but is not recommended if the URL is
   specified in a configuration file on disk.

   If no port number is given, Mutt will use the system's default for the
   given protocol (usually consulting /etc/services).

   The optional path is only relevant for IMAP and ignored elsewhere.

   _E_x_a_m_p_l_e_ _6_._1_._ _U_R_L_s
pops://host/
imaps://user@host/INBOX/Sent
smtp://user@host:587/

2. SSL/TLS Support

   If Mutt is compiled with IMAP, POP3 and/or SMTP support, it can also be
   compiled with support for SSL or TLS using either OpenSSL or GnuTLS (
   by running the _c_o_n_f_i_g_u_r_e script with the _-_-_e_n_a_b_l_e_-_s_s_l_=_._._. option for
   OpenSSL or _-_-_e_n_a_b_l_e_-_g_n_u_t_l_s_=_._._. for GnuTLS). Mutt can then attempt to
   encrypt communication with remote servers if these protocols are
   suffixed with "s" for "secure communication".

3. POP3 Support

   If Mutt is compiled with POP3 support (by running the _c_o_n_f_i_g_u_r_e script
   with the _-_-_e_n_a_b_l_e_-_p_o_p flag), it has the ability to work with mailboxes
   located on a remote POP3 server and fetch mail for local browsing.

   Remote POP3 servers can be accessed using URLs with the pop protocol
   for unencrypted and pops for encrypted communication, see
   [1035]SSeeccttiioonn  11..22,,  ""UURRLL  SSyynnttaaxx"" for details.

   Polling for new mail is more expensive over POP3 than locally. For this
   reason the frequency at which Mutt will check for mail remotely can be
   controlled by the [1036]$$ppoopp__cchheecckkiinntteerrvvaall variable, which defaults to
   every 60 seconds.

   POP is read-only which doesn't allow for some features like editing
   messages or changing flags. However, using [1037]SSeeccttiioonn  77..11,,  ""HHeeaaddeerr
   CCaacchhiinngg"" and [1038]SSeeccttiioonn  77..22,,  ""BBooddyy  CCaacchhiinngg"" Mutt simulates the
   new/old/read flags as well as flagged and replied. Mutt applies some
   logic on top of remote messages but cannot change them so that
   modifications of flags are lost when messages are downloaded from the
   POP server (either by Mutt or other tools).

   Another way to access your POP3 mail is the <fetch-mail> function
   (default: G). It allows to connect to [1039]$$ppoopp__hhoosstt, fetch all your
   new mail and place it in the local [1040]$$ssppoooollffiillee. After this point,
   Mutt runs exactly as if the mail had always been local.

Note

   If you only need to fetch all messages to a local mailbox you should
   consider using a specialized program, such as fetchmail(1), getmail(1)
   or similar.

4. IMAP Support

   If Mutt was compiled with IMAP support (by running the _c_o_n_f_i_g_u_r_e script
   with the _-_-_e_n_a_b_l_e_-_i_m_a_p flag), it has the ability to work with folders
   located on a remote IMAP server.

   You can access the remote inbox by selecting the folder by its URL (see
   [1041]SSeeccttiioonn  11..22,,  ""UURRLL  SSyynnttaaxx"" for details) using the imap or imaps
   protocol. Alternatively, a pine-compatible notation is also supported,
   i.e. {[username@]imapserver[:port][/ssl]}path/to/folder

   Note that not all servers use "/" as the hierarchy separator. Mutt
   should correctly notice which separator is being used by the server and
   convert paths accordingly.

   When browsing folders on an IMAP server, you can toggle whether to look
   at only the folders you are subscribed to, or all folders with the
   _t_o_g_g_l_e_-_s_u_b_s_c_r_i_b_e_d command. See also the [1042]$$iimmaapp__lliisstt__ssuubbssccrriibbeedd
   variable.

   Polling for new mail on an IMAP server can cause noticeable delays. So,
   you'll want to carefully tune the [1043]$$mmaaiill__cchheecckk and [1044]$$ttiimmeeoouutt
   variables. Reasonable values are:
set mail_check=90
set timeout=15

   with relatively good results even over slow modem lines.

Note

   Note that if you are using mbox as the mail store on UW servers prior
   to v12.250, the server has been reported to disconnect a client if
   another client selects the same folder.

4.1. The IMAP Folder Browser

   As of version 1.2, Mutt supports browsing mailboxes on an IMAP server.
   This is mostly the same as the local file browser, with the following
   differences:
     * In lieu of file permissions, Mutt displays the string "IMAP",
       possibly followed by the symbol "+", indicating that the entry
       contains both messages and subfolders. On Cyrus-like servers
       folders will often contain both messages and subfolders.
     * For the case where an entry can contain both messages and
       subfolders, the selection key (bound to enter by default) will
       choose to descend into the subfolder view. If you wish to view the
       messages in that folder, you must use view-file instead (bound to
       space by default).
     * You can create, delete and rename mailboxes with the
       <create-mailbox>, <delete-mailbox>, and <rename-mailbox> commands
       (default bindings: C, d and r, respectively). You may also
       <subscribe> and <unsubscribe> to mailboxes (normally these are
       bound to s and u, respectively).

4.2. Authentication

   Mutt supports four authentication methods with IMAP servers: SASL,
   GSSAPI, CRAM-MD5, and LOGIN (there is a patch by Grant Edwards to add
   NTLM authentication for you poor exchange users out there, but it has
   yet to be integrated into the main tree). There is also support for the
   pseudo-protocol ANONYMOUS, which allows you to log in to a public IMAP
   server without having an account. To use ANONYMOUS, simply make your
   username blank or "anonymous".

   SASL is a special super-authenticator, which selects among several
   protocols (including GSSAPI, CRAM-MD5, ANONYMOUS, and DIGEST-MD5) the
   most secure method available on your host and the server. Using some of
   these methods (including DIGEST-MD5 and possibly GSSAPI), your entire
   session will be encrypted and invisible to those teeming network
   snoops. It is the best option if you have it. To use it, you must have
   the Cyrus SASL library installed on your system and compile Mutt with
   the _-_-_w_i_t_h_-_s_a_s_l flag.

   Mutt will try whichever methods are compiled in and available on the
   server, in the following order: SASL, ANONYMOUS, GSSAPI, CRAM-MD5,
   LOGIN.

   There are a few variables which control authentication:
     * [1045]$$iimmaapp__uusseerr - controls the username under which you request
       authentication on the IMAP server, for all authenticators. This is
       overridden by an explicit username in the mailbox path (i.e. by
       using a mailbox name of the form {user@host}).
     * [1046]$$iimmaapp__ppaassss - a password which you may preset, used by all
       authentication methods where a password is needed.
     * [1047]$$iimmaapp__aauutthheennttiiccaattoorrss - a colon-delimited list of IMAP
       authentication methods to try, in the order you wish to try them.
       If specified, this overrides Mutt's default (attempt everything, in
       the order listed above).

5. SMTP Support

   Besides supporting traditional mail delivery through a
   sendmail-compatible program, Mutt supports delivery through SMTP if it
   was configured and built with --enable-smtp.

   If the configuration variable [1048]$$ssmmttpp__uurrll is set, Mutt will contact
   the given SMTP server to deliver messages; if it is unset, Mutt will
   use the program specified by [1049]$$sseennddmmaaiill.

   For details on the URL syntax, please see [1050]SSeeccttiioonn  11..22,,  ""UURRLL
   SSyynnttaaxx"".

   The built-in SMTP support supports encryption (the smtps protocol using
   SSL or TLS) as well as SMTP authentication using SASL. The
   authentication mechanisms for SASL are specified in
   [1051]$$ssmmttpp__aauutthheennttiiccaattoorrss defaulting to an empty list which makes Mutt
   try all available methods from most-secure to least-secure.

6. Managing Multiple Accounts

   Usage:

   account-hook _r_e_g_e_x_p _c_o_m_m_a_n_d

   If you happen to have accounts on multiple IMAP, POP and/or SMTP
   servers, you may find managing all the authentication settings
   inconvenient and error-prone. The [1052]aaccccoouunntt--hhooookk command may help.
   This hook works like [1053]ffoollddeerr--hhooookk but is invoked whenever Mutt
   needs to access a remote mailbox (including inside the folder browser),
   not just when you open the mailbox. This includes (for example) polling
   for new mail, storing Fcc messages and saving messages to a folder. As
   a consequence, [1054]aaccccoouunntt--hhooookk should only be used to set
   connection-related settings such as passwords or tunnel commands but
   not settings such as sender address or name (because in general it
   should be considered unpredictable which [1055]aaccccoouunntt--hhooookk was last
   used).

   Some examples:
account-hook . 'unset imap_user; unset imap_pass; unset tunnel'
account-hook imap://host1/ 'set imap_user=me1 imap_pass=foo'
account-hook imap://host2/ 'set tunnel="ssh host2 /usr/libexec/imapd"'
account-hook smtp://user@host3/ 'set tunnel="ssh host3 /usr/libexec/smtpd"'

   To manage multiple accounts with, for example, different values of
   [1056]$$rreeccoorrdd or sender addresses, [1057]ffoollddeerr--hhooookk has to be be used
   together with the [1058]mmaaiillbbooxxeess command.

   _E_x_a_m_p_l_e_ _6_._2_._ _M_a_n_a_g_i_n_g_ _m_u_l_t_i_p_l_e_ _a_c_c_o_u_n_t_s
mailboxes imap://user@host1/INBOX
folder-hook imap://user@host1/ 'set folder=imap://host1/ ; set record=+INBOX/Sen
t'

mailboxes imap://user@host2/INBOX
folder-hook imap://user@host2/ 'set folder=imap://host2/ ; set record=+INBOX/Sen
t'

   In example [1059]EExxaammppllee  66..22,,  ""MMaannaaggiinngg  mmuullttiippllee  aaccccoouunnttss"" the folders
   are defined using [1060]mmaaiillbbooxxeess so Mutt polls them for new mail. Each
   [1061]ffoollddeerr--hhooookk triggers when one mailbox below each IMAP account is
   opened and sets [1062]$$ffoollddeerr to the account's root folder. Next, it
   sets [1063]$$rreeccoorrdd to the _I_N_B_O_X_/_S_e_n_t folder below the newly set
   [1064]$$ffoollddeerr. Please notice that the value the "+" [1065]mmaaiillbbooxx
   sshhoorrttccuutt refers to depends on the _c_u_r_r_e_n_t value of [1066]$$ffoollddeerr and
   therefore has to be set separately per account. Setting other values
   like [1067]$$ffrroomm or [1068]$$ssiiggnnaattuurree is analogous to setting
   [1069]$$rreeccoorrdd.

7. Local Caching

   Mutt contains two types of local caching: _(_1_) the so-called "header
   caching" and _(_2_) the so-called "body caching" which are both described
   in this section.

   Header caching is optional as it depends on external libraries, body
   caching is always enabled if Mutt is compiled with POP and/or IMAP
   support as these use it (body caching requires no external library).

7.1. Header Caching

   Mutt provides optional support for caching message headers for the
   following types of folders: IMAP, POP, Maildir and MH. Header caching
   greatly speeds up opening large folders because for remote folders,
   headers usually only need to be downloaded once. For Maildir and MH,
   reading the headers from a single file is much faster than looking at
   possibly thousands of single files (since Maildir and MH use one file
   per message.)

   Header caching can be enabled via the configure script and the
   _-_-_e_n_a_b_l_e_-_h_c_a_c_h_e option. It's not turned on by default because external
   database libraries are required: one of tokyocabinet, qdbm, gdbm or bdb
   must be present.

   If enabled, [1070]$$hheeaaddeerr__ccaacchhee can be used to either point to a file
   or a directory. If set to point to a file, one database file for all
   folders will be used (which may result in lower performance), but one
   file per folder if it points to a directory.

7.2. Body Caching

   Both cache methods can be combined using the same directory for storage
   (and for IMAP/POP even provide meaningful file names) which simplifies
   manual maintenance tasks.

   In addition to caching message headers only, Mutt can also cache whole
   message bodies. This results in faster display of messages for POP and
   IMAP folders because messages usually have to be downloaded only once.

   For configuration, the variable [1071]$$mmeessssaaggee__ccaacchheeddiirr must point to a
   directory. There, Mutt will create a hierarchy of subdirectories named
   like the account and mailbox path the cache is for.

7.3. Cache Directories

   For using both, header and body caching, [1072]$$hheeaaddeerr__ccaacchhee and
   [1073]$$mmeessssaaggee__ccaacchheeddiirr can be safely set to the same value.

   In a header or body cache directory, Mutt creates a directory hierarchy
   named like: proto:user@hostname where proto is either "pop" or "imap."
   Within there, for each folder, Mutt stores messages in single files and
   header caches in files with the ".hcache" extension. All files can be
   removed as needed if the consumed disk space becomes an issue as Mutt
   will silently fetch missing items again. Pathnames are always stored in
   UTF-8 encoding.

   For Maildir and MH, the header cache files are named after the MD5
   checksum of the path.

7.4. Maintenance

   Mutt does not (yet) support maintenance features for header cache
   database files so that files have to be removed in case they grow too
   big. It depends on the database library used for header caching whether
   disk space freed by removing messages is re-used.

   For body caches, Mutt can keep the local cache in sync with the remote
   mailbox if the [1074]$$mmeessssaaggee__ccaacchhee__cclleeaann variable is set. Cleaning
   means to remove messages from the cache which are no longer present in
   the mailbox which only happens when other mail clients or instances of
   Mutt using a different body cache location delete messages (Mutt itself
   removes deleted messages from the cache when syncing a mailbox). As
   cleaning can take a noticeable amount of time, it should not be set in
   general but only occasionally.

8. Exact Address Generation

   Mutt supports the "Name <user@host>" address syntax for reading and
   writing messages, the older "user@host (Name)" syntax is only supported
   when reading messages. The _-_-_e_n_a_b_l_e_-_e_x_a_c_t_-_a_d_d_r_e_s_s switch can be given
   to configure to build it with write-support for the latter syntax.
   EXACT_ADDRESS in the output of mutt -v indicates whether it's
   supported.

9. Sending Anonymous Messages via Mixmaster

   You may also have compiled Mutt to co-operate with Mixmaster, an
   anonymous remailer. Mixmaster permits you to send your messages
   anonymously using a chain of remailers. Mixmaster support in Mutt is
   for mixmaster version 2.04 or later.

   To use it, you'll have to obey certain restrictions. Most important,
   you cannot use the Cc and Bcc headers. To tell Mutt to use mixmaster,
   you have to select a remailer chain, using the mix function on the
   compose menu.

   The chain selection screen is divided into two parts. In the (larger)
   upper part, you get a list of remailers you may use. In the lower part,
   you see the currently selected chain of remailers.

   You can navigate in the chain using the <chain-prev> and <chain-next>
   functions, which are by default bound to the left and right arrows and
   to the h and l keys (think vi keyboard bindings). To insert a remailer
   at the current chain position, use the <insert> function. To append a
   remailer behind the current chain position, use <select-entry> or
   <append>. You can also delete entries from the chain, using the
   corresponding function. Finally, to abandon your changes, leave the
   menu, or <accept> them pressing (by default) the Return key.

   Note that different remailers do have different capabilities, indicated
   in the %c entry of the remailer menu lines (see
   [1075]$$mmiixx__eennttrryy__ffoorrmmaatt). Most important is the "middleman" capability,
   indicated by a capital "M": This means that the remailer in question
   cannot be used as the final element of a chain, but will only forward
   messages to other mixmaster remailers. For details on the other
   capabilities, please have a look at the mixmaster documentation.

10. Sidebar

Overview of mailboxes

10.1. Introduction

   The Sidebar shows a list of all your mailboxes. The list can be turned
   on and off, it can be themed and the list style can be configured.

10.2. Variables

   _T_a_b_l_e_ _6_._1_._ _S_i_d_e_b_a_r_ _V_a_r_i_a_b_l_e_s
           Name           Type       Default
   sidebar_delim_chars   string  /.
   sidebar_divider_char  string  |
   sidebar_folder_indent boolean no
   sidebar_format        string  %B%* %n
   sidebar_indent_string string     (two spaces)
   sidebar_new_mail_only boolean no
   sidebar_next_new_wrap boolean no
   sidebar_short_path    boolean no
   sidebar_sort_method   enum    unsorted
   sidebar_visible       boolean no
   sidebar_width         number  20

10.3. Functions

   Sidebar adds the following functions to Mutt. By default, none of them
   are bound to keys.

   _T_a_b_l_e_ _6_._2_._ _S_i_d_e_b_a_r_ _F_u_n_c_t_i_o_n_s
   Menus Function Description
   index,pager <sidebar-next> Move the highlight to next mailbox
   index,pager <sidebar-next-new> Move the highlight to next mailbox with
   new mail
   index,pager <sidebar-open> Open highlighted mailbox
   index,pager <sidebar-page-down> Scroll the Sidebar down 1 page
   index,pager <sidebar-page-up> Scroll the Sidebar up 1 page
   index,pager <sidebar-prev> Move the highlight to previous mailbox
   index,pager <sidebar-prev-new> Move the highlight to previous mailbox
   with new mail
   index,pager <sidebar-toggle-visible> Make the Sidebar (in)visible

10.4. Commands

   sidebar_whitelist _m_a_i_l_b_o_x [ _m_a_i_l_b_o_x ...]

   This command specifies mailboxes that will always be displayed in the
   sidebar, even if [1076]$$ssiiddeebbaarr__nneeww__mmaaiill__oonnllyy is set and the mailbox
   does not contain new mail.

10.5. Colors

   _T_a_b_l_e_ _6_._3_._ _S_i_d_e_b_a_r_ _C_o_l_o_r_s
   Name Default Color Description
   sidebar_divider default The dividing line between the Sidebar and the
   Index/Pager panels
   sidebar_flagged default Mailboxes containing flagged mail
   sidebar_highlight underline Cursor to select a mailbox
   sidebar_indicator mutt indicator The mailbox open in the Index panel
   sidebar_new default Mailboxes containing new mail
   sidebar_spoolfile default Mailbox that receives incoming mail

   If the sidebar_indicator color isn't set, then the default Mutt
   indicator color will be used (the color used in the index panel).

10.6. Sort

   _T_a_b_l_e_ _6_._4_._ _S_i_d_e_b_a_r_ _S_o_r_t
     Sort          Description
   alpha    Alphabetically by path
   count    Total number of messages
   flagged  Number of flagged messages
   name     Alphabetically by path
   new      Number of new messages
   path     Alphabetically by path
   unsorted Do not resort the paths

10.7. See Also

     * [1077]RReegguullaarr  EExxpprreessssiioonnss
     * [1078]PPaatttteerrnnss
     * [1079]CCoolloorr  ccoommmmaanndd

Chapter 7. Security Considerations

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [1080]11..  PPaasssswwoorrddss
   [1081]22..  TTeemmppoorraarryy  FFiilleess
   [1082]33..  IInnffoorrmmaattiioonn  LLeeaakkss

        [1083]33..11..  MMeessssaaggee--IIdd::  hheeaaddeerrss
        [1084]33..22..  mmaaiillttoo::--ssttyyllee  LLiinnkkss

   [1085]44..  EExxtteerrnnaall  AApppplliiccaattiioonnss

   First of all, Mutt contains no security holes included by intention but
   may contain unknown security holes. As a consequence, please run Mutt
   only with as few permissions as possible. Especially, do not run Mutt
   as the super user.

   When configuring Mutt, there're some points to note about secure setups
   so please read this chapter carefully.

1. Passwords

   Although Mutt can be told the various passwords for accounts, please
   never store passwords in configuration files. Besides the fact that the
   system's operator can always read them, you could forget to mask it out
   when reporting a bug or asking for help via a mailing list. Even worse,
   your mail including your password could be archived by internet search
   engines, mail-to-news gateways etc. It may already be too late before
   you notice your mistake.

2. Temporary Files

   Mutt uses many temporary files for viewing messages, verifying digital
   signatures, etc. As long as being used, these files are visible by
   other users and maybe even readable in case of misconfiguration. Also,
   a different location for these files may be desired which can be
   changed via the [1086]$$ttmmppddiirr variable.

3. Information Leaks

3.1. Message-Id: headers

   Message-Id: headers contain a local part that is to be created in a
   unique fashion. In order to do so, Mutt will "leak" some information to
   the outside world when sending messages: the generation of this header
   includes a step counter which is increased (and rotated) with every
   message sent. In a longer running mutt session, others can make
   assumptions about your mailing habits depending on the number of
   messages sent. If this is not desired, the header can be manually
   provided using [1087]$$eeddiitt__hheeaaddeerrss (though not recommended).

3.2. mailto:-style Links

   As Mutt be can be set up to be the mail client to handle mailto: style
   links in websites, there're security considerations, too. Arbitrary
   header fields can be embedded in these links which could override
   existing header fields or attach arbitrary files using [1088]tthhee
   AAttttaacchh::  ppsseeuuddoohheeaaddeerr. This may be problematic if the
   [1089]$$eeddiitt--hheeaaddeerrss variable is _u_n_s_e_t, i.e. the user doesn't want to
   see header fields while editing the message and doesn't pay enough
   attention to the compose menu's listing of attachments.

   For example, following a link like
mailto:joe@host?Attach=~/.gnupg/secring.gpg

   will send out the user's private gnupg keyring to joe@host if the user
   doesn't follow the information on screen carefully enough.

   To prevent these issues, Mutt by default only accepts the Subject and
   Body headers. Allowed headers can be adjusted with the
   [1090]mmaaiillttoo__aallllooww and [1091]uunnmmaaiillttoo__aallllooww commands.

4. External Applications

   Mutt in many places has to rely on external applications or for
   convenience supports mechanisms involving external applications.

   One of these is the mailcap mechanism as defined by RfC1524. Details
   about a secure use of the mailcap mechanisms is given in
   [1092]SSeeccttiioonn  33..22,,  ""SSeeccuurree  UUssee  ooff  MMaaiillccaapp"".

   Besides the mailcap mechanism, Mutt uses a number of other external
   utilities for operation, for example to provide crypto support, in
   backtick expansion in configuration files or format string filters. The
   same security considerations apply for these as for tools involved via
   mailcap.

Chapter 8. Performance Tuning

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [1093]11..  RReeaaddiinngg  aanndd  WWrriittiinngg  MMaaiillbbooxxeess
   [1094]22..  RReeaaddiinngg  MMeessssaaggeess  ffrroomm  RReemmoottee  FFoollddeerrss
   [1095]33..  SSeeaarrcchhiinngg  aanndd  LLiimmiittiinngg

1. Reading and Writing Mailboxes

   Mutt's performance when reading mailboxes can be improved in two ways:
    1. For remote folders (IMAP and POP) as well as folders using
       one-file-per message storage (Maildir and MH), Mutt's performance
       can be greatly improved using [1096]hheeaaddeerr  ccaacchhiinngg. using a single
       database per folder.
    2. Mutt provides the [1097]$$rreeaadd__iinncc and [1098]$$wwrriittee__iinncc variables to
       specify at which rate to update progress counters. If these values
       are too low, Mutt may spend more time on updating the progress
       counter than it spends on actually reading/writing folders.
       For example, when opening a maildir folder with a few thousand
       messages, the default value for [1099]$$rreeaadd__iinncc may be too low. It
       can be tuned on on a folder-basis using [1100]ffoollddeerr--hhooookkss:
# use very high $read_inc to speed up reading hcache'd maildirs
folder-hook . 'set read_inc=1000'
# use lower value for reading slower remote IMAP folders
folder-hook ^imap 'set read_inc=100'
# use even lower value for reading even slower remote POP folders
folder-hook ^pop 'set read_inc=1'

   These settings work on a per-message basis. However, as messages may
   greatly differ in size and certain operations are much faster than
   others, even per-folder settings of the increment variables may not be
   desirable as they produce either too few or too much progress updates.
   Thus, Mutt allows to limit the number of progress updates per second
   it'll actually send to the terminal using the [1101]$$ttiimmee__iinncc variable.

2. Reading Messages from Remote Folders

   Reading messages from remote folders such as IMAP an POP can be slow
   especially for large mailboxes since Mutt only caches a very limited
   number of recently viewed messages (usually 10) per session (so that it
   will be gone for the next session.)

   To improve performance and permanently cache whole messages, please
   refer to Mutt's so-called [1102]bbooddyy  ccaacchhiinngg for details.

3. Searching and Limiting

   When searching mailboxes either via a search or a limit action, for
   some patterns Mutt distinguishes between regular expression and string
   searches. For regular expressions, patterns are prefixed with "~" and
   with "=" for string searches.

   Even though a regular expression search is fast, it's several times
   slower than a pure string search which is noticeable especially on
   large folders. As a consequence, a string search should be used instead
   of a regular expression search if the user already knows enough about
   the search pattern.

   For example, when limiting a large folder to all messages sent to or by
   an author, it's much faster to search for the initial part of an e-mail
   address via =Luser@ instead of ~Luser@. This is especially true for
   searching message bodies since a larger amount of input has to be
   searched.

   As for regular expressions, a lower case string search pattern makes
   Mutt perform a case-insensitive search except for IMAP (because for
   IMAP Mutt performs server-side searches which don't support
   case-insensitivity).

Chapter 9. Reference

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [1103]11..  CCoommmmaanndd--LLiinnee  OOppttiioonnss
   [1104]22..  CCoonnffiigguurraattiioonn  CCoommmmaannddss
   [1105]33..  CCoonnffiigguurraattiioonn  VVaarriiaabblleess

        [1106]33..11..  aabboorrtt__nnoossuubbjjeecctt
        [1107]33..22..  aabboorrtt__uunnmmooddiiffiieedd
        [1108]33..33..  aalliiaass__ffiillee
        [1109]33..44..  aalliiaass__ffoorrmmaatt
        [1110]33..55..  aallllooww__88bbiitt
        [1111]33..66..  aallllooww__aannssii
        [1112]33..77..  aarrrrooww__ccuurrssoorr
        [1113]33..88..  aasscciiii__cchhaarrss
        [1114]33..99..  aasskkbbcccc
        [1115]33..1100..  aasskkcccc
        [1116]33..1111..  aassssuummeedd__cchhaarrsseett
        [1117]33..1122..  aattttaacchh__cchhaarrsseett
        [1118]33..1133..  aattttaacchh__ffoorrmmaatt
        [1119]33..1144..  aattttaacchh__sseepp
        [1120]33..1155..  aattttaacchh__sspplliitt
        [1121]33..1166..  aattttrriibbuuttiioonn
        [1122]33..1177..  aauuttoo__ttaagg
        [1123]33..1188..  aauuttooeeddiitt
        [1124]33..1199..  bbeeeepp
        [1125]33..2200..  bbeeeepp__nneeww
        [1126]33..2211..  bboouunnccee
        [1127]33..2222..  bboouunnccee__ddeelliivveerreedd
        [1128]33..2233..  bbrraaiillllee__ffrriieennddllyy
        [1129]33..2244..  cceerrttiiffiiccaattee__ffiillee
        [1130]33..2255..  cchhaarrsseett
        [1131]33..2266..  cchheecckk__mmbbooxx__ssiizzee
        [1132]33..2277..  cchheecckk__nneeww
        [1133]33..2288..  ccoollllaappssee__uunnrreeaadd
        [1134]33..2299..  ccoommppoossee__ffoorrmmaatt
        [1135]33..3300..  ccoonnffiigg__cchhaarrsseett
        [1136]33..3311..  ccoonnffiirrmmaappppeenndd
        [1137]33..3322..  ccoonnffiirrmmccrreeaattee
        [1138]33..3333..  ccoonnnneecctt__ttiimmeeoouutt
        [1139]33..3344..  ccoonntteenntt__ttyyppee
        [1140]33..3355..  ccooppyy
        [1141]33..3366..  ccrryypptt__aauuttooeennccrryypptt
        [1142]33..3377..  ccrryypptt__aauuttooppggpp
        [1143]33..3388..  ccrryypptt__aauuttoossiiggnn
        [1144]33..3399..  ccrryypptt__aauuttoossmmiimmee
        [1145]33..4400..  ccrryypptt__ccoonnffiirrmmhhooookk
        [1146]33..4411..  ccrryypptt__ooppppoorrttuunniissttiicc__eennccrryypptt
        [1147]33..4422..  ccrryypptt__rreeppllyyeennccrryypptt
        [1148]33..4433..  ccrryypptt__rreeppllyyssiiggnn
        [1149]33..4444..  ccrryypptt__rreeppllyyssiiggnneennccrryypptteedd
        [1150]33..4455..  ccrryypptt__ttiimmeessttaammpp
        [1151]33..4466..  ccrryypptt__uussee__ggppggmmee
        [1152]33..4477..  ccrryypptt__uussee__ppkkaa
        [1153]33..4488..  ccrryypptt__vveerriiffyy__ssiigg
        [1154]33..4499..  ddaattee__ffoorrmmaatt
        [1155]33..5500..  ddeeffaauulltt__hhooookk
        [1156]33..5511..  ddeelleettee
        [1157]33..5522..  ddeelleettee__uunnttaagg
        [1158]33..5533..  ddiiggeesstt__ccoollllaappssee
        [1159]33..5544..  ddiissppllaayy__ffiilltteerr
        [1160]33..5555..  ddoottlloocckk__pprrooggrraamm
        [1161]33..5566..  ddssnn__nnoottiiffyy
        [1162]33..5577..  ddssnn__rreettuurrnn
        [1163]33..5588..  dduupplliiccaattee__tthhrreeaaddss
        [1164]33..5599..  eeddiitt__hheeaaddeerrss
        [1165]33..6600..  eeddiittoorr
        [1166]33..6611..  eennccooddee__ffrroomm
        [1167]33..6622..  eennttrrooppyy__ffiillee
        [1168]33..6633..  eennvveellooppee__ffrroomm__aaddddrreessss
        [1169]33..6644..  eessccaappee
        [1170]33..6655..  ffaasstt__rreeppllyy
        [1171]33..6666..  ffcccc__aattttaacchh
        [1172]33..6677..  ffcccc__cclleeaarr
        [1173]33..6688..  ffoollddeerr
        [1174]33..6699..  ffoollddeerr__ffoorrmmaatt
        [1175]33..7700..  ffoolllloowwuupp__ttoo
        [1176]33..7711..  ffoorrccee__nnaammee
        [1177]33..7722..  ffoorrwwaarrdd__ddeeccooddee
        [1178]33..7733..  ffoorrwwaarrdd__ddeeccrryypptt
        [1179]33..7744..  ffoorrwwaarrdd__eeddiitt
        [1180]33..7755..  ffoorrwwaarrdd__ffoorrmmaatt
        [1181]33..7766..  ffoorrwwaarrdd__qquuoottee
        [1182]33..7777..  ffrroomm
        [1183]33..7788..  ggeeccooss__mmaasskk
        [1184]33..7799..  hhddrrss
        [1185]33..8800..  hheeaaddeerr
        [1186]33..8811..  hheeaaddeerr__ccaacchhee
        [1187]33..8822..  hheeaaddeerr__ccaacchhee__ccoommpprreessss
        [1188]33..8833..  hheeaaddeerr__ccaacchhee__ppaaggeessiizzee
        [1189]33..8844..  hheellpp
        [1190]33..8855..  hhiiddddeenn__hhoosstt
        [1191]33..8866..  hhiiddee__lliimmiitteedd
        [1192]33..8877..  hhiiddee__mmiissssiinngg
        [1193]33..8888..  hhiiddee__tthhrreeaadd__ssuubbjjeecctt
        [1194]33..8899..  hhiiddee__ttoopp__lliimmiitteedd
        [1195]33..9900..  hhiiddee__ttoopp__mmiissssiinngg
        [1196]33..9911..  hhiissttoorryy
        [1197]33..9922..  hhiissttoorryy__ffiillee
        [1198]33..9933..  hhoonnoorr__ddiissppoossiittiioonn
        [1199]33..9944..  hhoonnoorr__ffoolllloowwuupp__ttoo
        [1200]33..9955..  hhoossttnnaammee
        [1201]33..9966..  iiddnn__ddeeccooddee
        [1202]33..9977..  iiddnn__eennccooddee
        [1203]33..9988..  iiggnnoorree__lliinneeaarr__wwhhiittee__ssppaaccee
        [1204]33..9999..  iiggnnoorree__lliisstt__rreeppllyy__ttoo
        [1205]33..110000..  iimmaapp__aauutthheennttiiccaattoorrss
        [1206]33..110011..  iimmaapp__cchheecckk__ssuubbssccrriibbeedd
        [1207]33..110022..  iimmaapp__ddeelliimm__cchhaarrss
        [1208]33..110033..  iimmaapp__hheeaaddeerrss
        [1209]33..110044..  iimmaapp__iiddllee
        [1210]33..110055..  iimmaapp__kkeeeeppaalliivvee
        [1211]33..110066..  iimmaapp__lliisstt__ssuubbssccrriibbeedd
        [1212]33..110077..  iimmaapp__llooggiinn
        [1213]33..110088..  iimmaapp__ppaassss
        [1214]33..110099..  iimmaapp__ppaassssiivvee
        [1215]33..111100..  iimmaapp__ppeeeekk
        [1216]33..111111..  iimmaapp__ppiippeelliinnee__ddeepptthh
        [1217]33..111122..  iimmaapp__sseerrvveerrnnooiissee
        [1218]33..111133..  iimmaapp__uusseerr
        [1219]33..111144..  iimmpplliicciitt__aauuttoovviieeww
        [1220]33..111155..  iinncclluuddee
        [1221]33..111166..  iinncclluuddee__oonnllyyffiirrsstt
        [1222]33..111177..  iinnddeenntt__ssttrriinngg
        [1223]33..111188..  iinnddeexx__ffoorrmmaatt
        [1224]33..111199..  iissppeellll
        [1225]33..112200..  kkeeeepp__ffllaaggggeedd
        [1226]33..112211..  llooccaallee
        [1227]33..112222..  mmaaiill__cchheecckk
        [1228]33..112233..  mmaaiill__cchheecckk__rreecceenntt
        [1229]33..112244..  mmaaiill__cchheecckk__ssttaattss
        [1230]33..112255..  mmaaiill__cchheecckk__ssttaattss__iinntteerrvvaall
        [1231]33..112266..  mmaaiillccaapp__ppaatthh
        [1232]33..112277..  mmaaiillccaapp__ssaanniittiizzee
        [1233]33..112288..  mmaaiillddiirr__hheeaaddeerr__ccaacchhee__vveerriiffyy
        [1234]33..112299..  mmaaiillddiirr__ttrraasshh
        [1235]33..113300..  mmaaiillddiirr__cchheecckk__ccuurr
        [1236]33..113311..  mmaarrkk__oolldd
        [1237]33..113322..  mmaarrkkeerrss
        [1238]33..113333..  mmaasskk
        [1239]33..113344..  mmbbooxx
        [1240]33..113355..  mmbbooxx__ttyyppee
        [1241]33..113366..  mmeennuu__ccoonntteexxtt
        [1242]33..113377..  mmeennuu__mmoovvee__ooffff
        [1243]33..113388..  mmeennuu__ssccrroollll
        [1244]33..113399..  mmeessssaaggee__ccaacchhee__cclleeaann
        [1245]33..114400..  mmeessssaaggee__ccaacchheeddiirr
        [1246]33..114411..  mmeessssaaggee__ffoorrmmaatt
        [1247]33..114422..  mmeettaa__kkeeyy
        [1248]33..114433..  mmeettoooo
        [1249]33..114444..  mmhh__ppuurrggee
        [1250]33..114455..  mmhh__sseeqq__ffllaaggggeedd
        [1251]33..114466..  mmhh__sseeqq__rreepplliieedd
        [1252]33..114477..  mmhh__sseeqq__uunnsseeeenn
        [1253]33..114488..  mmiimmee__ffoorrwwaarrdd
        [1254]33..114499..  mmiimmee__ffoorrwwaarrdd__ddeeccooddee
        [1255]33..115500..  mmiimmee__ffoorrwwaarrdd__rreesstt
        [1256]33..115511..  mmiixx__eennttrryy__ffoorrmmaatt
        [1257]33..115522..  mmiixxmmaasstteerr
        [1258]33..115533..  mmoovvee
        [1259]33..115544..  nnaarrrrooww__ttrreeee
        [1260]33..115555..  nneett__iinncc
        [1261]33..115566..  ppaaggeerr
        [1262]33..115577..  ppaaggeerr__ccoonntteexxtt
        [1263]33..115588..  ppaaggeerr__ffoorrmmaatt
        [1264]33..115599..  ppaaggeerr__iinnddeexx__lliinneess
        [1265]33..116600..  ppaaggeerr__ssttoopp
        [1266]33..116611..  ppggpp__aauuttoo__ddeeccooddee
        [1267]33..116622..  ppggpp__aauuttooiinnlliinnee
        [1268]33..116633..  ppggpp__cchheecckk__eexxiitt
        [1269]33..116644..  ppggpp__cclleeaarrssiiggnn__ccoommmmaanndd
        [1270]33..116655..  ppggpp__ddeeccooddee__ccoommmmaanndd
        [1271]33..116666..  ppggpp__ddeeccrryypptt__ccoommmmaanndd
        [1272]33..116677..  ppggpp__ddeeccrryyppttiioonn__ookkaayy
        [1273]33..116688..  ppggpp__eennccrryypptt__oonnllyy__ccoommmmaanndd
        [1274]33..116699..  ppggpp__eennccrryypptt__ssiiggnn__ccoommmmaanndd
        [1275]33..117700..  ppggpp__eennttrryy__ffoorrmmaatt
        [1276]33..117711..  ppggpp__eexxppoorrtt__ccoommmmaanndd
        [1277]33..117722..  ppggpp__ggeettkkeeyyss__ccoommmmaanndd
        [1278]33..117733..  ppggpp__ggoooodd__ssiiggnn
        [1279]33..117744..  ppggpp__iiggnnoorree__ssuubbkkeeyyss
        [1280]33..117755..  ppggpp__iimmppoorrtt__ccoommmmaanndd
        [1281]33..117766..  ppggpp__lliisstt__ppuubbrriinngg__ccoommmmaanndd
        [1282]33..117777..  ppggpp__lliisstt__sseeccrriinngg__ccoommmmaanndd
        [1283]33..117788..  ppggpp__lloonngg__iiddss
        [1284]33..117799..  ppggpp__mmiimmee__aauuttoo
        [1285]33..118800..  ppggpp__rreeppllyyiinnlliinnee
        [1286]33..118811..  ppggpp__rreettaaiinnaabbllee__ssiiggss
        [1287]33..118822..  ppggpp__sshhooww__uunnuussaabbllee
        [1288]33..118833..  ppggpp__ssiiggnn__aass
        [1289]33..118844..  ppggpp__ssiiggnn__ccoommmmaanndd
        [1290]33..118855..  ppggpp__ssoorrtt__kkeeyyss
        [1291]33..118866..  ppggpp__ssttrriicctt__eenncc
        [1292]33..118877..  ppggpp__ttiimmeeoouutt
        [1293]33..118888..  ppggpp__uussee__ggppgg__aaggeenntt
        [1294]33..118899..  ppggpp__vveerriiffyy__ccoommmmaanndd
        [1295]33..119900..  ppggpp__vveerriiffyy__kkeeyy__ccoommmmaanndd
        [1296]33..119911..  ppiippee__ddeeccooddee
        [1297]33..119922..  ppiippee__sseepp
        [1298]33..119933..  ppiippee__sspplliitt
        [1299]33..119944..  ppoopp__aauutthh__ttrryy__aallll
        [1300]33..119955..  ppoopp__aauutthheennttiiccaattoorrss
        [1301]33..119966..  ppoopp__cchheecckkiinntteerrvvaall
        [1302]33..119977..  ppoopp__ddeelleettee
        [1303]33..119988..  ppoopp__hhoosstt
        [1304]33..119999..  ppoopp__llaasstt
        [1305]33..220000..  ppoopp__ppaassss
        [1306]33..220011..  ppoopp__rreeccoonnnneecctt
        [1307]33..220022..  ppoopp__uusseerr
        [1308]33..220033..  ppoosstt__iinnddeenntt__ssttrriinngg
        [1309]33..220044..  ppoossttppoonnee
        [1310]33..220055..  ppoossttppoonneedd
        [1311]33..220066..  ppoossttppoonnee__eennccrryypptt
        [1312]33..220077..  ppoossttppoonnee__eennccrryypptt__aass
        [1313]33..220088..  pprreeccoonnnneecctt
        [1314]33..220099..  pprriinntt
        [1315]33..221100..  pprriinntt__ccoommmmaanndd
        [1316]33..221111..  pprriinntt__ddeeccooddee
        [1317]33..221122..  pprriinntt__sspplliitt
        [1318]33..221133..  pprroommpptt__aafftteerr
        [1319]33..221144..  qquueerryy__ccoommmmaanndd
        [1320]33..221155..  qquueerryy__ffoorrmmaatt
        [1321]33..221166..  qquuiitt
        [1322]33..221177..  qquuoottee__rreeggeexxpp
        [1323]33..221188..  rreeaadd__iinncc
        [1324]33..221199..  rreeaadd__oonnllyy
        [1325]33..222200..  rreeaallnnaammee
        [1326]33..222211..  rreeccaallll
        [1327]33..222222..  rreeccoorrdd
        [1328]33..222233..  rreeffllooww__ssppaaccee__qquuootteess
        [1329]33..222244..  rreeffllooww__tteexxtt
        [1330]33..222255..  rreeffllooww__wwrraapp
        [1331]33..222266..  rreeppllyy__rreeggeexxpp
        [1332]33..222277..  rreeppllyy__sseellff
        [1333]33..222288..  rreeppllyy__ttoo
        [1334]33..222299..  rreessoollvvee
        [1335]33..223300..  rreessuummee__ddrraafftt__ffiilleess
        [1336]33..223311..  rreessuummee__eeddiitteedd__ddrraafftt__ffiilleess
        [1337]33..223322..  rreevveerrssee__aalliiaass
        [1338]33..223333..  rreevveerrssee__nnaammee
        [1339]33..223344..  rreevveerrssee__rreeaallnnaammee
        [1340]33..223355..  rrffcc22004477__ppaarraammeetteerrss
        [1341]33..223366..  ssaavvee__aaddddrreessss
        [1342]33..223377..  ssaavvee__eemmppttyy
        [1343]33..223388..  ssaavvee__hhiissttoorryy
        [1344]33..223399..  ssaavvee__nnaammee
        [1345]33..224400..  ssccoorree
        [1346]33..224411..  ssccoorree__tthhrreesshhoolldd__ddeelleettee
        [1347]33..224422..  ssccoorree__tthhrreesshhoolldd__ffllaagg
        [1348]33..224433..  ssccoorree__tthhrreesshhoolldd__rreeaadd
        [1349]33..224444..  sseeaarrcchh__ccoonntteexxtt
        [1350]33..224455..  sseenndd__cchhaarrsseett
        [1351]33..224466..  sseennddmmaaiill
        [1352]33..224477..  sseennddmmaaiill__wwaaiitt
        [1353]33..224488..  sshheellll
        [1354]33..224499..  ssiiddeebbaarr__ddeelliimm__cchhaarrss
        [1355]33..225500..  ssiiddeebbaarr__ddiivviiddeerr__cchhaarr
        [1356]33..225511..  ssiiddeebbaarr__ffoollddeerr__iinnddeenntt
        [1357]33..225522..  ssiiddeebbaarr__ffoorrmmaatt
        [1358]33..225533..  ssiiddeebbaarr__iinnddeenntt__ssttrriinngg
        [1359]33..225544..  ssiiddeebbaarr__nneeww__mmaaiill__oonnllyy
        [1360]33..225555..  ssiiddeebbaarr__nneexxtt__nneeww__wwrraapp
        [1361]33..225566..  ssiiddeebbaarr__sshhoorrtt__ppaatthh
        [1362]33..225577..  ssiiddeebbaarr__ssoorrtt__mmeetthhoodd
        [1363]33..225588..  ssiiddeebbaarr__vviissiibbllee
        [1364]33..225599..  ssiiddeebbaarr__wwiiddtthh
        [1365]33..226600..  ssiigg__ddaasshheess
        [1366]33..226611..  ssiigg__oonn__ttoopp
        [1367]33..226622..  ssiiggnnaattuurree
        [1368]33..226633..  ssiimmppllee__sseeaarrcchh
        [1369]33..226644..  sslleeeepp__ttiimmee
        [1370]33..226655..  ssmmaarrtt__wwrraapp
        [1371]33..226666..  ssmmiilleeyyss
        [1372]33..226677..  ssmmiimmee__aasskk__cceerrtt__llaabbeell
        [1373]33..226688..  ssmmiimmee__ccaa__llooccaattiioonn
        [1374]33..226699..  ssmmiimmee__cceerrttiiffiiccaatteess
        [1375]33..227700..  ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd
        [1376]33..227711..  ssmmiimmee__ddeeccrryypptt__uussee__ddeeffaauulltt__kkeeyy
        [1377]33..227722..  ssmmiimmee__ddeeffaauulltt__kkeeyy
        [1378]33..227733..  ssmmiimmee__eennccrryypptt__ccoommmmaanndd
        [1379]33..227744..  ssmmiimmee__eennccrryypptt__wwiitthh
        [1380]33..227755..  ssmmiimmee__ggeett__cceerrtt__ccoommmmaanndd
        [1381]33..227766..  ssmmiimmee__ggeett__cceerrtt__eemmaaiill__ccoommmmaanndd
        [1382]33..227777..  ssmmiimmee__ggeett__ssiiggnneerr__cceerrtt__ccoommmmaanndd
        [1383]33..227788..  ssmmiimmee__iimmppoorrtt__cceerrtt__ccoommmmaanndd
        [1384]33..227799..  ssmmiimmee__iiss__ddeeffaauulltt
        [1385]33..228800..  ssmmiimmee__kkeeyyss
        [1386]33..228811..  ssmmiimmee__ppkk77oouutt__ccoommmmaanndd
        [1387]33..228822..  ssmmiimmee__ssiiggnn__ccoommmmaanndd
        [1388]33..228833..  ssmmiimmee__ssiiggnn__ddiiggeesstt__aallgg
        [1389]33..228844..  ssmmiimmee__ssiiggnn__ooppaaqquuee__ccoommmmaanndd
        [1390]33..228855..  ssmmiimmee__ttiimmeeoouutt
        [1391]33..228866..  ssmmiimmee__vveerriiffyy__ccoommmmaanndd
        [1392]33..228877..  ssmmiimmee__vveerriiffyy__ooppaaqquuee__ccoommmmaanndd
        [1393]33..228888..  ssmmttpp__aauutthheennttiiccaattoorrss
        [1394]33..228899..  ssmmttpp__ppaassss
        [1395]33..229900..  ssmmttpp__uurrll
        [1396]33..229911..  ssoorrtt
        [1397]33..229922..  ssoorrtt__aalliiaass
        [1398]33..229933..  ssoorrtt__aauuxx
        [1399]33..229944..  ssoorrtt__bbrroowwsseerr
        [1400]33..229955..  ssoorrtt__rree
        [1401]33..229966..  ssppaamm__sseeppaarraattoorr
        [1402]33..229977..  ssppoooollffiillee
        [1403]33..229988..  ssssll__ccaa__cceerrttiiffiiccaatteess__ffiillee
        [1404]33..229999..  ssssll__cclliieenntt__cceerrtt
        [1405]33..330000..  ssssll__ffoorrccee__ttllss
        [1406]33..330011..  ssssll__mmiinn__ddhh__pprriimmee__bbiittss
        [1407]33..330022..  ssssll__ssttaarrttttllss
        [1408]33..330033..  ssssll__uussee__ssssllvv22
        [1409]33..330044..  ssssll__uussee__ssssllvv33
        [1410]33..330055..  ssssll__uussee__ttllssvv11
        [1411]33..330066..  ssssll__uussee__ttllssvv11__11
        [1412]33..330077..  ssssll__uussee__ttllssvv11__22
        [1413]33..330088..  ssssll__uusseessyysstteemmcceerrttss
        [1414]33..330099..  ssssll__vveerriiffyy__ddaatteess
        [1415]33..331100..  ssssll__vveerriiffyy__hhoosstt
        [1416]33..331111..  ssssll__cciipphheerrss
        [1417]33..331122..  ssttaattuuss__cchhaarrss
        [1418]33..331133..  ssttaattuuss__ffoorrmmaatt
        [1419]33..331144..  ssttaattuuss__oonn__ttoopp
        [1420]33..331155..  ssttrriicctt__tthhrreeaaddss
        [1421]33..331166..  ssuussppeenndd
        [1422]33..331177..  tteexxtt__fflloowweedd
        [1423]33..331188..  tthhoorroouugghh__sseeaarrcchh
        [1424]33..331199..  tthhrreeaadd__rreecceeiivveedd
        [1425]33..332200..  ttiillddee
        [1426]33..332211..  ttiimmee__iinncc
        [1427]33..332222..  ttiimmeeoouutt
        [1428]33..332233..  ttmmppddiirr
        [1429]33..332244..  ttoo__cchhaarrss
        [1430]33..332255..  ttrraasshh
        [1431]33..332266..  ttss__iiccoonn__ffoorrmmaatt
        [1432]33..332277..  ttss__eennaabblleedd
        [1433]33..332288..  ttss__ssttaattuuss__ffoorrmmaatt
        [1434]33..332299..  ttuunnnneell
        [1435]33..333300..  uunnccoollllaappssee__jjuummpp
        [1436]33..333311..  uussee__88bbiittmmiimmee
        [1437]33..333322..  uussee__ddoommaaiinn
        [1438]33..333333..  uussee__eennvveellooppee__ffrroomm
        [1439]33..333344..  uussee__ffrroomm
        [1440]33..333355..  uussee__iippvv66
        [1441]33..333366..  uusseerr__aaggeenntt
        [1442]33..333377..  vviissuuaall
        [1443]33..333388..  wwaaiitt__kkeeyy
        [1444]33..333399..  wweeeedd
        [1445]33..334400..  wwrraapp
        [1446]33..334411..  wwrraapp__hheeaaddeerrss
        [1447]33..334422..  wwrraapp__sseeaarrcchh
        [1448]33..334433..  wwrraappmmaarrggiinn
        [1449]33..334444..  wwrriittee__bbcccc
        [1450]33..334455..  wwrriittee__iinncc

   [1451]44..  FFuunnccttiioonnss

        [1452]44..11..  GGeenneerriicc  MMeennuu
        [1453]44..22..  IInnddeexx  MMeennuu
        [1454]44..33..  PPaaggeerr  MMeennuu
        [1455]44..44..  AAlliiaass  MMeennuu
        [1456]44..55..  QQuueerryy  MMeennuu
        [1457]44..66..  AAttttaacchhmmeenntt  MMeennuu
        [1458]44..77..  CCoommppoossee  MMeennuu
        [1459]44..88..  PPoossttppoonnee  MMeennuu
        [1460]44..99..  BBrroowwsseerr  MMeennuu
        [1461]44..1100..  PPggpp  MMeennuu
        [1462]44..1111..  SSmmiimmee  MMeennuu
        [1463]44..1122..  MMiixxmmaasstteerr  MMeennuu
        [1464]44..1133..  EEddiittoorr  MMeennuu

1. Command-Line Options

   Running mutt with no arguments will make Mutt attempt to read your
   spool mailbox. However, it is possible to read other mailboxes and to
   send messages from the command line as well.

   _T_a_b_l_e_ _9_._1_._ _C_o_m_m_a_n_d_ _l_i_n_e_ _o_p_t_i_o_n_s
   Option Description
   -A expand an alias
   -a attach a file to a message
   -b specify a blind carbon-copy (BCC) address
   -c specify a carbon-copy (Cc) address
   -d log debugging output to ~/.muttdebug0 if mutt was compiled with
   +DEBUG; it can range from 1-5 and affects verbosity (a value of 2 is
   recommended)
   -D print the value of all Mutt variables to stdout
   -E edit the draft (-H) or include (-i) file
   -e specify a config command to be run after initialization files are
   read
   -f specify a mailbox to load
   -F specify an alternate file to read initialization commands
   -h print help on command line options
   -H specify a draft file from which to read a header and body
   -i specify a file to include in a message composition
   -m specify a default mailbox type
   -n do not read the system Muttrc
   -p recall a postponed message
   -Q query a configuration variable
   -R open mailbox in read-only mode
   -s specify a subject (enclose in quotes if it contains spaces)
   -v show version number and compile-time definitions
   -x simulate the mailx(1) compose mode
   -y show a menu containing the files specified by the _m_a_i_l_b_o_x_e_s command
   -z exit immediately if there are no messages in the mailbox
   -Z open the first folder with new message, exit immediately if none

   To read messages in a mailbox

   mutt [-nz] [-F _m_u_t_t_r_c ] [-m _t_y_p_e ] [-f _m_a_i_l_b_o_x ]

   To compose a new message

   mutt [-En] [-F _m_u_t_t_r_c ] [-c _a_d_d_r_e_s_s ] [-Hi _f_i_l_e_n_a_m_e ] [-s _s_u_b_j_e_c_t ] [
   -a _f_i_l_e [...] -- ] _a_d_d_r_e_s_s | _m_a_i_l_t_o___u_r_l ...

   Mutt also supports a "batch" mode to send prepared messages. Simply
   redirect input from the file you wish to send. For example,
mutt -s "data set for run #2" professor@bigschool.edu < ~/run2.dat

   will send a message to <professor@bigschool.edu> with a subject of
   "data set for run #2". In the body of the message will be the contents
   of the file "~/run2.dat".

   An include file passed with -i will be used as the body of the message.
   When combined with -E, the include file will be directly edited during
   message composition. The file will be modified regardless of whether
   the message is sent or aborted.

   A draft file passed with -H will be used as the initial header and body
   for the message. Multipart messages can be used as a draft file. When
   combined with -E, the draft file will be updated to the final state of
   the message after composition, regardless of whether the message is
   sent, aborted, or even postponed. Note that if the message is sent
   encrypted or signed, the draft file will be saved that way too.

   All files passed with -a _f_i_l_e will be attached as a MIME part to the
   message. To attach a single or several files, use "--" to separate
   files and recipient addresses:
mutt -a image.png -- some@one.org

   or
mutt -a *.png -- some@one.org

Note

   The -a option must be last in the option list.

   In addition to accepting a list of email addresses, Mutt also accepts a
   URL with the mailto: schema as specified in RFC2368. This is useful
   when configuring a web browser to launch Mutt when clicking on mailto
   links.
mutt mailto:some@one.org?subject=test&cc=other@one.org

2. Configuration Commands

   The following are the commands understood by Mutt:
     * [1465]aaccccoouunntt--hhooookk _r_e_g_e_x_p _c_o_m_m_a_n_d
     * [1466]aalliiaass [ -group _n_a_m_e ...] _k_e_y _a_d_d_r_e_s_s [ _a_d_d_r_e_s_s ...]
       [1467]uunnaalliiaass [ -group _n_a_m_e ...] { _* | _k_e_y ... }
     * [1468]aalltteerrnnaatteess [ -group _n_a_m_e ...] _r_e_g_e_x_p [ _r_e_g_e_x_p ...]
       [1469]uunnaalltteerrnnaatteess [ -group _n_a_m_e ...] { _* | _r_e_g_e_x_p ... }
     * [1470]aalltteerrnnaattiivvee__oorrddeerr _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ...]
       [1471]uunnaalltteerrnnaattiivvee__oorrddeerr { _* | _m_i_m_e_t_y_p_e ... }
     * [1472]aattttaacchhmmeennttss _{_ _+_ _|_ _-_ _}_d_i_s_p_o_s_i_t_i_o_n _m_i_m_e_-_t_y_p_e
       [1473]uunnaattttaacchhmmeennttss _{_ _+_ _|_ _-_ _}_d_i_s_p_o_s_i_t_i_o_n _m_i_m_e_-_t_y_p_e
     * [1474]aauuttoo__vviieeww _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ...]
       [1475]uunnaauuttoo__vviieeww { _* | _m_i_m_e_t_y_p_e ... }
     * [1476]bbiinndd _m_a_p _k_e_y _f_u_n_c_t_i_o_n
     * [1477]cchhaarrsseett--hhooookk _a_l_i_a_s _c_h_a_r_s_e_t
     * [1478]iiccoonnvv--hhooookk _c_h_a_r_s_e_t _l_o_c_a_l_-_c_h_a_r_s_e_t
     * [1479]ccoolloorr _o_b_j_e_c_t _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d
       [1480]ccoolloorr { header | body } _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _r_e_g_e_x_p
       [1481]ccoolloorr index _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _p_a_t_t_e_r_n
       [1482]uunnccoolloorr { index | header | body } { _* | _p_a_t_t_e_r_n ... }
     * [1483]ccrryypptt--hhooookk _r_e_g_e_x_p _k_e_y_i_d
     * [1484]eexxeecc _f_u_n_c_t_i_o_n [ _f_u_n_c_t_i_o_n ...]
     * [1485]ffcccc--hhooookk _[_!_]_p_a_t_t_e_r_n _m_a_i_l_b_o_x
     * [1486]ffcccc--ssaavvee--hhooookk _[_!_]_p_a_t_t_e_r_n _m_a_i_l_b_o_x
     * [1487]ffoollddeerr--hhooookk _[_!_]_r_e_g_e_x_p _c_o_m_m_a_n_d
     * [1488]ggrroouupp [ -group _n_a_m_e ...] { -rx _e_x_p_r ... | -addr _e_x_p_r ... }
       [1489]uunnggrroouupp [ -group _n_a_m_e ...] { _* | -rx _e_x_p_r ... | -addr _e_x_p_r
       ... }
     * [1490]hhddrr__oorrddeerr _h_e_a_d_e_r [ _h_e_a_d_e_r ...]
       [1491]uunnhhddrr__oorrddeerr { _* | _h_e_a_d_e_r ... }
     * [1492]iiggnnoorree _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ...]
       [1493]uunniiggnnoorree { _* | _p_a_t_t_e_r_n ... }
     * [1494]lliissttss [ -group _n_a_m_e ] _r_e_g_e_x_p [ _r_e_g_e_x_p ...]
       [1495]uunnlliissttss [ -group _n_a_m_e ...] { _* | _r_e_g_e_x_p ... }
     * [1496]mmaaccrroo _m_e_n_u _k_e_y _s_e_q_u_e_n_c_e [ _d_e_s_c_r_i_p_t_i_o_n ]
     * [1497]mmaaiillbbooxxeess _m_a_i_l_b_o_x [ _m_a_i_l_b_o_x ...]
       [1498]uunnmmaaiillbbooxxeess { _* | _m_a_i_l_b_o_x ... }
     * [1499]mmaaiillttoo__aallllooww { _* | _h_e_a_d_e_r_-_f_i_e_l_d ... }
       [1500]uunnmmaaiillttoo__aallllooww { _* | _h_e_a_d_e_r_-_f_i_e_l_d ... }
     * [1501]mmbbooxx--hhooookk _[_!_]_r_e_g_e_x_p _m_a_i_l_b_o_x
     * [1502]mmeessssaaggee--hhooookk _[_!_]_p_a_t_t_e_r_n _c_o_m_m_a_n_d
     * [1503]mmiimmee__llooookkuupp _m_i_m_e_t_y_p_e [ _m_i_m_e_t_y_p_e ...]
       [1504]uunnmmiimmee__llooookkuupp { _* | _m_i_m_e_t_y_p_e ... }
     * [1505]mmoonnoo _o_b_j_e_c_t _a_t_t_r_i_b_u_t_e
       [1506]mmoonnoo { header | body } _a_t_t_r_i_b_u_t_e _r_e_g_e_x_p
       [1507]mmoonnoo index _a_t_t_r_i_b_u_t_e _p_a_t_t_e_r_n
       [1508]uunnmmoonnoo { index | header | body } { _* | _p_a_t_t_e_r_n ... }
     * [1509]mmyy__hhddrr _s_t_r_i_n_g
       [1510]uunnmmyy__hhddrr { _* | _f_i_e_l_d ... }
     * [1511]ppuusshh _s_t_r_i_n_g
     * [1512]ssaavvee--hhooookk _[_!_]_p_a_t_t_e_r_n _m_a_i_l_b_o_x
     * [1513]ssccoorree _p_a_t_t_e_r_n _v_a_l_u_e
       [1514]uunnssccoorree { _* | _p_a_t_t_e_r_n ... }
     * [1515]rreeppllyy--hhooookk _[_!_]_p_a_t_t_e_r_n _c_o_m_m_a_n_d
     * [1516]sseenndd--hhooookk _[_!_]_p_a_t_t_e_r_n _c_o_m_m_a_n_d
     * [1517]sseenndd22--hhooookk _[_!_]_p_a_t_t_e_r_n _c_o_m_m_a_n_d
     * [1518]sseett { [ no | inv ] _v_a_r_i_a_b_l_e | _v_a_r_i_a_b_l_e_=_v_a_l_u_e } [...]
       [1519]ttooggggllee _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
       [1520]uunnsseett _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
       [1521]rreesseett _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
     * [1522]ssiiddeebbaarr__wwhhiitteelliisstt _i_t_e_m _c_o_m_m_a_n_d
     * [1523]ssoouurrccee _f_i_l_e_n_a_m_e
     * [1524]ssppaamm _p_a_t_t_e_r_n _f_o_r_m_a_t
       [1525]nnoossppaamm { _* | _p_a_t_t_e_r_n }
     * [1526]ssuubbssccrriibbee [ -group _n_a_m_e ...] _r_e_g_e_x_p [ _r_e_g_e_x_p ...]
       [1527]uunnssuubbssccrriibbee [ -group _n_a_m_e ...] { _* | _r_e_g_e_x_p ... }
     * [1528]uunnhhooookk { _* | _h_o_o_k_-_t_y_p_e }

3. Configuration Variables

3.1. abort_nosubject

   Type: quadoption
   Default: ask-yes

   If set to _y_e_s, when composing messages and no subject is given at the
   subject prompt, composition will be aborted. If set to _n_o, composing
   messages with no subject given at the subject prompt will never be
   aborted.

3.2. abort_unmodified

   Type: quadoption
   Default: yes

   If set to _y_e_s, composition will automatically abort after editing the
   message body if no changes are made to the file (this check only
   happens after the _f_i_r_s_t edit of the file). When set to _n_o, composition
   will never be aborted.

3.3. alias_file

   Type: path
   Default: "~/.muttrc"

   The default file in which to save aliases created by the
   [1529]<<ccrreeaattee--aalliiaass>> function. Entries added to this file are encoded
   in the character set specified by [1530]$$ccoonnffiigg__cchhaarrsseett if it is _s_e_t or
   the current character set otherwise.

   _N_o_t_e_: Mutt will not automatically source this file; you must explicitly
   use the "[1531]ssoouurrccee" command for it to be executed in case this
   option points to a dedicated alias file.

   The default for this option is the currently used muttrc file, or
   "~/.muttrc" if no user muttrc was found.

3.4. alias_format

   Type: string
   Default: "%4n %2f %t %-10a   %r"

   Specifies the format of the data displayed for the "[1532]aalliiaass" menu.
   The following printf(3)-style sequences are available:
   %a alias name
   %f flags - currently, a "d" for an alias marked for deletion
   %n index number
   %r address which alias expands to
   %t character which indicates if the alias is tagged for inclusion

3.5. allow_8bit

   Type: boolean
   Default: yes

   Controls whether 8-bit data is converted to 7-bit using either Quoted-
   Printable or Base64 encoding when sending mail.

3.6. allow_ansi

   Type: boolean
   Default: no

   Controls whether ANSI color codes in messages (and color tags in rich
   text messages) are to be interpreted. Messages containing these codes
   are rare, but if this option is _s_e_t, their text will be colored
   accordingly. Note that this may override your color choices, and even
   present a security problem, since a message could include a line like
[-- PGP output follows ...

   and give it the same color as your attachment color (see also
   [1533]$$ccrryypptt__ttiimmeessttaammpp).

3.7. arrow_cursor

   Type: boolean
   Default: no

   When _s_e_t, an arrow ("->") will be used to indicate the current entry in
   menus instead of highlighting the whole line. On slow network or modem
   links this will make response faster because there is less that has to
   be redrawn on the screen when moving to the next or previous entries in
   the menu.

3.8. ascii_chars

   Type: boolean
   Default: no

   If _s_e_t, Mutt will use plain ASCII characters when displaying thread and
   attachment trees, instead of the default _A_C_S characters.

3.9. askbcc

   Type: boolean
   Default: no

   If _s_e_t, Mutt will prompt you for blind-carbon-copy (Bcc) recipients
   before editing an outgoing message.

3.10. askcc

   Type: boolean
   Default: no

   If _s_e_t, Mutt will prompt you for carbon-copy (Cc) recipients before
   editing the body of an outgoing message.

3.11. assumed_charset

   Type: string
   Default: (empty)

   This variable is a colon-separated list of character encoding schemes
   for messages without character encoding indication. Header field values
   and message body content without character encoding indication would be
   assumed that they are written in one of this list. By default, all the
   header fields and message body without any charset indication are
   assumed to be in "us-ascii".

   For example, Japanese users might prefer this:
set assumed_charset="iso-2022-jp:euc-jp:shift_jis:utf-8"

   However, only the first content is valid for the message body.

3.12. attach_charset

   Type: string
   Default: (empty)

   This variable is a colon-separated list of character encoding schemes
   for text file attachments. Mutt uses this setting to guess which
   encoding files being attached are encoded in to convert them to a
   proper character set given in [1534]$$sseenndd__cchhaarrsseett.

   If _u_n_s_e_t, the value of [1535]$$cchhaarrsseett will be used instead. For
   example, the following configuration would work for Japanese text
   handling:
set attach_charset="iso-2022-jp:euc-jp:shift_jis:utf-8"

   Note: for Japanese users, "iso-2022-*" must be put at the head of the
   value as shown above if included.

3.13. attach_format

   Type: string
   Default: "%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] "

   This variable describes the format of the "attachment" menu. The
   following printf(3)-style sequences are understood:
   %C charset
   %c requires charset conversion ("n" or "c")
   %D deleted flag
   %d description
   %e MIME content-transfer-encoding
   %f filename
   %I disposition ("I" for inline, "A" for attachment)
   %m major MIME type
   %M MIME subtype
   %n attachment number
   %Q "Q", if MIME part qualifies for attachment counting
   %s size
   %t tagged flag
   %T graphic tree characters
   %u unlink (=to delete) flag
   %X number of qualifying MIME parts in this part and its children
   (please see the "[1536]aattttaacchhmmeennttss" section for possible speed effects)
   %>X right justify the rest of the string and pad with character "X"
   %|X pad to the end of the line with character "X"
   %*X soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the [1537]$$iinnddeexx__ffoorrmmaatt
   documentation.

3.14. attach_sep

   Type: string
   Default: "\n"

   The separator to add between attachments when operating (saving,
   printing, piping, etc) on a list of tagged attachments.

3.15. attach_split

   Type: boolean
   Default: yes

   If this variable is _u_n_s_e_t, when operating (saving, printing, piping,
   etc) on a list of tagged attachments, Mutt will concatenate the
   attachments and will operate on them as a single attachment. The
   [1538]$$aattttaacchh__sseepp separator is added after each attachment. When _s_e_t,
   Mutt will operate on the attachments one by one.

3.16. attribution

   Type: string
   Default: "On %d, %n wrote:"

   This is the string that will precede a message which has been included
   in a reply. For a full listing of defined printf(3)-like sequences see
   the section on [1539]$$iinnddeexx__ffoorrmmaatt.

3.17. auto_tag

   Type: boolean
   Default: no

   When _s_e_t, functions in the _i_n_d_e_x menu which affect a message will be
   applied to all tagged messages (if there are any). When unset, you must
   first use the <tag-prefix> function (bound to ";" by default) to make
   the next function apply to all tagged messages.

3.18. autoedit

   Type: boolean
   Default: no

   When _s_e_t along with [1540]$$eeddiitt__hheeaaddeerrss, Mutt will skip the initial
   send-menu (prompting for subject and recipients) and allow you to
   immediately begin editing the body of your message. The send-menu may
   still be accessed once you have finished editing the body of your
   message.

   _N_o_t_e_: when this option is _s_e_t, you cannot use send-hooks that depend on
   the recipients when composing a new (non-reply) message, as the initial
   list of recipients is empty.

   Also see [1541]$$ffaasstt__rreeppllyy.

3.19. beep

   Type: boolean
   Default: yes

   When this variable is _s_e_t, mutt will beep when an error occurs.

3.20. beep_new

   Type: boolean
   Default: no

   When this variable is _s_e_t, mutt will beep whenever it prints a message
   notifying you of new mail. This is independent of the setting of the
   [1542]$$bbeeeepp variable.

3.21. bounce

   Type: quadoption
   Default: ask-yes

   Controls whether you will be asked to confirm bouncing messages. If set
   to _y_e_s you don't get asked if you want to bounce a message. Setting
   this variable to _n_o is not generally useful, and thus not recommended,
   because you are unable to bounce messages.

3.22. bounce_delivered

   Type: boolean
   Default: yes

   When this variable is _s_e_t, mutt will include Delivered-To headers when
   bouncing messages. Postfix users may wish to _u_n_s_e_t this variable.

3.23. braille_friendly

   Type: boolean
   Default: no

   When this variable is _s_e_t, mutt will place the cursor at the beginning
   of the current line in menus, even when the [1543]$$aarrrrooww__ccuurrssoorr
   variable is _u_n_s_e_t, making it easier for blind persons using Braille
   displays to follow these menus. The option is _u_n_s_e_t by default because
   many visual terminals don't permit making the cursor invisible.

3.24. certificate_file

   Type: path
   Default: "~/.mutt_certificates"

   This variable specifies the file where the certificates you trust are
   saved. When an unknown certificate is encountered, you are asked if you
   accept it or not. If you accept it, the certificate can also be saved
   in this file and further connections are automatically accepted.

   You can also manually add CA certificates in this file. Any server
   certificate that is signed with one of these CA certificates is also
   automatically accepted.

   Example:
set certificate_file=~/.mutt/certificates

3.25. charset

   Type: string
   Default: (empty)

   Character set your terminal uses to display and enter textual data. It
   is also the fallback for [1544]$$sseenndd__cchhaarrsseett.

   Upon startup Mutt tries to derive this value from environment variables
   such as $LC_CTYPE or $LANG.

   _N_o_t_e_: It should only be set in case Mutt isn't able to determine the
   character set used correctly.

3.26. check_mbox_size

   Type: boolean
   Default: no

   When this variable is _s_e_t, mutt will use file size attribute instead of
   access time when checking for new mail in mbox and mmdf folders.

   This variable is _u_n_s_e_t by default and should only be enabled when new
   mail detection for these folder types is unreliable or doesn't work.

   Note that enabling this variable should happen before any
   "[1545]mmaaiillbbooxxeess" directives occur in configuration files regarding
   mbox or mmdf folders because mutt needs to determine the initial new
   mail status of such a mailbox by performing a fast mailbox scan when it
   is defined. Afterwards the new mail status is tracked by file size
   changes.

3.27. check_new

   Type: boolean
   Default: yes

   _N_o_t_e_: this option only affects _m_a_i_l_d_i_r and _M_H style mailboxes.

   When _s_e_t, Mutt will check for new mail delivered while the mailbox is
   open. Especially with MH mailboxes, this operation can take quite some
   time since it involves scanning the directory and checking each file to
   see if it has already been looked at. If this variable is _u_n_s_e_t, no
   check for new mail is performed while the mailbox is open.

3.28. collapse_unread

   Type: boolean
   Default: yes

   When _u_n_s_e_t, Mutt will not collapse a thread if it contains any unread
   messages.

3.29. compose_format

   Type: string
   Default: "-- Mutt: Compose  [Approx. msg size: %l   Atts: %a]%>-"

   Controls the format of the status line displayed in the "compose" menu.
   This string is similar to [1546]$$ssttaattuuss__ffoorrmmaatt, but has its own set of
   printf(3)-like sequences:
   %a total number of attachments
   %h local hostname
   %l approximate size (in bytes) of the current message
   %v Mutt version string

   See the text describing the [1547]$$ssttaattuuss__ffoorrmmaatt option for more
   information on how to set [1548]$$ccoommppoossee__ffoorrmmaatt.

3.30. config_charset

   Type: string
   Default: (empty)

   When defined, Mutt will recode commands in rc files from this encoding
   to the current character set as specified by [1549]$$cchhaarrsseett and aliases
   written to [1550]$$aalliiaass__ffiillee from the current character set.

   Please note that if setting [1551]$$cchhaarrsseett it must be done before
   setting [1552]$$ccoonnffiigg__cchhaarrsseett.

   Recoding should be avoided as it may render unconvertable characters as
   question marks which can lead to undesired side effects (for example in
   regular expressions).

3.31. confirmappend

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will prompt for confirmation when appending messages to
   an existing mailbox.

3.32. confirmcreate

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will prompt for confirmation when saving messages to a
   mailbox which does not yet exist before creating it.

3.33. connect_timeout

   Type: number
   Default: 30

   Causes Mutt to timeout a network connection (for IMAP, POP or SMTP)
   after this many seconds if the connection is not able to be
   established. A negative value causes Mutt to wait indefinitely for the
   connection attempt to succeed.

3.34. content_type

   Type: string
   Default: "text/plain"

   Sets the default Content-Type for the body of newly composed messages.

3.35. copy

   Type: quadoption
   Default: yes

   This variable controls whether or not copies of your outgoing messages
   will be saved for later references. Also see [1553]$$rreeccoorrdd,
   [1554]$$ssaavvee__nnaammee, [1555]$$ffoorrccee__nnaammee and "[1556]ffcccc--hhooookk".

3.36. crypt_autoencrypt

   Type: boolean
   Default: no

   Setting this variable will cause Mutt to always attempt to PGP encrypt
   outgoing messages. This is probably only useful in connection to the
   "[1557]sseenndd--hhooookk" command. It can be overridden by use of the pgp menu,
   when encryption is not required or signing is requested as well. If
   [1558]$$ssmmiimmee__iiss__ddeeffaauulltt is _s_e_t, then OpenSSL is used instead to create
   S/MIME messages and settings can be overridden by use of the smime menu
   instead. (Crypto only)

3.37. crypt_autopgp

   Type: boolean
   Default: yes

   This variable controls whether or not mutt may automatically enable PGP
   encryption/signing for messages. See also [1559]$$ccrryypptt__aauuttooeennccrryypptt,
   [1560]$$ccrryypptt__rreeppllyyeennccrryypptt, [1561]$$ccrryypptt__aauuttoossiiggnn,
   [1562]$$ccrryypptt__rreeppllyyssiiggnn and [1563]$$ssmmiimmee__iiss__ddeeffaauulltt.

3.38. crypt_autosign

   Type: boolean
   Default: no

   Setting this variable will cause Mutt to always attempt to
   cryptographically sign outgoing messages. This can be overridden by use
   of the pgp menu, when signing is not required or encryption is
   requested as well. If [1564]$$ssmmiimmee__iiss__ddeeffaauulltt is _s_e_t, then OpenSSL is
   used instead to create S/MIME messages and settings can be overridden
   by use of the smime menu instead of the pgp menu. (Crypto only)

3.39. crypt_autosmime

   Type: boolean
   Default: yes

   This variable controls whether or not mutt may automatically enable
   S/MIME encryption/signing for messages. See also
   [1565]$$ccrryypptt__aauuttooeennccrryypptt, [1566]$$ccrryypptt__rreeppllyyeennccrryypptt,
   [1567]$$ccrryypptt__aauuttoossiiggnn, [1568]$$ccrryypptt__rreeppllyyssiiggnn and
   [1569]$$ssmmiimmee__iiss__ddeeffaauulltt.

3.40. crypt_confirmhook

   Type: boolean
   Default: yes

   If set, then you will be prompted for confirmation of keys when using
   the _c_r_y_p_t_-_h_o_o_k command. If unset, no such confirmation prompt will be
   presented. This is generally considered unsafe, especially where typos
   are concerned.

3.41. crypt_opportunistic_encrypt

   Type: boolean
   Default: no

   Setting this variable will cause Mutt to automatically enable and
   disable encryption, based on whether all message recipient keys can be
   located by Mutt.

   When this option is enabled, Mutt will enable/disable encryption each
   time the TO, CC, and BCC lists are edited. If [1570]$$eeddiitt__hheeaaddeerrss is
   set, Mutt will also do so each time the message is edited.

   While this is set, encryption can't be manually enabled/disabled. The
   pgp or smime menus provide a selection to temporarily disable this
   option for the current message.

   If [1571]$$ccrryypptt__aauuttooeennccrryypptt or [1572]$$ccrryypptt__rreeppllyyeennccrryypptt enable
   encryption for a message, this option will be disabled for that
   message. It can be manually re-enabled in the pgp or smime menus.
   (Crypto only)

3.42. crypt_replyencrypt

   Type: boolean
   Default: yes

   If _s_e_t, automatically PGP or OpenSSL encrypt replies to messages which
   are encrypted. (Crypto only)

3.43. crypt_replysign

   Type: boolean
   Default: no

   If _s_e_t, automatically PGP or OpenSSL sign replies to messages which are
   signed.

   _N_o_t_e_: this does not work on messages that are encrypted _a_n_d signed!
   (Crypto only)

3.44. crypt_replysignencrypted

   Type: boolean
   Default: no

   If _s_e_t, automatically PGP or OpenSSL sign replies to messages which are
   encrypted. This makes sense in combination with
   [1573]$$ccrryypptt__rreeppllyyeennccrryypptt, because it allows you to sign all messages
   which are automatically encrypted. This works around the problem noted
   in [1574]$$ccrryypptt__rreeppllyyssiiggnn, that mutt is not able to find out whether an
   encrypted message is also signed. (Crypto only)

3.45. crypt_timestamp

   Type: boolean
   Default: yes

   If _s_e_t, mutt will include a time stamp in the lines surrounding PGP or
   S/MIME output, so spoofing such lines is more difficult. If you are
   using colors to mark these lines, and rely on these, you may _u_n_s_e_t this
   setting. (Crypto only)

3.46. crypt_use_gpgme

   Type: boolean
   Default: no

   This variable controls the use of the GPGME-enabled crypto backends. If
   it is _s_e_t and Mutt was built with gpgme support, the gpgme code for
   S/MIME and PGP will be used instead of the classic code. Note that you
   need to set this option in .muttrc; it won't have any effect when used
   interactively.

   Note that the GPGME backend does not support creating old-style inline
   (traditional) PGP encrypted or signed messages (see
   [1575]$$ppggpp__aauuttooiinnlliinnee).

3.47. crypt_use_pka

   Type: boolean
   Default: no

   Controls whether mutt uses PKA (see
   http://www.g10code.de/docs/pka-intro.de.pdf) during signature
   verification (only supported by the GPGME backend).

3.48. crypt_verify_sig

   Type: quadoption
   Default: yes

   If _"_y_e_s_", always attempt to verify PGP or S/MIME signatures. If
   _"_a_s_k_-_*_", ask whether or not to verify the signature. If _"_n_o_", never
   attempt to verify cryptographic signatures. (Crypto only)

3.49. date_format

   Type: string
   Default: "!%a, %b %d, %Y at %I:%M:%S%p %Z"

   This variable controls the format of the date printed by the "%d"
   sequence in [1576]$$iinnddeexx__ffoorrmmaatt. This is passed to the strftime(3)
   function to process the date, see the man page for the proper syntax.

   Unless the first character in the string is a bang ("!"), the month and
   week day names are expanded according to the locale specified in the
   variable [1577]$$llooccaallee. If the first character in the string is a bang,
   the bang is discarded, and the month and week day names in the rest of
   the string are expanded in the _C locale (that is in US English).

3.50. default_hook

   Type: string
   Default: "~f %s !~P | (~P ~C %s)"

   This variable controls how "[1578]mmeessssaaggee--hhooookk", "[1579]rreeppllyy--hhooookk",
   "[1580]sseenndd--hhooookk", "[1581]sseenndd22--hhooookk", "[1582]ssaavvee--hhooookk", and
   "[1583]ffcccc--hhooookk" will be interpreted if they are specified with only a
   simple regexp, instead of a matching pattern. The hooks are expanded
   when they are declared, so a hook will be interpreted according to the
   value of this variable at the time the hook is declared.

   The default value matches if the message is either from a user matching
   the regular expression given, or if it is from you (if the from address
   matches "[1584]aalltteerrnnaatteess") and is to or cc'ed to a user matching the
   given regular expression.

3.51. delete

   Type: quadoption
   Default: ask-yes

   Controls whether or not messages are really deleted when closing or
   synchronizing a mailbox. If set to _y_e_s, messages marked for deleting
   will automatically be purged without prompting. If set to _n_o, messages
   marked for deletion will be kept in the mailbox.

3.52. delete_untag

   Type: boolean
   Default: yes

   If this option is _s_e_t, mutt will untag messages when marking them for
   deletion. This applies when you either explicitly delete a message, or
   when you save it to another folder.

3.53. digest_collapse

   Type: boolean
   Default: yes

   If this option is _s_e_t, mutt's received-attachments menu will not show
   the subparts of individual messages in a multipart/digest. To see these
   subparts, press "v" on that menu.

3.54. display_filter

   Type: path
   Default: (empty)

   When set, specifies a command used to filter messages. When a message
   is viewed it is passed as standard input to [1585]$$ddiissppllaayy__ffiilltteerr, and
   the filtered message is read from the standard output.

3.55. dotlock_program

   Type: path
   Default: "/usr/local/bin/mutt_dotlock"

   Contains the path of the mutt_dotlock(8) binary to be used by mutt.

3.56. dsn_notify

   Type: string
   Default: (empty)

   This variable sets the request for when notification is returned. The
   string consists of a comma separated list (no spaces!) of one or more
   of the following: _n_e_v_e_r, to never request notification, _f_a_i_l_u_r_e, to
   request notification on transmission failure, _d_e_l_a_y, to be notified of
   message delays, _s_u_c_c_e_s_s, to be notified of successful transmission.

   Example:
set dsn_notify="failure,delay"

   _N_o_t_e_: when using [1586]$$sseennddmmaaiill for delivery, you should not enable
   this unless you are either using Sendmail 8.8.x or greater or a MTA
   providing a sendmail(1)-compatible interface supporting the -N option
   for DSN. For SMTP delivery, DSN support is auto-detected so that it
   depends on the server whether DSN will be used or not.

3.57. dsn_return

   Type: string
   Default: (empty)

   This variable controls how much of your message is returned in DSN
   messages. It may be set to either _h_d_r_s to return just the message
   header, or _f_u_l_l to return the full message.

   Example:
set dsn_return=hdrs

   _N_o_t_e_: when using [1587]$$sseennddmmaaiill for delivery, you should not enable
   this unless you are either using Sendmail 8.8.x or greater or a MTA
   providing a sendmail(1)-compatible interface supporting the -R option
   for DSN. For SMTP delivery, DSN support is auto-detected so that it
   depends on the server whether DSN will be used or not.

3.58. duplicate_threads

   Type: boolean
   Default: yes

   This variable controls whether mutt, when [1588]$$ssoorrtt is set to
   _t_h_r_e_a_d_s, threads messages with the same Message-Id together. If it is
   _s_e_t, it will indicate that it thinks they are duplicates of each other
   with an equals sign in the thread tree.

3.59. edit_headers

   Type: boolean
   Default: no

   This option allows you to edit the header of your outgoing messages
   along with the body of your message.

   _N_o_t_e that changes made to the References: and Date: headers are ignored
   for interoperability reasons.

3.60. editor

   Type: path
   Default: (empty)

   This variable specifies which editor is used by mutt. It defaults to
   the value of the $VISUAL, or $EDITOR, environment variable, or to the
   string "vi" if neither of those are set.

   The [1589]$$eeddiittoorr string may contain a _%_s escape, which will be
   replaced by the name of the file to be edited. If the _%_s escape does
   not appear in [1590]$$eeddiittoorr, a space and the name to be edited are
   appended.

   The resulting string is then executed by running
sh -c 'string'

   where _s_t_r_i_n_g is the expansion of [1591]$$eeddiittoorr described above.

3.61. encode_from

   Type: boolean
   Default: no

   When _s_e_t, mutt will quoted-printable encode messages when they contain
   the string "From " (note the trailing space) in the beginning of a
   line. This is useful to avoid the tampering certain mail delivery and
   transport agents tend to do with messages (in order to prevent tools
   from misinterpreting the line as a mbox message separator).

3.62. entropy_file

   Type: path
   Default: (empty)

   The file which includes random data that is used to initialize SSL
   library functions.

3.63. envelope_from_address

   Type: e-mail address
   Default: (empty)

   Manually sets the _e_n_v_e_l_o_p_e sender for outgoing messages. This value is
   ignored if [1592]$$uussee__eennvveellooppee__ffrroomm is _u_n_s_e_t.

3.64. escape

   Type: string
   Default: "~"

   Escape character to use for functions in the built-in editor.

3.65. fast_reply

   Type: boolean
   Default: no

   When _s_e_t, the initial prompt for recipients and subject are skipped
   when replying to messages, and the initial prompt for subject is
   skipped when forwarding messages.

   _N_o_t_e_: this variable has no effect when the [1593]$$aauuttooeeddiitt variable is
   _s_e_t.

3.66. fcc_attach

   Type: quadoption
   Default: yes

   This variable controls whether or not attachments on outgoing messages
   are saved along with the main body of your message.

3.67. fcc_clear

   Type: boolean
   Default: no

   When this variable is _s_e_t, FCCs will be stored unencrypted and
   unsigned, even when the actual message is encrypted and/or signed. (PGP
   only)

3.68. folder

   Type: path
   Default: "~/Mail"

   Specifies the default location of your mailboxes. A "+" or "=" at the
   beginning of a pathname will be expanded to the value of this variable.
   Note that if you change this variable (from the default) value you need
   to make sure that the assignment occurs _b_e_f_o_r_e you use "+" or "=" for
   any other variables since expansion takes place when handling the
   "[1594]mmaaiillbbooxxeess" command.

3.69. folder_format

   Type: string
   Default: "%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f"

   This variable allows you to customize the file browser display to your
   personal taste. This string is similar to [1595]$$iinnddeexx__ffoorrmmaatt, but has
   its own set of printf(3)-like sequences:
   %C current file number
   %d date/time folder was last modified
   %D date/time folder was last modified using [1596]$$ddaattee__ffoorrmmaatt.
   %f filename ("/" is appended to directory names, "@" to symbolic links
   and "*" to executable files)
   %F file permissions
   %g group name (or numeric gid, if missing)
   %l number of hard links
   %m number of messages in the mailbox *
   %n number of unread messages in the mailbox *
   %N N if mailbox has new mail, blank otherwise
   %s size in bytes
   %t "*" if the file is tagged, blank otherwise
   %u owner name (or numeric uid, if missing)
   %>X right justify the rest of the string and pad with character "X"
   %|X pad to the end of the line with character "X"
   %*X soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the [1597]$$iinnddeexx__ffoorrmmaatt
   documentation.

   * = can be optionally printed if nonzero

   %m, %n, and %N only work for monitored mailboxes. %m requires
   [1598]$$mmaaiill__cchheecckk__ssttaattss to be set. %n requires [1599]$$mmaaiill__cchheecckk__ssttaattss
   to be set (except for IMAP mailboxes).

3.70. followup_to

   Type: boolean
   Default: yes

   Controls whether or not the "Mail-Followup-To:" header field is
   generated when sending mail. When _s_e_t, Mutt will generate this field
   when you are replying to a known mailing list, specified with the
   "[1600]ssuubbssccrriibbee" or "[1601]lliissttss" commands.

   This field has two purposes. First, preventing you from receiving
   duplicate copies of replies to messages which you send to mailing
   lists, and second, ensuring that you do get a reply separately for any
   messages sent to known lists to which you are not subscribed.

   The header will contain only the list's address for subscribed lists,
   and both the list address and your own email address for unsubscribed
   lists. Without this header, a group reply to your message sent to a
   subscribed list will be sent to both the list and your address,
   resulting in two copies of the same email for you.

3.71. force_name

   Type: boolean
   Default: no

   This variable is similar to [1602]$$ssaavvee__nnaammee, except that Mutt will
   store a copy of your outgoing message by the username of the address
   you are sending to even if that mailbox does not exist.

   Also see the [1603]$$rreeccoorrdd variable.

3.72. forward_decode

   Type: boolean
   Default: yes

   Controls the decoding of complex MIME messages into text/plain when
   forwarding a message. The message header is also RFC2047 decoded. This
   variable is only used, if [1604]$$mmiimmee__ffoorrwwaarrdd is _u_n_s_e_t, otherwise
   [1605]$$mmiimmee__ffoorrwwaarrdd__ddeeccooddee is used instead.

3.73. forward_decrypt

   Type: boolean
   Default: yes

   Controls the handling of encrypted messages when forwarding a message.
   When _s_e_t, the outer layer of encryption is stripped off. This variable
   is only used if [1606]$$mmiimmee__ffoorrwwaarrdd is _s_e_t and
   [1607]$$mmiimmee__ffoorrwwaarrdd__ddeeccooddee is _u_n_s_e_t. (PGP only)

3.74. forward_edit

   Type: quadoption
   Default: yes

   This quadoption controls whether or not the user is automatically
   placed in the editor when forwarding messages. For those who always
   want to forward with no modification, use a setting of "no".

3.75. forward_format

   Type: string
   Default: "[%a: %s]"

   This variable controls the default subject when forwarding a message.
   It uses the same format sequences as the [1608]$$iinnddeexx__ffoorrmmaatt variable.

3.76. forward_quote

   Type: boolean
   Default: no

   When _s_e_t, forwarded messages included in the main body of the message
   (when [1609]$$mmiimmee__ffoorrwwaarrdd is _u_n_s_e_t) will be quoted using
   [1610]$$iinnddeenntt__ssttrriinngg.

3.77. from

   Type: e-mail address
   Default: (empty)

   When _s_e_t, this variable contains a default from address. It can be
   overridden using "[1611]mmyy__hhddrr" (including from a "[1612]sseenndd--hhooookk")
   and [1613]$$rreevveerrssee__nnaammee. This variable is ignored if [1614]$$uussee__ffrroomm is
   _u_n_s_e_t.

   This setting defaults to the contents of the environment variable
   $EMAIL.

3.78. gecos_mask

   Type: regular expression
   Default: "^[^,]*"

   A regular expression used by mutt to parse the GECOS field of a
   password entry when expanding the alias. The default value will return
   the string up to the first "," encountered. If the GECOS field contains
   a string like "lastname, firstname" then you should set it to ".*".

   This can be useful if you see the following behavior: you address an
   e-mail to user ID "stevef" whose full name is "Steve Franklin". If mutt
   expands "stevef" to ""Franklin" stevef@foo.bar" then you should set the
   [1615]$$ggeeccooss__mmaasskk to a regular expression that will match the whole
   name so mutt will expand "Franklin" to "Franklin, Steve".

3.79. hdrs

   Type: boolean
   Default: yes

   When _u_n_s_e_t, the header fields normally added by the "[1616]mmyy__hhddrr"
   command are not created. This variable _m_u_s_t be unset before composing a
   new message or replying in order to take effect. If _s_e_t, the user
   defined header fields are added to every new message.

3.80. header

   Type: boolean
   Default: no

   When _s_e_t, this variable causes Mutt to include the header of the
   message you are replying to into the edit buffer. The [1617]$$wweeeedd
   setting applies.

3.81. header_cache

   Type: path
   Default: (empty)

   This variable points to the header cache database. If pointing to a
   directory Mutt will contain a header cache database file per folder, if
   pointing to a file that file will be a single global header cache. By
   default it is _u_n_s_e_t so no header caching will be used.

   Header caching can greatly improve speed when opening POP, IMAP MH or
   Maildir folders, see "[1618]ccaacchhiinngg" for details.

3.82. header_cache_compress

   Type: boolean
   Default: yes

   When mutt is compiled with qdbm or tokyocabinet as header cache
   backend, this option determines whether the database will be
   compressed. Compression results in database files roughly being one
   fifth of the usual diskspace, but the decompression can result in a
   slower opening of cached folder(s) which in general is still much
   faster than opening non header cached folders.

3.83. header_cache_pagesize

   Type: string
   Default: "16384"

   When mutt is compiled with either gdbm or bdb4 as the header cache
   backend, this option changes the database page size. Too large or too
   small values can waste space, memory, or CPU time. The default should
   be more or less optimal for most use cases.

3.84. help

   Type: boolean
   Default: yes

   When _s_e_t, help lines describing the bindings for the major functions
   provided by each menu are displayed on the first line of the screen.

   _N_o_t_e_: The binding will not be displayed correctly if the function is
   bound to a sequence rather than a single keystroke. Also, the help line
   may not be updated if a binding is changed while Mutt is running. Since
   this variable is primarily aimed at new users, neither of these should
   present a major problem.

3.85. hidden_host

   Type: boolean
   Default: no

   When _s_e_t, mutt will skip the host name part of [1619]$$hhoossttnnaammee variable
   when adding the domain part to addresses. This variable does not affect
   the generation of Message-IDs, and it will not lead to the cut-off of
   first-level domains.

3.86. hide_limited

   Type: boolean
   Default: no

   When _s_e_t, mutt will not show the presence of messages that are hidden
   by limiting, in the thread tree.

3.87. hide_missing

   Type: boolean
   Default: yes

   When _s_e_t, mutt will not show the presence of missing messages in the
   thread tree.

3.88. hide_thread_subject

   Type: boolean
   Default: yes

   When _s_e_t, mutt will not show the subject of messages in the thread tree
   that have the same subject as their parent or closest previously
   displayed sibling.

3.89. hide_top_limited

   Type: boolean
   Default: no

   When _s_e_t, mutt will not show the presence of messages that are hidden
   by limiting, at the top of threads in the thread tree. Note that when
   [1620]$$hhiiddee__lliimmiitteedd is _s_e_t, this option will have no effect.

3.90. hide_top_missing

   Type: boolean
   Default: yes

   When _s_e_t, mutt will not show the presence of missing messages at the
   top of threads in the thread tree. Note that when [1621]$$hhiiddee__mmiissssiinngg
   is _s_e_t, this option will have no effect.

3.91. history

   Type: number
   Default: 10

   This variable controls the size (in number of strings remembered) of
   the string history buffer per category. The buffer is cleared each time
   the variable is set.

3.92. history_file

   Type: path
   Default: "~/.mutthistory"

   The file in which Mutt will save its history.

3.93. honor_disposition

   Type: boolean
   Default: no

   When _s_e_t, Mutt will not display attachments with a disposition of
   "attachment" inline even if it could render the part to plain text.
   These MIME parts can only be viewed from the attachment menu.

   If _u_n_s_e_t, Mutt will render all MIME parts it can properly transform to
   plain text.

3.94. honor_followup_to

   Type: quadoption
   Default: yes

   This variable controls whether or not a Mail-Followup-To header is
   honored when group-replying to a message.

3.95. hostname

   Type: string
   Default: (empty)

   Specifies the fully-qualified hostname of the system mutt is running on
   containing the host's name and the DNS domain it belongs to. It is used
   as the domain part (after "@") for local email addresses as well as
   Message-Id headers.

   Its value is determined at startup as follows: the node's hostname is
   first determined by the uname(3) function. The domain is then looked up
   using the gethostname(2) and getaddrinfo(3) functions. If those calls
   are unable to determine the domain, the full value returned by uname is
   used. Optionally, Mutt can be compiled with a fixed domain name in
   which case a detected one is not used.

   Also see [1622]$$uussee__ddoommaaiinn and [1623]$$hhiiddddeenn__hhoosstt.

3.96. idn_decode

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will show you international domain names decoded. Note:
   You can use IDNs for addresses even if this is _u_n_s_e_t. This variable
   only affects decoding. (IDN only)

3.97. idn_encode

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will encode international domain names using IDN. Unset
   this if your SMTP server can handle newer (RFC 6531) UTF-8 encoded
   domains. (IDN only)

3.98. ignore_linear_white_space

   Type: boolean
   Default: no

   This option replaces linear-white-space between encoded-word and text
   to a single space to prevent the display of MIME-encoded "Subject:"
   field from being divided into multiple lines.

3.99. ignore_list_reply_to

   Type: boolean
   Default: no

   Affects the behavior of the <reply> function when replying to messages
   from mailing lists (as defined by the "[1624]ssuubbssccrriibbee" or
   "[1625]lliissttss" commands). When _s_e_t, if the "Reply-To:" field is set to
   the same value as the "To:" field, Mutt assumes that the "Reply-To:"
   field was set by the mailing list to automate responses to the list,
   and will ignore this field. To direct a response to the mailing list
   when this option is _s_e_t, use the [1626]<<lliisstt--rreeppllyy>> function;
   <group-reply> will reply to both the sender and the list.

3.100. imap_authenticators

   Type: string
   Default: (empty)

   This is a colon-delimited list of authentication methods mutt may
   attempt to use to log in to an IMAP server, in the order mutt should
   try them. Authentication methods are either "login" or the right side
   of an IMAP "AUTH=xxx" capability string, e.g. "digest-md5", "gssapi" or
   "cram-md5". This option is case-insensitive. If it's _u_n_s_e_t (the
   default) mutt will try all available methods, in order from most-secure
   to least-secure.

   Example:
set imap_authenticators="gssapi:cram-md5:login"

   _N_o_t_e_: Mutt will only fall back to other authentication methods if the
   previous methods are unavailable. If a method is available but
   authentication fails, mutt will not connect to the IMAP server.

3.101. imap_check_subscribed

   Type: boolean
   Default: no

   When _s_e_t, mutt will fetch the set of subscribed folders from your
   server on connection, and add them to the set of mailboxes it polls for
   new mail just as if you had issued individual "[1627]mmaaiillbbooxxeess"
   commands.

3.102. imap_delim_chars

   Type: string
   Default: "/."

   This contains the list of characters which you would like to treat as
   folder separators for displaying IMAP paths. In particular it helps in
   using the "=" shortcut for your _f_o_l_d_e_r variable.

3.103. imap_headers

   Type: string
   Default: (empty)

   Mutt requests these header fields in addition to the default headers
   ("Date:", "From:", "Subject:", "To:", "Cc:", "Message-Id:",
   "References:", "Content-Type:", "Content-Description:", "In-Reply-To:",
   "Reply-To:", "Lines:", "List-Post:", "X-Label:") from IMAP servers
   before displaying the index menu. You may want to add more headers for
   spam detection.

   _N_o_t_e_: This is a space separated list, items should be uppercase and not
   contain the colon, e.g. "X-BOGOSITY X-SPAM-STATUS" for the
   "X-Bogosity:" and "X-Spam-Status:" header fields.

3.104. imap_idle

   Type: boolean
   Default: no

   When _s_e_t, mutt will attempt to use the IMAP IDLE extension to check for
   new mail in the current mailbox. Some servers (dovecot was the
   inspiration for this option) react badly to mutt's implementation. If
   your connection seems to freeze up periodically, try unsetting this.

3.105. imap_keepalive

   Type: number
   Default: 300

   This variable specifies the maximum amount of time in seconds that mutt
   will wait before polling open IMAP connections, to prevent the server
   from closing them before mutt has finished with them. The default is
   well within the RFC-specified minimum amount of time (30 minutes)
   before a server is allowed to do this, but in practice the RFC does get
   violated every now and then. Reduce this number if you find yourself
   getting disconnected from your IMAP server due to inactivity.

3.106. imap_list_subscribed

   Type: boolean
   Default: no

   This variable configures whether IMAP folder browsing will look for
   only subscribed folders or all folders. This can be toggled in the IMAP
   browser with the <toggle-subscribed> function.

3.107. imap_login

   Type: string
   Default: (empty)

   Your login name on the IMAP server.

   This variable defaults to the value of [1628]$$iimmaapp__uusseerr.

3.108. imap_pass

   Type: string
   Default: (empty)

   Specifies the password for your IMAP account. If _u_n_s_e_t, Mutt will
   prompt you for your password when you invoke the <imap-fetch-mail>
   function or try to open an IMAP folder.

   _W_a_r_n_i_n_g: you should only use this option when you are on a fairly
   secure machine, because the superuser can read your muttrc even if you
   are the only one who can read the file.

3.109. imap_passive

   Type: boolean
   Default: yes

   When _s_e_t, mutt will not open new IMAP connections to check for new
   mail. Mutt will only check for new mail over existing IMAP connections.
   This is useful if you don't want to be prompted to user/password pairs
   on mutt invocation, or if opening the connection is slow.

3.110. imap_peek

   Type: boolean
   Default: yes

   When _s_e_t, mutt will avoid implicitly marking your mail as read whenever
   you fetch a message from the server. This is generally a good thing,
   but can make closing an IMAP folder somewhat slower. This option exists
   to appease speed freaks.

3.111. imap_pipeline_depth

   Type: number
   Default: 15

   Controls the number of IMAP commands that may be queued up before they
   are sent to the server. A deeper pipeline reduces the amount of time
   mutt must wait for the server, and can make IMAP servers feel much more
   responsive. But not all servers correctly handle pipelined commands, so
   if you have problems you might want to try setting this variable to 0.

   _N_o_t_e_: Changes to this variable have no effect on open connections.

3.112. imap_servernoise

   Type: boolean
   Default: yes

   When _s_e_t, mutt will display warning messages from the IMAP server as
   error messages. Since these messages are often harmless, or generated
   due to configuration problems on the server which are out of the users'
   hands, you may wish to suppress them at some point.

3.113. imap_user

   Type: string
   Default: (empty)

   The name of the user whose mail you intend to access on the IMAP
   server.

   This variable defaults to your user name on the local machine.

3.114. implicit_autoview

   Type: boolean
   Default: no

   If set to "yes", mutt will look for a mailcap entry with the
   "copiousoutput" flag set for _e_v_e_r_y MIME attachment it doesn't have an
   internal viewer defined for. If such an entry is found, mutt will use
   the viewer defined in that entry to convert the body part to text form.

3.115. include

   Type: quadoption
   Default: ask-yes

   Controls whether or not a copy of the message(s) you are replying to is
   included in your reply.

3.116. include_onlyfirst

   Type: boolean
   Default: no

   Controls whether or not Mutt includes only the first attachment of the
   message you are replying.

3.117. indent_string

   Type: string
   Default: "> "

   Specifies the string to prepend to each line of text quoted in a
   message to which you are replying. You are strongly encouraged not to
   change this value, as it tends to agitate the more fanatical netizens.

   The value of this option is ignored if [1629]$$tteexxtt__fflloowweedd is set, too
   because the quoting mechanism is strictly defined for format=flowed.

   This option is a format string, please see the description of
   [1630]$$iinnddeexx__ffoorrmmaatt for supported printf(3)-style sequences.

3.118. index_format

   Type: string
   Default: "%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s"

   This variable allows you to customize the message index display to your
   personal taste.

   "Format strings" are similar to the strings used in the C function
   printf(3) to format output (see the man page for more details). The
   following sequences are defined in Mutt:
   %a address of the author
   %A reply-to address (if present; otherwise: address of author)
   %b filename of the original message folder (think mailbox)
   %B the list to which the letter was sent, or else the folder name (%b).
   %c number of characters (bytes) in the message
   %C current message number
   %d date and time of the message in the format specified by
   [1631]$$ddaattee__ffoorrmmaatt converted to sender's time zone
   %D date and time of the message in the format specified by
   [1632]$$ddaattee__ffoorrmmaatt converted to the local time zone
   %e current message number in thread
   %E number of messages in current thread
   %f sender (address + real name), either From: or Return-Path:
   %F author name, or recipient name if the message is from you
   %H spam attribute(s) of this message
   %i message-id of the current message
   %l number of lines in the message (does not work with maildir, mh, and
   possibly IMAP folders)
   %L If an address in the "To:" or "Cc:" header field matches an address
   defined by the users "[1633]ssuubbssccrriibbee" command, this displays "To
   <list-name>", otherwise the same as %F.
   %m total number of message in the mailbox
   %M number of hidden messages if the thread is collapsed.
   %N message score
   %n author's real name (or address if missing)
   %O original save folder where mutt would formerly have stashed the
   message: list name or recipient name if not sent to a list
   %P progress indicator for the built-in pager (how much of the file has
   been displayed)
   %r comma separated list of "To:" recipients
   %R comma separated list of "Cc:" recipients
   %s subject of the message
   %S status of the message ("N"/"D"/"d"/"!"/"r"/*)
   %t "To:" field (recipients)
   %T the appropriate character from the [1634]$$ttoo__cchhaarrss string
   %u user (login) name of the author
   %v first name of the author, or the recipient if the message is from
   you
   %X number of attachments (please see the "[1635]aattttaacchhmmeennttss" section
   for possible speed effects)
   %y "X-Label:" field, if present
   %Y "X-Label:" field, if present, and _(_1_) not at part of a thread tree,
   _(_2_) at the top of a thread, or _(_3_) "X-Label:" is different from
   preceding message's "X-Label:".
   %Z message status flags
   %{fmt} the date and time of the message is converted to sender's time
   zone, and "fmt" is expanded by the library function strftime(3); a
   leading bang disables locales
   %[fmt] the date and time of the message is converted to the local time
   zone, and "fmt" is expanded by the library function strftime(3); a
   leading bang disables locales
   %(fmt) the local date and time when the message was received. "fmt" is
   expanded by the library function strftime(3); a leading bang disables
   locales
   %<fmt> the current local time. "fmt" is expanded by the library
   function strftime(3); a leading bang disables locales.
   %>X right justify the rest of the string and pad with character "X"
   %|X pad to the end of the line with character "X"
   %*X soft-fill with character "X" as pad

   "Soft-fill" deserves some explanation: Normal right-justification will
   print everything to the left of the "%>", displaying padding and
   whatever lies to the right only if there's room. By contrast, soft-fill
   gives priority to the right-hand side, guaranteeing space to display it
   and showing padding only if there's still room. If necessary, soft-fill
   will eat text leftwards to make room for rightward text.

   Note that these expandos are supported in "[1636]ssaavvee--hhooookk",
   "[1637]ffcccc--hhooookk" and "[1638]ffcccc--ssaavvee--hhooookk", too.

3.119. ispell

   Type: path
   Default: "ispell"

   How to invoke ispell (GNU's spell-checking software).

3.120. keep_flagged

   Type: boolean
   Default: no

   If _s_e_t, read messages marked as flagged will not be moved from your
   spool mailbox to your [1639]$$mmbbooxx mailbox, or as a result of a
   "[1640]mmbbooxx--hhooookk" command.

3.121. locale

   Type: string
   Default: "C"

   The locale used by strftime(3) to format dates. Legal values are the
   strings your system accepts for the locale environment variable
   $LC_TIME.

3.122. mail_check

   Type: number
   Default: 5

   This variable configures how often (in seconds) mutt should look for
   new mail. Also see the [1641]$$ttiimmeeoouutt variable.

3.123. mail_check_recent

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will only notify you about new mail that has been
   received since the last time you opened the mailbox. When _u_n_s_e_t, Mutt
   will notify you if any new mail exists in the mailbox, regardless of
   whether you have visited it recently.

   When _[_1_6_4_2_]$$mmaarrkk__oolldd is set, Mutt does not consider the mailbox to
   contain new mail if only old messages exist.

3.124. mail_check_stats

   Type: boolean
   Default: no

   When _s_e_t, mutt will periodically calculate message statistics of a
   mailbox while polling for new mail. It will check for unread, flagged,
   and total message counts. Because this operation is more performance
   intensive, it defaults to _u_n_s_e_t, and has a separate option,
   [1643]$$mmaaiill__cchheecckk__ssttaattss__iinntteerrvvaall, to control how often to update these
   counts.

3.125. mail_check_stats_interval

   Type: number
   Default: 60

   When [1644]$$mmaaiill__cchheecckk__ssttaattss is _s_e_t, this variable configures how often
   (in seconds) mutt will update message counts.

3.126. mailcap_path

   Type: string
   Default: (empty)

   This variable specifies which files to consult when attempting to
   display MIME bodies not directly supported by Mutt.

3.127. mailcap_sanitize

   Type: boolean
   Default: yes

   If _s_e_t, mutt will restrict possible characters in mailcap % expandos to
   a well-defined set of safe characters. This is the safe setting, but we
   are not sure it doesn't break some more advanced MIME stuff.

   _D_O_N_'_T_ _C_H_A_N_G_E_ _T_H_I_S_ _S_E_T_T_I_N_G_ _U_N_L_E_S_S_ _Y_O_U_ _A_R_E_ _R_E_A_L_L_Y_ _S_U_R_E_ _W_H_A_T_ _Y_O_U_ _A_R_E
   _D_O_I_N_G_!

3.128. maildir_header_cache_verify

   Type: boolean
   Default: yes

   Check for Maildir unaware programs other than mutt having modified
   maildir files when the header cache is in use. This incurs one stat(2)
   per message every time the folder is opened (which can be very slow for
   NFS folders).

3.129. maildir_trash

   Type: boolean
   Default: no

   If _s_e_t, messages marked as deleted will be saved with the maildir
   trashed flag instead of unlinked. _N_o_t_e_: this only applies to
   maildir-style mailboxes. Setting it will have no effect on other
   mailbox types.

3.130. maildir_check_cur

   Type: boolean
   Default: no

   If _s_e_t, mutt will poll both the new and cur directories of a maildir
   folder for new messages. This might be useful if other programs
   interacting with the folder (e.g. dovecot) are moving new messages to
   the cur directory. Note that setting this option may slow down polling
   for new messages in large folders, since mutt has to scan all cur
   messages.

3.131. mark_old

   Type: boolean
   Default: yes

   Controls whether or not mutt marks _n_e_w _u_n_r_e_a_d messages as _o_l_d if you
   exit a mailbox without reading them. With this option _s_e_t, the next
   time you start mutt, the messages will show up with an "O" next to them
   in the index menu, indicating that they are old.

3.132. markers

   Type: boolean
   Default: yes

   Controls the display of wrapped lines in the internal pager. If set, a
   "+" marker is displayed at the beginning of wrapped lines.

   Also see the [1645]$$ssmmaarrtt__wwrraapp variable.

3.133. mask

   Type: regular expression
   Default: "!^\.[^.]"

   A regular expression used in the file browser, optionally preceded by
   the _n_o_t operator "!". Only files whose names match this mask will be
   shown. The match is always case-sensitive.

3.134. mbox

   Type: path
   Default: "~/mbox"

   This specifies the folder into which read mail in your [1646]$$ssppoooollffiillee
   folder will be appended.

   Also see the [1647]$$mmoovvee variable.

3.135. mbox_type

   Type: folder magic
   Default: mbox

   The default mailbox type used when creating new folders. May be any of
   "mbox", "MMDF", "MH" and "Maildir". This is overridden by the -m
   command-line option.

3.136. menu_context

   Type: number
   Default: 0

   This variable controls the number of lines of context that are given
   when scrolling through menus. (Similar to [1648]$$ppaaggeerr__ccoonntteexxtt.)

3.137. menu_move_off

   Type: boolean
   Default: yes

   When _u_n_s_e_t, the bottom entry of menus will never scroll up past the
   bottom of the screen, unless there are less entries than lines. When
   _s_e_t, the bottom entry may move off the bottom.

3.138. menu_scroll

   Type: boolean
   Default: no

   When _s_e_t, menus will be scrolled up or down one line when you attempt
   to move across a screen boundary. If _u_n_s_e_t, the screen is cleared and
   the next or previous page of the menu is displayed (useful for slow
   links to avoid many redraws).

3.139. message_cache_clean

   Type: boolean
   Default: no

   If _s_e_t, mutt will clean out obsolete entries from the message cache
   when the mailbox is synchronized. You probably only want to set it
   every once in a while, since it can be a little slow (especially for
   large folders).

3.140. message_cachedir

   Type: path
   Default: (empty)

   Set this to a directory and mutt will cache copies of messages from
   your IMAP and POP servers here. You are free to remove entries at any
   time.

   When setting this variable to a directory, mutt needs to fetch every
   remote message only once and can perform regular expression searches as
   fast as for local folders.

   Also see the [1649]$$mmeessssaaggee__ccaacchhee__cclleeaann variable.

3.141. message_format

   Type: string
   Default: "%s"

   This is the string displayed in the "attachment" menu for attachments
   of type message/rfc822. For a full listing of defined printf(3)-like
   sequences see the section on [1650]$$iinnddeexx__ffoorrmmaatt.

3.142. meta_key

   Type: boolean
   Default: no

   If _s_e_t, forces Mutt to interpret keystrokes with the high bit (bit 8)
   set as if the user had pressed the Esc key and whatever key remains
   after having the high bit removed. For example, if the key pressed has
   an ASCII value of 0xf8, then this is treated as if the user had pressed
   Esc then "x". This is because the result of removing the high bit from
   0xf8 is 0x78, which is the ASCII character "x".

3.143. metoo

   Type: boolean
   Default: no

   If _u_n_s_e_t, Mutt will remove your address (see the "[1651]aalltteerrnnaatteess"
   command) from the list of recipients when replying to a message.

3.144. mh_purge

   Type: boolean
   Default: no

   When _u_n_s_e_t, mutt will mimic mh's behavior and rename deleted messages
   to _,_<_o_l_d_ _f_i_l_e_ _n_a_m_e_> in mh folders instead of really deleting them. This
   leaves the message on disk but makes programs reading the folder ignore
   it. If the variable is _s_e_t, the message files will simply be deleted.

   This option is similar to [1652]$$mmaaiillddiirr__ttrraasshh for Maildir folders.

3.145. mh_seq_flagged

   Type: string
   Default: "flagged"

   The name of the MH sequence used for flagged messages.

3.146. mh_seq_replied

   Type: string
   Default: "replied"

   The name of the MH sequence used to tag replied messages.

3.147. mh_seq_unseen

   Type: string
   Default: "unseen"

   The name of the MH sequence used for unseen messages.

3.148. mime_forward

   Type: quadoption
   Default: no

   When _s_e_t, the message you are forwarding will be attached as a separate
   message/rfc822 MIME part instead of included in the main body of the
   message. This is useful for forwarding MIME messages so the receiver
   can properly view the message as it was delivered to you. If you like
   to switch between MIME and not MIME from mail to mail, set this
   variable to "ask-no" or "ask-yes".

   Also see [1653]$$ffoorrwwaarrdd__ddeeccooddee and [1654]$$mmiimmee__ffoorrwwaarrdd__ddeeccooddee.

3.149. mime_forward_decode

   Type: boolean
   Default: no

   Controls the decoding of complex MIME messages into text/plain when
   forwarding a message while [1655]$$mmiimmee__ffoorrwwaarrdd is _s_e_t. Otherwise
   [1656]$$ffoorrwwaarrdd__ddeeccooddee is used instead.

3.150. mime_forward_rest

   Type: quadoption
   Default: yes

   When forwarding multiple attachments of a MIME message from the
   attachment menu, attachments which cannot be decoded in a reasonable
   manner will be attached to the newly composed message if this option is
   _s_e_t.

3.151. mix_entry_format

   Type: string
   Default: "%4n %c %-16s %a"

   This variable describes the format of a remailer line on the mixmaster
   chain selection screen. The following printf(3)-like sequences are
   supported:
   %n The running number on the menu.
   %c Remailer capabilities.
   %s The remailer's short name.
   %a The remailer's e-mail address.

3.152. mixmaster

   Type: path
   Default: "mixmaster"

   This variable contains the path to the Mixmaster binary on your system.
   It is used with various sets of parameters to gather the list of known
   remailers, and to finally send a message through the mixmaster chain.

3.153. move

   Type: quadoption
   Default: no

   Controls whether or not Mutt will move read messages from your spool
   mailbox to your [1657]$$mmbbooxx mailbox, or as a result of a
   "[1658]mmbbooxx--hhooookk" command.

3.154. narrow_tree

   Type: boolean
   Default: no

   This variable, when _s_e_t, makes the thread tree narrower, allowing
   deeper threads to fit on the screen.

3.155. net_inc

   Type: number
   Default: 10

   Operations that expect to transfer a large amount of data over the
   network will update their progress every [1659]$$nneett__iinncc kilobytes. If
   set to 0, no progress messages will be displayed.

   See also [1660]$$rreeaadd__iinncc, [1661]$$wwrriittee__iinncc and [1662]$$nneett__iinncc.

3.156. pager

   Type: path
   Default: "builtin"

   This variable specifies which pager you would like to use to view
   messages. The value "builtin" means to use the built-in pager,
   otherwise this variable should specify the pathname of the external
   pager you would like to use.

   Using an external pager may have some disadvantages: Additional
   keystrokes are necessary because you can't call mutt functions directly
   from the pager, and screen resizes cause lines longer than the screen
   width to be badly formatted in the help menu.

3.157. pager_context

   Type: number
   Default: 0

   This variable controls the number of lines of context that are given
   when displaying the next or previous page in the internal pager. By
   default, Mutt will display the line after the last one on the screen at
   the top of the next page (0 lines of context).

   This variable also specifies the amount of context given for search
   results. If positive, this many lines will be given before a match, if
   0, the match will be top-aligned.

3.158. pager_format

   Type: string
   Default: "-%Z- %C/%m: %-20.20n   %s%*  -- (%P)"

   This variable controls the format of the one-line message "status"
   displayed before each message in either the internal or an external
   pager. The valid sequences are listed in the [1663]$$iinnddeexx__ffoorrmmaatt
   section.

3.159. pager_index_lines

   Type: number
   Default: 0

   Determines the number of lines of a mini-index which is shown when in
   the pager. The current message, unless near the top or bottom of the
   folder, will be roughly one third of the way down this mini-index,
   giving the reader the context of a few messages before and after the
   message. This is useful, for example, to determine how many messages
   remain to be read in the current thread. One of the lines is reserved
   for the status bar from the index, so a setting of 6 will only show 5
   lines of the actual index. A value of 0 results in no index being
   shown. If the number of messages in the current folder is less than
   [1664]$$ppaaggeerr__iinnddeexx__lliinneess, then the index will only use as many lines as
   it needs.

3.160. pager_stop

   Type: boolean
   Default: no

   When _s_e_t, the internal-pager will _n_o_t move to the next message when you
   are at the end of a message and invoke the <next-page> function.

3.161. pgp_auto_decode

   Type: boolean
   Default: no

   If _s_e_t, mutt will automatically attempt to decrypt traditional PGP
   messages whenever the user performs an operation which ordinarily would
   result in the contents of the message being operated on. For example,
   if the user displays a pgp-traditional message which has not been
   manually checked with the [1665]<<cchheecckk--ttrraaddiittiioonnaall--ppggpp>> function, mutt
   will automatically check the message for traditional pgp.

3.162. pgp_autoinline

   Type: boolean
   Default: no

   This option controls whether Mutt generates old-style inline
   (traditional) PGP encrypted or signed messages under certain
   circumstances. This can be overridden by use of the pgp menu, when
   inline is not required. The GPGME backend does not support this option.

   Note that Mutt might automatically use PGP/MIME for messages which
   consist of more than a single MIME part. Mutt can be configured to ask
   before sending PGP/MIME messages when inline (traditional) would not
   work.

   Also see the [1666]$$ppggpp__mmiimmee__aauuttoo variable.

   Also note that using the old-style PGP message format is _s_t_r_o_n_g_l_y
   _d_e_p_r_e_c_a_t_e_d. (PGP only)

3.163. pgp_check_exit

   Type: boolean
   Default: yes

   If _s_e_t, mutt will check the exit code of the PGP subprocess when
   signing or encrypting. A non-zero exit code means that the subprocess
   failed. (PGP only)

3.164. pgp_clearsign_command

   Type: string
   Default: (empty)

   This format is used to create an old-style "clearsigned" PGP message.
   Note that the use of this format is _s_t_r_o_n_g_l_y _d_e_p_r_e_c_a_t_e_d.

   This is a format string, see the [1667]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.165. pgp_decode_command

   Type: string
   Default: (empty)

   This format strings specifies a command which is used to decode
   application/pgp attachments.

   The PGP command formats have their own set of printf(3)-like sequences:
   %p Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty
   string otherwise. Note: This may be used with a %? construct.
   %f Expands to the name of a file containing a message.
   %s Expands to the name of a file containing the signature part of a
   multipart/signed attachment when verifying it.
   %a The value of [1668]$$ppggpp__ssiiggnn__aass.
   %r One or more key IDs (or fingerprints if available).

   For examples on how to configure these formats for the various versions
   of PGP which are floating around, see the pgp and gpg sample
   configuration files in the samples/ subdirectory which has been
   installed on your system alongside the documentation. (PGP only)

3.166. pgp_decrypt_command

   Type: string
   Default: (empty)

   This command is used to decrypt a PGP encrypted message.

   This is a format string, see the [1669]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.167. pgp_decryption_okay

   Type: regular expression
   Default: (empty)

   If you assign text to this variable, then an encrypted PGP message is
   only considered successfully decrypted if the output from
   [1670]$$ppggpp__ddeeccrryypptt__ccoommmmaanndd contains the text. This is used to protect
   against a spoofed encrypted message, with multipart/encrypted headers
   but containing a block that is not actually encrypted. (e.g. simply
   signed and ascii armored text). (PGP only)

3.168. pgp_encrypt_only_command

   Type: string
   Default: (empty)

   This command is used to encrypt a body part without signing it.

   This is a format string, see the [1671]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.169. pgp_encrypt_sign_command

   Type: string
   Default: (empty)

   This command is used to both sign and encrypt a body part.

   This is a format string, see the [1672]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.170. pgp_entry_format

   Type: string
   Default: "%4n %t%f %4l/0x%k %-4a %2c %u"

   This variable allows you to customize the PGP key selection menu to
   your personal taste. This string is similar to [1673]$$iinnddeexx__ffoorrmmaatt, but
   has its own set of printf(3)-like sequences:
   %n     number
   %k     key id
   %u     user id
   %a     algorithm
   %l     key length
   %f     flags
   %c     capabilities
   %t     trust/validity of the key-uid association
   %[<s>] date of the key where <s> is an strftime(3) expression

   (PGP only)

3.171. pgp_export_command

   Type: string
   Default: (empty)

   This command is used to export a public key from the user's key ring.

   This is a format string, see the [1674]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.172. pgp_getkeys_command

   Type: string
   Default: (empty)

   This command is invoked whenever Mutt needs to fetch the public key
   associated with an email address. Of the sequences supported by
   [1675]$$ppggpp__ddeeccooddee__ccoommmmaanndd, %r is the only printf(3)-like sequence used
   with this format. Note that in this case, %r expands to the email
   address, not the public key ID (the key ID is unknown, which is why
   Mutt is invoking this command). (PGP only)

3.173. pgp_good_sign

   Type: regular expression
   Default: (empty)

   If you assign a text to this variable, then a PGP signature is only
   considered verified if the output from [1676]$$ppggpp__vveerriiffyy__ccoommmmaanndd
   contains the text. Use this variable if the exit code from the command
   is 0 even for bad signatures. (PGP only)

3.174. pgp_ignore_subkeys

   Type: boolean
   Default: yes

   Setting this variable will cause Mutt to ignore OpenPGP subkeys.
   Instead, the principal key will inherit the subkeys' capabilities.
   _U_n_s_e_t this if you want to play interesting key selection games. (PGP
   only)

3.175. pgp_import_command

   Type: string
   Default: (empty)

   This command is used to import a key from a message into the user's
   public key ring.

   This is a format string, see the [1677]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.176. pgp_list_pubring_command

   Type: string
   Default: (empty)

   This command is used to list the public key ring's contents. The output
   format must be analogous to the one used by
gpg --list-keys --with-colons --with-fingerprint

   This format is also generated by the pgpring utility which comes with
   mutt.

   Note: gpg's fixed-list-mode option should not be used. It produces a
   different date format which may result in mutt showing incorrect key
   generation dates.

   This is a format string, see the [1678]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.177. pgp_list_secring_command

   Type: string
   Default: (empty)

   This command is used to list the secret key ring's contents. The output
   format must be analogous to the one used by:
gpg --list-keys --with-colons --with-fingerprint

   This format is also generated by the pgpring utility which comes with
   mutt.

   Note: gpg's fixed-list-mode option should not be used. It produces a
   different date format which may result in mutt showing incorrect key
   generation dates.

   This is a format string, see the [1679]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.178. pgp_long_ids

   Type: boolean
   Default: yes

   If _s_e_t, use 64 bit PGP key IDs, if _u_n_s_e_t use the normal 32 bit key IDs.
   NOTE: Internally, Mutt has transitioned to using fingerprints (or long
   key IDs as a fallback). This option now only controls the display of
   key IDs in the key selection menu and a few other places. (PGP only)

3.179. pgp_mime_auto

   Type: quadoption
   Default: ask-yes

   This option controls whether Mutt will prompt you for automatically
   sending a (signed/encrypted) message using PGP/MIME when inline
   (traditional) fails (for any reason).

   Also note that using the old-style PGP message format is _s_t_r_o_n_g_l_y
   _d_e_p_r_e_c_a_t_e_d. (PGP only)

3.180. pgp_replyinline

   Type: boolean
   Default: no

   Setting this variable will cause Mutt to always attempt to create an
   inline (traditional) message when replying to a message which is PGP
   encrypted/signed inline. This can be overridden by use of the pgp menu,
   when inline is not required. This option does not automatically detect
   if the (replied-to) message is inline; instead it relies on Mutt
   internals for previously checked/flagged messages.

   Note that Mutt might automatically use PGP/MIME for messages which
   consist of more than a single MIME part. Mutt can be configured to ask
   before sending PGP/MIME messages when inline (traditional) would not
   work.

   Also see the [1680]$$ppggpp__mmiimmee__aauuttoo variable.

   Also note that using the old-style PGP message format is _s_t_r_o_n_g_l_y
   _d_e_p_r_e_c_a_t_e_d. (PGP only)

3.181. pgp_retainable_sigs

   Type: boolean
   Default: no

   If _s_e_t, signed and encrypted messages will consist of nested
   multipart/signed and multipart/encrypted body parts.

   This is useful for applications like encrypted and signed mailing
   lists, where the outer layer (multipart/encrypted) can be easily
   removed, while the inner multipart/signed part is retained. (PGP only)

3.182. pgp_show_unusable

   Type: boolean
   Default: yes

   If _s_e_t, mutt will display non-usable keys on the PGP key selection
   menu. This includes keys which have been revoked, have expired, or have
   been marked as "disabled" by the user. (PGP only)

3.183. pgp_sign_as

   Type: string
   Default: (empty)

   If you have more than one key pair, this option allows you to specify
   which of your private keys to use. It is recommended that you use the
   keyid form to specify your key (e.g. 0x00112233). (PGP only)

3.184. pgp_sign_command

   Type: string
   Default: (empty)

   This command is used to create the detached PGP signature for a
   multipart/signed PGP/MIME body part.

   This is a format string, see the [1681]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.185. pgp_sort_keys

   Type: sort order
   Default: address

   Specifies how the entries in the pgp menu are sorted. The following are
   legal values:
   address sort alphabetically by user id
   keyid   sort alphabetically by key id
   date    sort by key creation date
   trust   sort by the trust of the key

   If you prefer reverse order of the above values, prefix it with
   "reverse-". (PGP only)

3.186. pgp_strict_enc

   Type: boolean
   Default: yes

   If _s_e_t, Mutt will automatically encode PGP/MIME signed messages as
   quoted-printable. Please note that unsetting this variable may lead to
   problems with non-verifyable PGP signatures, so only change this if you
   know what you are doing. (PGP only)

3.187. pgp_timeout

   Type: number
   Default: 300

   The number of seconds after which a cached passphrase will expire if
   not used. (PGP only)

3.188. pgp_use_gpg_agent

   Type: boolean
   Default: no

   If _s_e_t, mutt will use a possibly-running gpg-agent(1) process. Note
   that as of version 2.1, GnuPG no longer exports GPG_AGENT_INFO, so mutt
   no longer verifies if the agent is running. (PGP only)

3.189. pgp_verify_command

   Type: string
   Default: (empty)

   This command is used to verify PGP signatures.

   This is a format string, see the [1682]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.190. pgp_verify_key_command

   Type: string
   Default: (empty)

   This command is used to verify key information from the key selection
   menu.

   This is a format string, see the [1683]$$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.191. pipe_decode

   Type: boolean
   Default: no

   Used in connection with the <pipe-message> command. When _u_n_s_e_t, Mutt
   will pipe the messages without any preprocessing. When _s_e_t, Mutt will
   weed headers and will attempt to decode the messages first.

3.192. pipe_sep

   Type: string
   Default: "\n"

   The separator to add between messages when piping a list of tagged
   messages to an external Unix command.

3.193. pipe_split

   Type: boolean
   Default: no

   Used in connection with the <pipe-message> function following
   <tag-prefix>. If this variable is _u_n_s_e_t, when piping a list of tagged
   messages Mutt will concatenate the messages and will pipe them all
   concatenated. When _s_e_t, Mutt will pipe the messages one by one. In both
   cases the messages are piped in the current sorted order, and the
   [1684]$$ppiippee__sseepp separator is added after each message.

3.194. pop_auth_try_all

   Type: boolean
   Default: yes

   If _s_e_t, Mutt will try all available authentication methods. When _u_n_s_e_t,
   Mutt will only fall back to other authentication methods if the
   previous methods are unavailable. If a method is available but
   authentication fails, Mutt will not connect to the POP server.

3.195. pop_authenticators

   Type: string
   Default: (empty)

   This is a colon-delimited list of authentication methods mutt may
   attempt to use to log in to an POP server, in the order mutt should try
   them. Authentication methods are either "user", "apop" or any SASL
   mechanism, e.g. "digest-md5", "gssapi" or "cram-md5". This option is
   case-insensitive. If this option is _u_n_s_e_t (the default) mutt will try
   all available methods, in order from most-secure to least-secure.

   Example:
set pop_authenticators="digest-md5:apop:user"

3.196. pop_checkinterval

   Type: number
   Default: 60

   This variable configures how often (in seconds) mutt should look for
   new mail in the currently selected mailbox if it is a POP mailbox.

3.197. pop_delete

   Type: quadoption
   Default: ask-no

   If _s_e_t, Mutt will delete successfully downloaded messages from the POP
   server when using the [1685]<<ffeettcchh--mmaaiill>> function. When _u_n_s_e_t, Mutt
   will download messages but also leave them on the POP server.

3.198. pop_host

   Type: string
   Default: (empty)

   The name of your POP server for the [1686]<<ffeettcchh--mmaaiill>> function. You
   can also specify an alternative port, username and password, i.e.:
[pop[s]://][username[:password]@]popserver[:port]

   where "[...]" denotes an optional part.

3.199. pop_last

   Type: boolean
   Default: no

   If this variable is _s_e_t, mutt will try to use the "LAST" POP command
   for retrieving only unread messages from the POP server when using the
   [1687]<<ffeettcchh--mmaaiill>> function.

3.200. pop_pass

   Type: string
   Default: (empty)

   Specifies the password for your POP account. If _u_n_s_e_t, Mutt will prompt
   you for your password when you open a POP mailbox.

   _W_a_r_n_i_n_g: you should only use this option when you are on a fairly
   secure machine, because the superuser can read your muttrc even if you
   are the only one who can read the file.

3.201. pop_reconnect

   Type: quadoption
   Default: ask-yes

   Controls whether or not Mutt will try to reconnect to the POP server if
   the connection is lost.

3.202. pop_user

   Type: string
   Default: (empty)

   Your login name on the POP server.

   This variable defaults to your user name on the local machine.

3.203. post_indent_string

   Type: string
   Default: (empty)

   Similar to the [1688]$$aattttrriibbuuttiioonn variable, Mutt will append this
   string after the inclusion of a message which is being replied to.

3.204. postpone

   Type: quadoption
   Default: ask-yes

   Controls whether or not messages are saved in the [1689]$$ppoossttppoonneedd
   mailbox when you elect not to send immediately.

   Also see the [1690]$$rreeccaallll variable.

3.205. postponed

   Type: path
   Default: "~/postponed"

   Mutt allows you to indefinitely "[1691]ppoossttppoonnee sending a message"
   which you are editing. When you choose to postpone a message, Mutt
   saves it in the mailbox specified by this variable.

   Also see the [1692]$$ppoossttppoonnee variable.

3.206. postpone_encrypt

   Type: boolean
   Default: no

   When _s_e_t, postponed messages that are marked for encryption will be
   encrypted using the key in [1693]$$ppoossttppoonnee__eennccrryypptt__aass before saving.
   (Crypto only)

3.207. postpone_encrypt_as

   Type: string
   Default: (empty)

   This is the key used to encrypt postponed messages. It should be in
   keyid or fingerprint form (e.g. 0x00112233 for PGP or the hash-value
   that OpenSSL generates for S/MIME). (Crypto only)

3.208. preconnect

   Type: string
   Default: (empty)

   If _s_e_t, a shell command to be executed if mutt fails to establish a
   connection to the server. This is useful for setting up secure
   connections, e.g. with ssh(1). If the command returns a nonzero status,
   mutt gives up opening the server. Example:
set preconnect="ssh -f -q -L 1234:mailhost.net:143 mailhost.net \
sleep 20 < /dev/null > /dev/null"

   Mailbox "foo" on "mailhost.net" can now be reached as
   "{localhost:1234}foo".

   Note: For this example to work, you must be able to log in to the
   remote machine without having to enter a password.

3.209. print

   Type: quadoption
   Default: ask-no

   Controls whether or not Mutt really prints messages. This is set to
   "ask-no" by default, because some people accidentally hit "p" often.

3.210. print_command

   Type: path
   Default: "lpr"

   This specifies the command pipe that should be used to print messages.

3.211. print_decode

   Type: boolean
   Default: yes

   Used in connection with the <print-message> command. If this option is
   _s_e_t, the message is decoded before it is passed to the external command
   specified by [1694]$$pprriinntt__ccoommmmaanndd. If this option is _u_n_s_e_t, no
   processing will be applied to the message when printing it. The latter
   setting may be useful if you are using some advanced printer filter
   which is able to properly format e-mail messages for printing.

3.212. print_split

   Type: boolean
   Default: no

   Used in connection with the <print-message> command. If this option is
   _s_e_t, the command specified by [1695]$$pprriinntt__ccoommmmaanndd is executed once for
   each message which is to be printed. If this option is _u_n_s_e_t, the
   command specified by [1696]$$pprriinntt__ccoommmmaanndd is executed only once, and
   all the messages are concatenated, with a form feed as the message
   separator.

   Those who use the enscript(1) program's mail-printing mode will most
   likely want to _s_e_t this option.

3.213. prompt_after

   Type: boolean
   Default: yes

   If you use an _e_x_t_e_r_n_a_l [1697]$$ppaaggeerr, setting this variable will cause
   Mutt to prompt you for a command when the pager exits rather than
   returning to the index menu. If _u_n_s_e_t, Mutt will return to the index
   menu when the external pager exits.

3.214. query_command

   Type: path
   Default: (empty)

   This specifies the command Mutt will use to make external address
   queries. The string may contain a "%s", which will be substituted with
   the query string the user types. Mutt will add quotes around the string
   substituted for "%s" automatically according to shell quoting rules, so
   you should avoid adding your own. If no "%s" is found in the string,
   Mutt will append the user's query to the end of the string. See
   "[1698]qquueerryy" for more information.

3.215. query_format

   Type: string
   Default: "%4c %t %-25.25a %-25.25n %?e?(%e)?"

   This variable describes the format of the "query" menu. The following
   printf(3)-style sequences are understood:
   %a  destination address
   %c  current entry number
   %e  extra information *
   %n  destination name
   %t  "*" if current entry is tagged, a space otherwise
   %>X right justify the rest of the string and pad with "X"
   %|X pad to the end of the line with "X"
   %*X soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the [1699]$$iinnddeexx__ffoorrmmaatt
   documentation.

   * = can be optionally printed if nonzero, see the [1700]$$ssttaattuuss__ffoorrmmaatt
   documentation.

3.216. quit

   Type: quadoption
   Default: yes

   This variable controls whether "quit" and "exit" actually quit from
   mutt. If this option is _s_e_t, they do quit, if it is _u_n_s_e_t, they have no
   effect, and if it is set to _a_s_k_-_y_e_s or _a_s_k_-_n_o, you are prompted for
   confirmation when you try to quit.

3.217. quote_regexp

   Type: regular expression
   Default: "^([ \t]*[|>:}#])+"

   A regular expression used in the internal pager to determine quoted
   sections of text in the body of a message. Quoted text may be filtered
   out using the <toggle-quoted> command, or colored according to the
   "color quoted" family of directives.

   Higher levels of quoting may be colored differently ("color quoted1",
   "color quoted2", etc.). The quoting level is determined by removing the
   last character from the matched text and recursively reapplying the
   regular expression until it fails to produce a match.

   Match detection may be overridden by the [1701]$$ssmmiilleeyyss regular
   expression.

3.218. read_inc

   Type: number
   Default: 10

   If set to a value greater than 0, Mutt will display which message it is
   currently on when reading a mailbox or when performing search actions
   such as search and limit. The message is printed after this many
   messages have been read or searched (e.g., if set to 25, Mutt will
   print a message when it is at message 25, and then again when it gets
   to message 50). This variable is meant to indicate progress when
   reading or searching large mailboxes which may take some time. When set
   to 0, only a single message will appear before the reading the mailbox.

   Also see the [1702]$$wwrriittee__iinncc, [1703]$$nneett__iinncc and [1704]$$ttiimmee__iinncc
   variables and the "[1705]ttuunniinngg" section of the manual for performance
   considerations.

3.219. read_only

   Type: boolean
   Default: no

   If _s_e_t, all folders are opened in read-only mode.

3.220. realname

   Type: string
   Default: (empty)

   This variable specifies what "real" or "personal" name should be used
   when sending messages.

   By default, this is the GECOS field from /etc/passwd. Note that this
   variable will _n_o_t be used when the user has set a real name in the
   [1706]$$ffrroomm variable.

3.221. recall

   Type: quadoption
   Default: ask-yes

   Controls whether or not Mutt recalls postponed messages when composing
   a new message.

   Setting this variable to _y_e_s is not generally useful, and thus not
   recommended. Note that the <recall-message> function can be used to
   manually recall postponed messages.

   Also see [1707]$$ppoossttppoonneedd variable.

3.222. record

   Type: path
   Default: "~/sent"

   This specifies the file into which your outgoing messages should be
   appended. (This is meant as the primary method for saving a copy of
   your messages, but another way to do this is using the "[1708]mmyy__hhddrr"
   command to create a "Bcc:" field with your email address in it.)

   The value of _[_1_7_0_9_]$$rreeccoorrdd is overridden by the [1710]$$ffoorrccee__nnaammee and
   [1711]$$ssaavvee__nnaammee variables, and the "[1712]ffcccc--hhooookk" command.

3.223. reflow_space_quotes

   Type: boolean
   Default: yes

   This option controls how quotes from format=flowed messages are
   displayed in the pager and when replying (with [1713]$$tteexxtt__fflloowweedd
   _u_n_s_e_t). When set, this option adds spaces after each level of quote
   marks, turning ">>>foo" into "> > > foo".

   _N_o_t_e_: If [1714]$$rreeffllooww__tteexxtt is _u_n_s_e_t, this option has no effect. Also,
   this option does not affect replies when [1715]$$tteexxtt__fflloowweedd is _s_e_t.

3.224. reflow_text

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will reformat paragraphs in text/plain parts marked
   format=flowed. If _u_n_s_e_t, Mutt will display paragraphs unaltered from
   how they appear in the message body. See RFC3676 for details on the
   _f_o_r_m_a_t_=_f_l_o_w_e_d format.

   Also see [1716]$$rreeffllooww__wwrraapp, and [1717]$$wwrraapp.

3.225. reflow_wrap

   Type: number
   Default: 78

   This variable controls the maximum paragraph width when reformatting
   text/plain parts when [1718]$$rreeffllooww__tteexxtt is _s_e_t. When the value is 0,
   paragraphs will be wrapped at the terminal's right margin. A positive
   value sets the paragraph width relative to the left margin. A negative
   value set the paragraph width relative to the right margin.

   Also see [1719]$$wwrraapp.

3.226. reply_regexp

   Type: regular expression
   Default: "^(re([\[0-9\]+])*|aw):[ \t]*"

   A regular expression used to recognize reply messages when threading
   and replying. The default value corresponds to the English "Re:" and
   the German "Aw:".

3.227. reply_self

   Type: boolean
   Default: no

   If _u_n_s_e_t and you are replying to a message sent by you, Mutt will
   assume that you want to reply to the recipients of that message rather
   than to yourself.

   Also see the "[1720]aalltteerrnnaatteess" command.

3.228. reply_to

   Type: quadoption
   Default: ask-yes

   If _s_e_t, when replying to a message, Mutt will use the address listed in
   the Reply-to: header as the recipient of the reply. If _u_n_s_e_t, it will
   use the address in the From: header field instead. This option is
   useful for reading a mailing list that sets the Reply-To: header field
   to the list address and you want to send a private message to the
   author of a message.

3.229. resolve

   Type: boolean
   Default: yes

   When _s_e_t, the cursor will be automatically advanced to the next
   (possibly undeleted) message whenever a command that modifies the
   current message is executed.

3.230. resume_draft_files

   Type: boolean
   Default: no

   If _s_e_t, draft files (specified by -H on the command line) are processed
   similarly to when resuming a postponed message. Recipients are not
   prompted for; send-hooks are not evaluated; no alias expansion takes
   place; user-defined headers and signatures are not added to the
   message.

3.231. resume_edited_draft_files

   Type: boolean
   Default: yes

   If _s_e_t, draft files previously edited (via -E -H on the command line)
   will have [1721]$$rreessuummee__ddrraafftt__ffiilleess automatically set when they are
   used as a draft file again.

   The first time a draft file is saved, mutt will add a header,
   X-Mutt-Resume-Draft to the saved file. The next time the draft file is
   read in, if mutt sees the header, it will set
   [1722]$$rreessuummee__ddrraafftt__ffiilleess.

   This option is designed to prevent multiple signatures, user-defined
   headers, and other processing effects from being made multiple times to
   the draft file.

3.232. reverse_alias

   Type: boolean
   Default: no

   This variable controls whether or not Mutt will display the "personal"
   name from your aliases in the index menu if it finds an alias that
   matches the message's sender. For example, if you have the following
   alias:
alias juser abd30425@somewhere.net (Joe User)

   and then you receive mail which contains the following header:
From: abd30425@somewhere.net

   It would be displayed in the index menu as "Joe User" instead of
   "abd30425@somewhere.net." This is useful when the person's e-mail
   address is not human friendly.

3.233. reverse_name

   Type: boolean
   Default: no

   It may sometimes arrive that you receive mail to a certain machine,
   move the messages to another machine, and reply to some the messages
   from there. If this variable is _s_e_t, the default _F_r_o_m_: line of the
   reply messages is built using the address where you received the
   messages you are replying to _i_f that address matches your
   "[1723]aalltteerrnnaatteess". If the variable is _u_n_s_e_t, or the address that would
   be used doesn't match your "[1724]aalltteerrnnaatteess", the _F_r_o_m_: line will use
   your address on the current machine.

   Also see the "[1725]aalltteerrnnaatteess" command.

3.234. reverse_realname

   Type: boolean
   Default: yes

   This variable fine-tunes the behavior of the [1726]$$rreevveerrssee__nnaammee
   feature. When it is _s_e_t, mutt will use the address from incoming
   messages as-is, possibly including eventual real names. When it is
   _u_n_s_e_t, mutt will override any such real names with the setting of the
   [1727]$$rreeaallnnaammee variable.

3.235. rfc2047_parameters

   Type: boolean
   Default: no

   When this variable is _s_e_t, Mutt will decode RFC2047-encoded MIME
   parameters. You want to set this variable when mutt suggests you to
   save attachments to files named like:
=?iso-8859-1?Q?file=5F=E4=5F991116=2Ezip?=

   When this variable is _s_e_t interactively, the change won't be active
   until you change folders.

   Note that this use of RFC2047's encoding is explicitly prohibited by
   the standard, but nevertheless encountered in the wild.

   Also note that setting this parameter will _n_o_t have the effect that
   mutt _g_e_n_e_r_a_t_e_s this kind of encoding. Instead, mutt will
   unconditionally use the encoding specified in RFC2231.

3.236. save_address

   Type: boolean
   Default: no

   If _s_e_t, mutt will take the sender's full address when choosing a
   default folder for saving a mail. If [1728]$$ssaavvee__nnaammee or
   [1729]$$ffoorrccee__nnaammee is _s_e_t too, the selection of the Fcc folder will be
   changed as well.

3.237. save_empty

   Type: boolean
   Default: yes

   When _u_n_s_e_t, mailboxes which contain no saved messages will be removed
   when closed (the exception is [1730]$$ssppoooollffiillee which is never removed).
   If _s_e_t, mailboxes are never removed.

   _N_o_t_e_: This only applies to mbox and MMDF folders, Mutt does not delete
   MH and Maildir directories.

3.238. save_history

   Type: number
   Default: 0

   This variable controls the size of the history (per category) saved in
   the [1731]$$hhiissttoorryy__ffiillee file.

3.239. save_name

   Type: boolean
   Default: no

   This variable controls how copies of outgoing messages are saved. When
   _s_e_t, a check is made to see if a mailbox specified by the recipient
   address exists (this is done by searching for a mailbox in the
   [1732]$$ffoollddeerr directory with the _u_s_e_r_n_a_m_e part of the recipient
   address). If the mailbox exists, the outgoing message will be saved to
   that mailbox, otherwise the message is saved to the [1733]$$rreeccoorrdd
   mailbox.

   Also see the [1734]$$ffoorrccee__nnaammee variable.

3.240. score

   Type: boolean
   Default: yes

   When this variable is _u_n_s_e_t, scoring is turned off. This can be useful
   to selectively disable scoring for certain folders when the
   [1735]$$ssccoorree__tthhrreesshhoolldd__ddeelleettee variable and related are used.

3.241. score_threshold_delete

   Type: number
   Default: -1

   Messages which have been assigned a score equal to or lower than the
   value of this variable are automatically marked for deletion by mutt.
   Since mutt scores are always greater than or equal to zero, the default
   setting of this variable will never mark a message for deletion.

3.242. score_threshold_flag

   Type: number
   Default: 9999

   Messages which have been assigned a score greater than or equal to this
   variable's value are automatically marked "flagged".

3.243. score_threshold_read

   Type: number
   Default: -1

   Messages which have been assigned a score equal to or lower than the
   value of this variable are automatically marked as read by mutt. Since
   mutt scores are always greater than or equal to zero, the default
   setting of this variable will never mark a message read.

3.244. search_context

   Type: number
   Default: 0

   For the pager, this variable specifies the number of lines shown before
   search results. By default, search results will be top-aligned.

3.245. send_charset

   Type: string
   Default: "us-ascii:iso-8859-1:utf-8"

   A colon-delimited list of character sets for outgoing messages. Mutt
   will use the first character set into which the text can be converted
   exactly. If your [1736]$$cchhaarrsseett is not "iso-8859-1" and recipients may
   not understand "UTF-8", it is advisable to include in the list an
   appropriate widely used standard character set (such as "iso-8859-2",
   "koi8-r" or "iso-2022-jp") either instead of or after "iso-8859-1".

   In case the text cannot be converted into one of these exactly, mutt
   uses [1737]$$cchhaarrsseett as a fallback.

3.246. sendmail

   Type: path
   Default: "/usr/sbin/sendmail -oem -oi"

   Specifies the program and arguments used to deliver mail sent by Mutt.
   Mutt expects that the specified program interprets additional arguments
   as recipient addresses.

3.247. sendmail_wait

   Type: number
   Default: 0

   Specifies the number of seconds to wait for the [1738]$$sseennddmmaaiill process
   to finish before giving up and putting delivery in the background.

   Mutt interprets the value of this variable as follows:
   >0 number of seconds to wait for sendmail to finish before continuing
   0  wait forever for sendmail to finish
   <0 always put sendmail in the background without waiting

   Note that if you specify a value other than 0, the output of the child
   process will be put in a temporary file. If there is some error, you
   will be informed as to where to find the output.

3.248. shell

   Type: path
   Default: (empty)

   Command to use when spawning a subshell. By default, the user's login
   shell from /etc/passwd is used.

3.249. sidebar_delim_chars

   Type: string
   Default: "/."

   This contains the list of characters which you would like to treat as
   folder separators for displaying paths in the sidebar.

   Local mail is often arranged in directories: `dir1/dir2/mailbox'.
set sidebar_delim_chars='/'

   IMAP mailboxes are often named: `folder1.folder2.mailbox'.
set sidebar_delim_chars='.'

   _S_e_e_ _a_l_s_o_: [1739]$$ssiiddeebbaarr__sshhoorrtt__ppaatthh, [1740]$$ssiiddeebbaarr__ffoollddeerr__iinnddeenntt,
   [1741]$$ssiiddeebbaarr__iinnddeenntt__ssttrriinngg.

3.250. sidebar_divider_char

   Type: string
   Default: "|"

   This specifies the characters to be drawn between the sidebar (when
   visible) and the other Mutt panels. ASCII and Unicode line-drawing
   characters are supported.

3.251. sidebar_folder_indent

   Type: boolean
   Default: no

   Set this to indent mailboxes in the sidebar.

   _S_e_e_ _a_l_s_o_: [1742]$$ssiiddeebbaarr__sshhoorrtt__ppaatthh, [1743]$$ssiiddeebbaarr__iinnddeenntt__ssttrriinngg,
   [1744]$$ssiiddeebbaarr__ddeelliimm__cchhaarrss.

3.252. sidebar_format

   Type: string
   Default: "%B%*  %n"

   This variable allows you to customize the sidebar display. This string
   is similar to [1745]$$iinnddeexx__ffoorrmmaatt, but has its own set of
   printf(3)-like sequences:
   %B Name of the mailbox
   %S * Size of mailbox (total number of messages)
   %N * Number of New messages in the mailbox
   %n N if mailbox has new mail, blank otherwise
   %F * Number of Flagged messages in the mailbox
   %! "!" : one flagged message; "!!" : two flagged messages; "n!" : n
   flagged messages (for n > 2). Otherwise prints nothing.
   %d * @ Number of deleted messages
   %L * @ Number of messages after limiting
   %t * @ Number of tagged messages
   %>X right justify the rest of the string and pad with "X"
   %|X pad to the end of the line with "X"
   %*X soft-fill with character "X" as pad

   * = Can be optionally printed if nonzero @ = Only applicable to the
   current folder

   In order to use %S, %N, %F, and %!, [1746]$$mmaaiill__cchheecckk__ssttaattss must be
   _s_e_t. When thus set, a suggested value for this option is "%B%?F?
   [%F]?%* %?N?%N/?%S".

3.253. sidebar_indent_string

   Type: string
   Default: "  "

   This specifies the string that is used to indent mailboxes in the
   sidebar. It defaults to two spaces.

   _S_e_e_ _a_l_s_o_: [1747]$$ssiiddeebbaarr__sshhoorrtt__ppaatthh, [1748]$$ssiiddeebbaarr__ffoollddeerr__iinnddeenntt,
   [1749]$$ssiiddeebbaarr__ddeelliimm__cchhaarrss.

3.254. sidebar_new_mail_only

   Type: boolean
   Default: no

   When set, the sidebar will only display mailboxes containing new, or
   flagged, mail.

   _S_e_e_ _a_l_s_o_: [1750]ssiiddeebbaarr__wwhhiitteelliisstt.

3.255. sidebar_next_new_wrap

   Type: boolean
   Default: no

   When set, the <sidebar-next-new> command will not stop and the end of
   the list of mailboxes, but wrap around to the beginning. The
   <sidebar-prev-new> command is similarly affected, wrapping around to
   the end of the list.

3.256. sidebar_short_path

   Type: boolean
   Default: no

   By default the sidebar will show the mailbox's path, relative to the
   [1751]$$ffoollddeerr variable. Setting sidebar_shortpath=yes will shorten the
   names relative to the previous name. Here's an example:
   _s_h_o_r_t_p_a_t_h_=_n_o _s_h_o_r_t_p_a_t_h_=_y_e_s _s_h_o_r_t_p_a_t_h_=_y_e_s_,_ _f_o_l_d_e_r_i_n_d_e_n_t_=_y_e_s_,
   _i_n_d_e_n_t_s_t_r_=_"_._._"
   fruit fruit fruit
   fruit.apple apple ..apple
   fruit.banana banana ..banana
   fruit.cherry cherry ..cherry

   _S_e_e_ _a_l_s_o_: [1752]$$ssiiddeebbaarr__ddeelliimm__cchhaarrss, [1753]$$ssiiddeebbaarr__ffoollddeerr__iinnddeenntt,
   [1754]$$ssiiddeebbaarr__iinnddeenntt__ssttrriinngg.

3.257. sidebar_sort_method

   Type: sort order
   Default: order

   Specifies how to sort entries in the file browser. By default, the
   entries are sorted alphabetically. Valid values:
     * alpha (alphabetically)
     * count (all message count)
     * flagged (flagged message count)
     * new (new message count)
     * unsorted

   You may optionally use the "reverse-" prefix to specify reverse sorting
   order (example: "set sort_browser=reverse-date").

3.258. sidebar_visible

   Type: boolean
   Default: no

   This specifies whether or not to show sidebar. The sidebar shows a list
   of all your mailboxes.

   _S_e_e_ _a_l_s_o_: [1755]$$ssiiddeebbaarr__ffoorrmmaatt, [1756]$$ssiiddeebbaarr__wwiiddtthh

3.259. sidebar_width

   Type: number
   Default: 30

   This controls the width of the sidebar. It is measured in screen
   columns. For example: sidebar_width=20 could display 20 ASCII
   characters, or 10 Chinese characters.

3.260. sig_dashes

   Type: boolean
   Default: yes

   If _s_e_t, a line containing "-- " (note the trailing space) will be
   inserted before your [1757]$$ssiiggnnaattuurree. It is _s_t_r_o_n_g_l_y recommended that
   you not _u_n_s_e_t this variable unless your signature contains just your
   name. The reason for this is because many software packages use "-- \n"
   to detect your signature. For example, Mutt has the ability to
   highlight the signature in a different color in the built-in pager.

3.261. sig_on_top

   Type: boolean
   Default: no

   If _s_e_t, the signature will be included before any quoted or forwarded
   text. It is _s_t_r_o_n_g_l_y recommended that you do not set this variable
   unless you really know what you are doing, and are prepared to take
   some heat from netiquette guardians.

3.262. signature

   Type: path
   Default: "~/.signature"

   Specifies the filename of your signature, which is appended to all
   outgoing messages. If the filename ends with a pipe ("|"), it is
   assumed that filename is a shell command and input should be read from
   its standard output.

3.263. simple_search

   Type: string
   Default: "~f %s | ~s %s"

   Specifies how Mutt should expand a simple search into a real search
   pattern. A simple search is one that does not contain any of the "~"
   pattern operators. See "[1758]ppaatttteerrnnss" for more information on search
   patterns.

   For example, if you simply type "joe" at a search or limit prompt, Mutt
   will automatically expand it to the value specified by this variable by
   replacing "%s" with the supplied string. For the default value, "joe"
   would be expanded to: "~f joe | ~s joe".

3.264. sleep_time

   Type: number
   Default: 1

   Specifies time, in seconds, to pause while displaying certain
   informational messages, while moving from folder to folder and after
   expunging messages from the current folder. The default is to pause one
   second, so a value of zero for this option suppresses the pause.

3.265. smart_wrap

   Type: boolean
   Default: yes

   Controls the display of lines longer than the screen width in the
   internal pager. If _s_e_t, long lines are wrapped at a word boundary. If
   _u_n_s_e_t, lines are simply wrapped at the screen edge. Also see the
   [1759]$$mmaarrkkeerrss variable.

3.266. smileys

   Type: regular expression
   Default: "(>From )|(:[-^]?[][)(><}{|/DP])"

   The _p_a_g_e_r uses this variable to catch some common false positives of
   [1760]$$qquuoottee__rreeggeexxpp, most notably smileys and not consider a line
   quoted text if it also matches [1761]$$ssmmiilleeyyss. This mostly happens at
   the beginning of a line.

3.267. smime_ask_cert_label

   Type: boolean
   Default: yes

   This flag controls whether you want to be asked to enter a label for a
   certificate about to be added to the database or not. It is _s_e_t by
   default. (S/MIME only)

3.268. smime_ca_location

   Type: path
   Default: (empty)

   This variable contains the name of either a directory, or a file which
   contains trusted certificates for use with OpenSSL. (S/MIME only)

3.269. smime_certificates

   Type: path
   Default: (empty)

   Since for S/MIME there is no pubring/secring as with PGP, mutt has to
   handle storage and retrieval of keys by itself. This is very basic
   right now, and keys and certificates are stored in two different
   directories, both named as the hash-value retrieved from OpenSSL. There
   is an index file which contains mailbox-address keyid pairs, and which
   can be manually edited. This option points to the location of the
   certificates. (S/MIME only)

3.270. smime_decrypt_command

   Type: string
   Default: (empty)

   This format string specifies a command which is used to decrypt
   application/x-pkcs7-mime attachments.

   The OpenSSL command formats have their own set of printf(3)-like
   sequences similar to PGP's:
   %f Expands to the name of a file containing a message.
   %s Expands to the name of a file containing the signature part of a
   multipart/signed attachment when verifying it.
   %k The key-pair specified with [1762]$$ssmmiimmee__ddeeffaauulltt__kkeeyy
   %c One or more certificate IDs.
   %a The algorithm used for encryption.
   %d The message digest algorithm specified with
   [1763]$$ssmmiimmee__ssiiggnn__ddiiggeesstt__aallgg.
   %C CA location: Depending on whether [1764]$$ssmmiimmee__ccaa__llooccaattiioonn points to
   a directory or file, this expands to "-CApath [1765]$$ssmmiimmee__ccaa__llooccaattiioonn"
   or "-CAfile [1766]$$ssmmiimmee__ccaa__llooccaattiioonn".

   For examples on how to configure these formats, see the smime.rc in the
   samples/ subdirectory which has been installed on your system alongside
   the documentation. (S/MIME only)

3.271. smime_decrypt_use_default_key

   Type: boolean
   Default: yes

   If _s_e_t (default) this tells mutt to use the default key for decryption.
   Otherwise, if managing multiple certificate-key-pairs, mutt will try to
   use the mailbox-address to determine the key to use. It will ask you to
   supply a key, if it can't find one. (S/MIME only)

3.272. smime_default_key

   Type: string
   Default: (empty)

   This is the default key-pair to use for signing. This must be set to
   the keyid (the hash-value that OpenSSL generates) to work properly
   (S/MIME only)

3.273. smime_encrypt_command

   Type: string
   Default: (empty)

   This command is used to create encrypted S/MIME messages.

   This is a format string, see the [1767]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.274. smime_encrypt_with

   Type: string
   Default: "aes256"

   This sets the algorithm that should be used for encryption. Valid
   choices are "aes128", "aes192", "aes256", "des", "des3", "rc2-40",
   "rc2-64", "rc2-128". (S/MIME only)

3.275. smime_get_cert_command

   Type: string
   Default: (empty)

   This command is used to extract X509 certificates from a PKCS7
   structure.

   This is a format string, see the [1768]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.276. smime_get_cert_email_command

   Type: string
   Default: (empty)

   This command is used to extract the mail address(es) used for storing
   X509 certificates, and for verification purposes (to check whether the
   certificate was issued for the sender's mailbox).

   This is a format string, see the [1769]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.277. smime_get_signer_cert_command

   Type: string
   Default: (empty)

   This command is used to extract only the signers X509 certificate from
   a S/MIME signature, so that the certificate's owner may get compared to
   the email's "From:" field.

   This is a format string, see the [1770]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.278. smime_import_cert_command

   Type: string
   Default: (empty)

   This command is used to import a certificate via smime_keys.

   This is a format string, see the [1771]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.279. smime_is_default

   Type: boolean
   Default: no

   The default behavior of mutt is to use PGP on all auto-sign/encryption
   operations. To override and to use OpenSSL instead this must be _s_e_t.
   However, this has no effect while replying, since mutt will
   automatically select the same application that was used to sign/encrypt
   the original message. (Note that this variable can be overridden by
   unsetting [1772]$$ccrryypptt__aauuttoossmmiimmee.) (S/MIME only)

3.280. smime_keys

   Type: path
   Default: (empty)

   Since for S/MIME there is no pubring/secring as with PGP, mutt has to
   handle storage and retrieval of keys/certs by itself. This is very
   basic right now, and stores keys and certificates in two different
   directories, both named as the hash-value retrieved from OpenSSL. There
   is an index file which contains mailbox-address keyid pair, and which
   can be manually edited. This option points to the location of the
   private keys. (S/MIME only)

3.281. smime_pk7out_command

   Type: string
   Default: (empty)

   This command is used to extract PKCS7 structures of S/MIME signatures,
   in order to extract the public X509 certificate(s).

   This is a format string, see the [1773]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.282. smime_sign_command

   Type: string
   Default: (empty)

   This command is used to created S/MIME signatures of type
   multipart/signed, which can be read by all mail clients.

   This is a format string, see the [1774]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.283. smime_sign_digest_alg

   Type: string
   Default: "sha256"

   This sets the algorithm that should be used for the signature message
   digest. Valid choices are "md5", "sha1", "sha224", "sha256", "sha384",
   "sha512". (S/MIME only)

3.284. smime_sign_opaque_command

   Type: string
   Default: (empty)

   This command is used to created S/MIME signatures of type
   application/x-pkcs7-signature, which can only be handled by mail
   clients supporting the S/MIME extension.

   This is a format string, see the [1775]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.285. smime_timeout

   Type: number
   Default: 300

   The number of seconds after which a cached passphrase will expire if
   not used. (S/MIME only)

3.286. smime_verify_command

   Type: string
   Default: (empty)

   This command is used to verify S/MIME signatures of type
   multipart/signed.

   This is a format string, see the [1776]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.287. smime_verify_opaque_command

   Type: string
   Default: (empty)

   This command is used to verify S/MIME signatures of type
   application/x-pkcs7-mime.

   This is a format string, see the [1777]$$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command
   for possible printf(3)-like sequences. (S/MIME only)

3.288. smtp_authenticators

   Type: string
   Default: (empty)

   This is a colon-delimited list of authentication methods mutt may
   attempt to use to log in to an SMTP server, in the order mutt should
   try them. Authentication methods are any SASL mechanism, e.g.
   "digest-md5", "gssapi" or "cram-md5". This option is case-insensitive.
   If it is "unset" (the default) mutt will try all available methods, in
   order from most-secure to least-secure.

   Example:
set smtp_authenticators="digest-md5:cram-md5"

3.289. smtp_pass

   Type: string
   Default: (empty)

   Specifies the password for your SMTP account. If _u_n_s_e_t, Mutt will
   prompt you for your password when you first send mail via SMTP. See
   [1778]$$ssmmttpp__uurrll to configure mutt to send mail via SMTP.

   _W_a_r_n_i_n_g: you should only use this option when you are on a fairly
   secure machine, because the superuser can read your muttrc even if you
   are the only one who can read the file.

3.290. smtp_url

   Type: string
   Default: (empty)

   Defines the SMTP smarthost where sent messages should relayed for
   delivery. This should take the form of an SMTP URL, e.g.:
smtp[s]://[user[:pass]@]host[:port]

   where "[...]" denotes an optional part. Setting this variable overrides
   the value of the [1779]$$sseennddmmaaiill variable.

3.291. sort

   Type: sort order
   Default: date

   Specifies how to sort messages in the "index" menu. Valid values are:
     * date or date-sent
     * date-received
     * from
     * mailbox-order (unsorted)
     * score
     * size
     * spam
     * subject
     * threads
     * to

   You may optionally use the "reverse-" prefix to specify reverse sorting
   order (example: "set sort=reverse-date-sent").

3.292. sort_alias

   Type: sort order
   Default: alias

   Specifies how the entries in the "alias" menu are sorted. The following
   are legal values:
     * address (sort alphabetically by email address)
     * alias (sort alphabetically by alias name)
     * unsorted (leave in order specified in .muttrc)

3.293. sort_aux

   Type: sort order
   Default: date

   When sorting by threads, this variable controls how threads are sorted
   in relation to other threads, and how the branches of the thread trees
   are sorted. This can be set to any value that [1780]$$ssoorrtt can, except
   "threads" (in that case, mutt will just use "date-sent"). You can also
   specify the "last-" prefix in addition to the "reverse-" prefix, but
   "last-" must come after "reverse-". The "last-" prefix causes messages
   to be sorted against its siblings by which has the last descendant,
   using the rest of [1781]$$ssoorrtt__aauuxx as an ordering. For instance,
set sort_aux=last-date-received

   would mean that if a new message is received in a thread, that thread
   becomes the last one displayed (or the first, if you have "set
   sort=reverse-threads".)

   Note: For reversed [1782]$$ssoorrtt order [1783]$$ssoorrtt__aauuxx is reversed again
   (which is not the right thing to do, but kept to not break any existing
   configuration setting).

3.294. sort_browser

   Type: sort order
   Default: alpha

   Specifies how to sort entries in the file browser. By default, the
   entries are sorted alphabetically. Valid values:
     * alpha (alphabetically)
     * date
     * size
     * unsorted

   You may optionally use the "reverse-" prefix to specify reverse sorting
   order (example: "set sort_browser=reverse-date").

3.295. sort_re

   Type: boolean
   Default: yes

   This variable is only useful when sorting by threads with
   [1784]$$ssttrriicctt__tthhrreeaaddss _u_n_s_e_t. In that case, it changes the heuristic
   mutt uses to thread messages by subject. With [1785]$$ssoorrtt__rree _s_e_t, mutt
   will only attach a message as the child of another message by subject
   if the subject of the child message starts with a substring matching
   the setting of [1786]$$rreeppllyy__rreeggeexxpp. With [1787]$$ssoorrtt__rree _u_n_s_e_t, mutt
   will attach the message whether or not this is the case, as long as the
   non-[1788]$$rreeppllyy__rreeggeexxpp parts of both messages are identical.

3.296. spam_separator

   Type: string
   Default: ","

   This variable controls what happens when multiple spam headers are
   matched: if _u_n_s_e_t, each successive header will overwrite any previous
   matches value for the spam label. If _s_e_t, each successive match will
   append to the previous, using this variable's value as a separator.

3.297. spoolfile

   Type: path
   Default: (empty)

   If your spool mailbox is in a non-default place where Mutt cannot find
   it, you can specify its location with this variable. Mutt will
   initially set this variable to the value of the environment variable
   $MAIL or $MAILDIR if either is defined.

3.298. ssl_ca_certificates_file

   Type: path
   Default: (empty)

   This variable specifies a file containing trusted CA certificates. Any
   server certificate that is signed with one of these CA certificates is
   also automatically accepted.

   Example:
set ssl_ca_certificates_file=/etc/ssl/certs/ca-certificates.crt

3.299. ssl_client_cert

   Type: path
   Default: (empty)

   The file containing a client certificate and its associated private
   key.

3.300. ssl_force_tls

   Type: boolean
   Default: no

   If this variable is _s_e_t, Mutt will require that all connections to
   remote servers be encrypted. Furthermore it will attempt to negotiate
   TLS even if the server does not advertise the capability, since it
   would otherwise have to abort the connection anyway. This option
   supersedes [1789]$$ssssll__ssttaarrttttllss.

3.301. ssl_min_dh_prime_bits

   Type: number
   Default: 0

   This variable specifies the minimum acceptable prime size (in bits) for
   use in any Diffie-Hellman key exchange. A value of 0 will use the
   default from the GNUTLS library.

3.302. ssl_starttls

   Type: quadoption
   Default: yes

   If _s_e_t (the default), mutt will attempt to use STARTTLS on servers
   advertising the capability. When _u_n_s_e_t, mutt will not attempt to use
   STARTTLS regardless of the server's capabilities.

3.303. ssl_use_sslv2

   Type: boolean
   Default: no

   This variable specifies whether to attempt to use SSLv2 in the SSL
   authentication process. Note that SSLv2 and SSLv3 are now considered
   fundamentally insecure and are no longer recommended.

3.304. ssl_use_sslv3

   Type: boolean
   Default: no

   This variable specifies whether to attempt to use SSLv3 in the SSL
   authentication process. Note that SSLv2 and SSLv3 are now considered
   fundamentally insecure and are no longer recommended.

3.305. ssl_use_tlsv1

   Type: boolean
   Default: yes

   This variable specifies whether to attempt to use TLSv1.0 in the SSL
   authentication process.

3.306. ssl_use_tlsv1_1

   Type: boolean
   Default: yes

   This variable specifies whether to attempt to use TLSv1.1 in the SSL
   authentication process.

3.307. ssl_use_tlsv1_2

   Type: boolean
   Default: yes

   This variable specifies whether to attempt to use TLSv1.2 in the SSL
   authentication process.

3.308. ssl_usesystemcerts

   Type: boolean
   Default: yes

   If set to _y_e_s, mutt will use CA certificates in the system-wide
   certificate store when checking if a server certificate is signed by a
   trusted CA.

3.309. ssl_verify_dates

   Type: boolean
   Default: yes

   If _s_e_t (the default), mutt will not automatically accept a server
   certificate that is either not yet valid or already expired. You should
   only unset this for particular known hosts, using the
   [1790]<<aaccccoouunntt--hhooookk>> function.

3.310. ssl_verify_host

   Type: boolean
   Default: yes

   If _s_e_t (the default), mutt will not automatically accept a server
   certificate whose host name does not match the host used in your folder
   URL. You should only unset this for particular known hosts, using the
   [1791]<<aaccccoouunntt--hhooookk>> function.

3.311. ssl_ciphers

   Type: string
   Default: (empty)

   Contains a colon-seperated list of ciphers to use when using SSL. For
   OpenSSL, see ciphers(1) for the syntax of the string.

   For GnuTLS, this option will be used in place of "NORMAL" at the start
   of the priority string. See gnutls_priority_init(3) for the syntax and
   more details. (Note: GnuTLS version 2.1.7 or higher is required.)

3.312. status_chars

   Type: string
   Default: "-*%A"

   Controls the characters used by the "%r" indicator in
   [1792]$$ssttaattuuss__ffoorrmmaatt. The first character is used when the mailbox is
   unchanged. The second is used when the mailbox has been changed, and it
   needs to be resynchronized. The third is used if the mailbox is in
   read-only mode, or if the mailbox will not be written when exiting that
   mailbox (You can toggle whether to write changes to a mailbox with the
   <toggle-write> operation, bound by default to "%"). The fourth is used
   to indicate that the current folder has been opened in attach- message
   mode (Certain operations like composing a new mail, replying,
   forwarding, etc. are not permitted in this mode).

3.313. status_format

   Type: string
   Default: "-%r-Mutt: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d? Del
   :%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l? %l?]---(%s/%
   S)-%>-(%P)---"

   Controls the format of the status line displayed in the "index" menu.
   This string is similar to [1793]$$iinnddeexx__ffoorrmmaatt, but has its own set of
   printf(3)-like sequences:
   %b number of mailboxes with new mail *
   %d number of deleted messages *
   %f the full pathname of the current mailbox
   %F number of flagged messages *
   %h local hostname
   %l size (in bytes) of the current mailbox *
   %L size (in bytes) of the messages shown (i.e., which match the current
   limit) *
   %m the number of messages in the mailbox *
   %M the number of messages shown (i.e., which match the current limit) *
   %n number of new messages in the mailbox *
   %o number of old unread messages *
   %p number of postponed messages *
   %P percentage of the way through the index
   %r modified/read-only/won't-write/attach-message indicator, according
   to [1794]$$ssttaattuuss__cchhaarrss
   %s current sorting mode ([1795]$$ssoorrtt)
   %S current aux sorting method ([1796]$$ssoorrtt__aauuxx)
   %t number of tagged messages *
   %u number of unread messages *
   %v Mutt version string
   %V currently active limit pattern, if any *
   %>X right justify the rest of the string and pad with "X"
   %|X pad to the end of the line with "X"
   %*X soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the [1797]$$iinnddeexx__ffoorrmmaatt
   documentation.

   * = can be optionally printed if nonzero

   Some of the above sequences can be used to optionally print a string if
   their value is nonzero. For example, you may only want to see the
   number of flagged messages if such messages exist, since zero is not
   particularly meaningful. To optionally print a string based upon one of
   the above sequences, the following construct is used:

   %?<sequence_char>?<optional_string>?

   where _s_e_q_u_e_n_c_e___c_h_a_r is a character from the table above, and
   _o_p_t_i_o_n_a_l___s_t_r_i_n_g is the string you would like printed if _s_e_q_u_e_n_c_e___c_h_a_r
   is nonzero. _o_p_t_i_o_n_a_l___s_t_r_i_n_g _m_a_y contain other sequences as well as
   normal text, but you may _n_o_t nest optional strings.

   Here is an example illustrating how to optionally print the number of
   new messages in a mailbox:

   %?n?%n new messages.?

   You can also switch between two strings using the following construct:

   %?<sequence_char>?<if_string>&<else_string>?

   If the value of _s_e_q_u_e_n_c_e___c_h_a_r is non-zero, _i_f___s_t_r_i_n_g will be expanded,
   otherwise _e_l_s_e___s_t_r_i_n_g will be expanded.

   You can force the result of any printf(3)-like sequence to be lowercase
   by prefixing the sequence character with an underscore ("_") sign. For
   example, if you want to display the local hostname in lowercase, you
   would use: "%_h".

   If you prefix the sequence character with a colon (":") character, mutt
   will replace any dots in the expansion by underscores. This might be
   helpful with IMAP folders that don't like dots in folder names.

3.314. status_on_top

   Type: boolean
   Default: no

   Setting this variable causes the "status bar" to be displayed on the
   first line of the screen rather than near the bottom. If [1798]$$hheellpp is
   _s_e_t, too it'll be placed at the bottom.

3.315. strict_threads

   Type: boolean
   Default: no

   If _s_e_t, threading will only make use of the "In-Reply-To" and
   "References:" fields when you [1799]$$ssoorrtt by message threads. By
   default, messages with the same subject are grouped together in "pseudo
   threads.". This may not always be desirable, such as in a personal
   mailbox where you might have several unrelated messages with the
   subjects like "hi" which will get grouped together. See also
   [1800]$$ssoorrtt__rree for a less drastic way of controlling this behavior.

3.316. suspend

   Type: boolean
   Default: yes

   When _u_n_s_e_t, mutt won't stop when the user presses the terminal's _s_u_s_p
   key, usually "^Z". This is useful if you run mutt inside an xterm using
   a command like "xterm -e mutt".

3.317. text_flowed

   Type: boolean
   Default: no

   When _s_e_t, mutt will generate "format=flowed" bodies with a content type
   of "text/plain; format=flowed". This format is easier to handle for
   some mailing software, and generally just looks like ordinary text. To
   actually make use of this format's features, you'll need support in
   your editor.

   Note that [1801]$$iinnddeenntt__ssttrriinngg is ignored when this option is _s_e_t.

3.318. thorough_search

   Type: boolean
   Default: yes

   Affects the ~b and ~h search operations described in section
   "[1802]ppaatttteerrnnss". If _s_e_t, the headers and body/attachments of messages
   to be searched are decoded before searching. If _u_n_s_e_t, messages are
   searched as they appear in the folder.

   Users searching attachments or for non-ASCII characters should _s_e_t this
   value because decoding also includes MIME parsing/decoding and possible
   character set conversions. Otherwise mutt will attempt to match against
   the raw message received (for example quoted-printable encoded or with
   encoded headers) which may lead to incorrect search results.

3.319. thread_received

   Type: boolean
   Default: no

   When _s_e_t, mutt uses the date received rather than the date sent to
   thread messages by subject.

3.320. tilde

   Type: boolean
   Default: no

   When _s_e_t, the internal-pager will pad blank lines to the bottom of the
   screen with a tilde ("~").

3.321. time_inc

   Type: number
   Default: 0

   Along with [1803]$$rreeaadd__iinncc, [1804]$$wwrriittee__iinncc, and [1805]$$nneett__iinncc, this
   variable controls the frequency with which progress updates are
   displayed. It suppresses updates less than [1806]$$ttiimmee__iinncc milliseconds
   apart. This can improve throughput on systems with slow terminals, or
   when running mutt on a remote system.

   Also see the "[1807]ttuunniinngg" section of the manual for performance
   considerations.

3.322. timeout

   Type: number
   Default: 600

   When Mutt is waiting for user input either idling in menus or in an
   interactive prompt, Mutt would block until input is present. Depending
   on the context, this would prevent certain operations from working,
   like checking for new mail or keeping an IMAP connection alive.

   This variable controls how many seconds Mutt will at most wait until it
   aborts waiting for input, performs these operations and continues to
   wait for input.

   A value of zero or less will cause Mutt to never time out.

3.323. tmpdir

   Type: path
   Default: (empty)

   This variable allows you to specify where Mutt will place its temporary
   files needed for displaying and composing messages. If this variable is
   not set, the environment variable $TMPDIR is used. If $TMPDIR is not
   set then "/tmp" is used.

3.324. to_chars

   Type: string
   Default: " +TCFL"

   Controls the character used to indicate mail addressed to you. The
   first character is the one used when the mail is _n_o_t addressed to your
   address. The second is used when you are the only recipient of the
   message. The third is when your address appears in the "To:" header
   field, but you are not the only recipient of the message. The fourth
   character is used when your address is specified in the "Cc:" header
   field, but you are not the only recipient. The fifth character is used
   to indicate mail that was sent by _y_o_u. The sixth character is used to
   indicate when a mail was sent to a mailing-list you subscribe to.

3.325. trash

   Type: path
   Default: (empty)

   If set, this variable specifies the path of the trash folder where the
   mails marked for deletion will be moved, instead of being irremediably
   purged.

   NOTE: When you delete a message in the trash folder, it is really
   deleted, so that you have a way to clean the trash.

3.326. ts_icon_format

   Type: string
   Default: "M%?n?AIL&ail?"

   Controls the format of the icon title, as long as "[1808]$$ttss__eennaabblleedd"
   is set. This string is identical in formatting to the one used by
   "[1809]$$ssttaattuuss__ffoorrmmaatt".

3.327. ts_enabled

   Type: boolean
   Default: no

   Controls whether mutt tries to set the terminal status line and icon
   name. Most terminal emulators emulate the status line in the window
   title.

3.328. ts_status_format

   Type: string
   Default: "Mutt with %?m?%m messages&no messages?%?n? [%n NEW]?"

   Controls the format of the terminal status line (or window title),
   provided that "[1810]$$ttss__eennaabblleedd" has been set. This string is
   identical in formatting to the one used by "[1811]$$ssttaattuuss__ffoorrmmaatt".

3.329. tunnel

   Type: string
   Default: (empty)

   Setting this variable will cause mutt to open a pipe to a command
   instead of a raw socket. You may be able to use this to set up
   preauthenticated connections to your IMAP/POP3/SMTP server. Example:
set tunnel="ssh -q mailhost.net /usr/local/libexec/imapd"

   Note: For this example to work you must be able to log in to the remote
   machine without having to enter a password.

   When set, Mutt uses the tunnel for all remote connections. Please see
   "[1812]aaccccoouunntt--hhooookk" in the manual for how to use different tunnel
   commands per connection.

3.330. uncollapse_jump

   Type: boolean
   Default: no

   When _s_e_t, Mutt will jump to the next unread message, if any, when the
   current thread is _u_ncollapsed.

3.331. use_8bitmime

   Type: boolean
   Default: no

   _W_a_r_n_i_n_g_: do not set this variable unless you are using a version of
   sendmail which supports the -B8BITMIME flag (such as sendmail 8.8.x) or
   you may not be able to send mail.

   When _s_e_t, Mutt will invoke [1813]$$sseennddmmaaiill with the -B8BITMIME flag
   when sending 8-bit messages to enable ESMTP negotiation.

3.332. use_domain

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will qualify all local addresses (ones without the
   "@host" portion) with the value of [1814]$$hhoossttnnaammee. If _u_n_s_e_t, no
   addresses will be qualified.

3.333. use_envelope_from

   Type: boolean
   Default: no

   When _s_e_t, mutt will set the _e_n_v_e_l_o_p_e sender of the message. If
   [1815]$$eennvveellooppee__ffrroomm__aaddddrreessss is _s_e_t, it will be used as the sender
   address. If _u_n_s_e_t, mutt will attempt to derive the sender from the
   "From:" header.

   Note that this information is passed to sendmail command using the -f
   command line switch. Therefore setting this option is not useful if the
   [1816]$$sseennddmmaaiill variable already contains -f or if the executable
   pointed to by [1817]$$sseennddmmaaiill doesn't support the -f switch.

3.334. use_from

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will generate the "From:" header field when sending
   messages. If _u_n_s_e_t, no "From:" header field will be generated unless
   the user explicitly sets one using the "[1818]mmyy__hhddrr" command.

3.335. use_ipv6

   Type: boolean
   Default: yes

   When _s_e_t, Mutt will look for IPv6 addresses of hosts it tries to
   contact. If this option is _u_n_s_e_t, Mutt will restrict itself to IPv4
   addresses. Normally, the default should work.

3.336. user_agent

   Type: boolean
   Default: yes

   When _s_e_t, mutt will add a "User-Agent:" header to outgoing messages,
   indicating which version of mutt was used for composing them.

3.337. visual

   Type: path
   Default: (empty)

   Specifies the visual editor to invoke when the "~v" command is given in
   the built-in editor.

3.338. wait_key

   Type: boolean
   Default: yes

   Controls whether Mutt will ask you to press a key after an external
   command has been invoked by these functions: <shell-escape>,
   <pipe-message>, <pipe-entry>, <print-message>, and <print-entry>
   commands.

   It is also used when viewing attachments with "[1819]aauuttoo__vviieeww",
   provided that the corresponding mailcap entry has a _n_e_e_d_s_t_e_r_m_i_n_a_l flag,
   and the external program is interactive.

   When _s_e_t, Mutt will always ask for a key. When _u_n_s_e_t, Mutt will wait
   for a key only if the external command returned a non-zero status.

3.339. weed

   Type: boolean
   Default: yes

   When _s_e_t, mutt will weed headers when displaying, forwarding, printing,
   or replying to messages.

3.340. wrap

   Type: number
   Default: 0

   When set to a positive value, mutt will wrap text at [1820]$$wwrraapp
   characters. When set to a negative value, mutt will wrap text so that
   there are [1821]$$wwrraapp characters of empty space on the right side of
   the terminal. Setting it to zero makes mutt wrap at the terminal width.

   Also see [1822]$$rreeffllooww__wwrraapp.

3.341. wrap_headers

   Type: number
   Default: 78

   This option specifies the number of characters to use for wrapping an
   outgoing message's headers. Allowed values are between 78 and 998
   inclusive.

   _N_o_t_e_: This option usually shouldn't be changed. RFC5233 recommends a
   line length of 78 (the default), so _p_l_e_a_s_e_ _o_n_l_y_ _c_h_a_n_g_e_ _t_h_i_s_ _s_e_t_t_i_n_g
   _w_h_e_n_ _y_o_u_ _k_n_o_w_ _w_h_a_t_ _y_o_u_'_r_e_ _d_o_i_n_g.

3.342. wrap_search

   Type: boolean
   Default: yes

   Controls whether searches wrap around the end.

   When _s_e_t, searches will wrap around the first (or last) item. When
   _u_n_s_e_t, incremental searches will not wrap.

3.343. wrapmargin

   Type: number
   Default: 0

   (DEPRECATED) Equivalent to setting [1823]$$wwrraapp with a negative value.

3.344. write_bcc

   Type: boolean
   Default: yes

   Controls whether mutt writes out the "Bcc:" header when preparing
   messages to be sent. Exim users may wish to unset this. If mutt is set
   to deliver directly via SMTP (see [1824]$$ssmmttpp__uurrll), this option does
   nothing: mutt will never write out the "Bcc:" header in this case.

3.345. write_inc

   Type: number
   Default: 10

   When writing a mailbox, a message will be printed every
   [1825]$$wwrriittee__iinncc messages to indicate progress. If set to 0, only a
   single message will be displayed before writing a mailbox.

   Also see the [1826]$$rreeaadd__iinncc, [1827]$$nneett__iinncc and [1828]$$ttiimmee__iinncc
   variables and the "[1829]ttuunniinngg" section of the manual for performance
   considerations.

4. Functions

   The following is the list of available functions listed by the mapping
   in which they are available. The default key setting is given, and an
   explanation of what the function does. The key bindings of these
   functions can be changed with the [1830]bbiinndd command.

4.1. Generic Menu

   The _g_e_n_e_r_i_c menu is not a real menu, but specifies common functions
   (such as movement) available in all menus except for _p_a_g_e_r and _e_d_i_t_o_r.
   Changing settings for this menu will affect the default bindings for
   all menus (except as noted).

   _T_a_b_l_e_ _9_._2_._ _D_e_f_a_u_l_t_ _G_e_n_e_r_i_c_ _M_e_n_u_ _B_i_n_d_i_n_g_s
       Function      Default key                  Description
   <top-page>        H            move to the top of the page
   <next-entry>      j            move to the next entry
   <previous-entry>  k            move to the previous entry
   <bottom-page>     L            move to the bottom of the page
   <refresh>         ^L           clear and redraw the screen
   <middle-page>     M            move to the middle of the page
   <search-next>     n            search for next match
   <exit>            q            exit this menu
   <tag-entry>       t            tag the current entry
   <next-page>       z            move to the next page
   <previous-page>   Z            move to the previous page
   <last-entry>      *            move to the last entry
   <first-entry>     =            move to the first entry
   <enter-command>   :            enter a muttrc command
   <next-line>       >            scroll down one line
   <previous-line>   <            scroll up one line
   <half-up>         [            scroll up 1/2 page
   <half-down>       ]            scroll down 1/2 page
   <help>            ?            this screen
   <tag-prefix>      ;            apply next function to tagged messages
   <tag-prefix-cond>              apply next function ONLY to tagged messages
   <end-cond>                     end of conditional execution (noop)
   <shell-escape>    !            invoke a command in a subshell
   <select-entry>    MUTT_ENTER_S select the current entry
   <search>          /            search for a regular expression
   <search-reverse>  Esc /        search backwards for a regular expression
   <search-opposite>              search for next match in opposite direction
   <jump>                         jump to an index number
   <current-top>                  move entry to top of screen
   <current-middle>               move entry to middle of screen
   <current-bottom>               move entry to bottom of screen
   <what-key>                     display the keycode for a key press

4.2. Index Menu

   _T_a_b_l_e_ _9_._3_._ _D_e_f_a_u_l_t_ _I_n_d_e_x_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <create-alias> a create an alias from a message sender
   <bounce-message> b remail a message to another user
   <break-thread> # break the thread in two
   <change-folder> c open a different folder
   <change-folder-readonly> Esc c open a different folder in read only
   mode
   <next-unread-mailbox>   open next mailbox with new mail
   <collapse-thread> Esc v collapse/uncollapse current thread
   <collapse-all> Esc V collapse/uncollapse all threads
   <copy-message> C copy a message to a file/mailbox
   <decode-copy> Esc C make decoded (text/plain) copy
   <decode-save> Esc s make decoded copy (text/plain) and delete
   <delete-message> d delete the current entry
   <delete-pattern> D delete messages matching a pattern
   <delete-thread> ^D delete all messages in thread
   <delete-subthread> Esc d delete all messages in subthread
   <edit> e edit the raw message
   <edit-type> ^E edit attachment content type
   <forward-message> f forward a message with comments
   <flag-message> F toggle a message's 'important' flag
   <group-reply> g reply to all recipients
   <fetch-mail> G retrieve mail from POP server
   <imap-fetch-mail>   force retrieval of mail from IMAP server
   <imap-logout-all>   logout from all IMAP servers
   <display-toggle-weed> h display message and toggle header weeding
   <next-undeleted> j move to the next undeleted message
   <previous-undeleted> k move to the previous undeleted message
   <limit> l show only messages matching a pattern
   <link-threads> & link tagged message to the current one
   <list-reply> L reply to specified mailing list
   <mail> m compose a new mail message
   <toggle-new> N toggle a message's 'new' flag
   <toggle-write> % toggle whether the mailbox will be rewritten
   <next-thread> ^N jump to the next thread
   <next-subthread> Esc n jump to the next subthread
   <purge-message>   really delete the current entry, bypassing the trash
   folder
   <query> Q query external program for addresses
   <quit> q save changes to mailbox and quit
   <reply> r reply to a message
   <show-limit> Esc l show currently active limit pattern
   <sort-mailbox> o sort messages
   <sort-reverse> O sort messages in reverse order
   <print-message> p print the current entry
   <previous-thread> ^P jump to previous thread
   <previous-subthread> Esc p jump to previous subthread
   <recall-message> R recall a postponed message
   <read-thread> ^R mark the current thread as read
   <read-subthread> Esc r mark the current subthread as read
   <resend-message> Esc e use the current message as a template for a new
   one
   <save-message> s save message/attachment to a mailbox/file
   <tag-pattern> T tag messages matching a pattern
   <tag-subthread>   tag the current subthread
   <tag-thread> Esc t tag the current thread
   <untag-pattern> ^T untag messages matching a pattern
   <undelete-message> u undelete the current entry
   <undelete-pattern> U undelete messages matching a pattern
   <undelete-subthread> Esc u undelete all messages in subthread
   <undelete-thread> ^U undelete all messages in thread
   <view-attachments> v show MIME attachments
   <show-version> V show the Mutt version number and date
   <set-flag> w set a status flag on a message
   <clear-flag> W clear a status flag from a message
   <display-message> MUTT_ENTER_S display a message
   <buffy-list> . list mailboxes with new mail
   <sync-mailbox> $ save changes to mailbox
   <display-address> @ display full address of sender
   <pipe-message> | pipe message/attachment to a shell command
   <next-new>   jump to the next new message
   <next-new-then-unread> <Tab> jump to the next new or unread message
   <previous-new>   jump to the previous new message
   <previous-new-then-unread> Esc <Tab> jump to the previous new or unread
   message
   <next-unread>   jump to the next unread message
   <previous-unread>   jump to the previous unread message
   <parent-message> P jump to parent message in thread
   <extract-keys> ^K extract supported public keys
   <forget-passphrase> ^F wipe passphrase(s) from memory
   <check-traditional-pgp> Esc P check for classic PGP
   <mail-key> Esc k mail a PGP public key
   <decrypt-copy>   make decrypted copy
   <decrypt-save>   make decrypted copy and delete
   <sidebar-next>   move the highlight to next mailbox
   <sidebar-next-new>   move the highlight to next mailbox with new mail
   <sidebar-open>   open highlighted mailbox
   <sidebar-page-down>   scroll the sidebar down 1 page
   <sidebar-page-up>   scroll the sidebar up 1 page
   <sidebar-prev>   move the highlight to previous mailbox
   <sidebar-prev-new>   move the highlight to previous mailbox with new
   mail
   <sidebar-toggle-visible>   make the sidebar (in)visible

4.3. Pager Menu

   _T_a_b_l_e_ _9_._4_._ _D_e_f_a_u_l_t_ _P_a_g_e_r_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <break-thread> # break the thread in two
   <create-alias> a create an alias from a message sender
   <bounce-message> b remail a message to another user
   <change-folder> c open a different folder
   <change-folder-readonly> Esc c open a different folder in read only
   mode
   <next-unread-mailbox>   open next mailbox with new mail
   <copy-message> C copy a message to a file/mailbox
   <decode-copy> Esc C make decoded (text/plain) copy
   <delete-message> d delete the current entry
   <delete-thread> ^D delete all messages in thread
   <delete-subthread> Esc d delete all messages in subthread
   <set-flag> w set a status flag on a message
   <clear-flag> W clear a status flag from a message
   <edit> e edit the raw message
   <edit-type> ^E edit attachment content type
   <forward-message> f forward a message with comments
   <flag-message> F toggle a message's 'important' flag
   <group-reply> g reply to all recipients
   <imap-fetch-mail>   force retrieval of mail from IMAP server
   <imap-logout-all>   logout from all IMAP servers
   <display-toggle-weed> h display message and toggle header weeding
   <next-undeleted> j move to the next undeleted message
   <next-entry> J move to the next entry
   <previous-undeleted> k move to the previous undeleted message
   <previous-entry> K move to the previous entry
   <link-threads> & link tagged message to the current one
   <list-reply> L reply to specified mailing list
   <redraw-screen> ^L clear and redraw the screen
   <mail> m compose a new mail message
   <mark-as-new> N toggle a message's 'new' flag
   <search-next> n search for next match
   <next-thread> ^N jump to the next thread
   <next-subthread> Esc n jump to the next subthread
   <sort-mailbox> o sort messages
   <sort-reverse> O sort messages in reverse order
   <print-message> p print the current entry
   <previous-thread> ^P jump to previous thread
   <previous-subthread> Esc p jump to previous subthread
   <purge-message>   really delete the current entry, bypassing the trash
   folder
   <quit> Q save changes to mailbox and quit
   <exit> q exit this menu
   <reply> r reply to a message
   <recall-message> R recall a postponed message
   <read-thread> ^R mark the current thread as read
   <read-subthread> Esc r mark the current subthread as read
   <resend-message> Esc e use the current message as a template for a new
   one
   <save-message> s save message/attachment to a mailbox/file
   <skip-quoted> S skip beyond quoted text
   <decode-save> Esc s make decoded copy (text/plain) and delete
   <tag-message> t tag the current entry
   <toggle-quoted> T toggle display of quoted text
   <undelete-message> u undelete the current entry
   <undelete-subthread> Esc u undelete all messages in subthread
   <undelete-thread> ^U undelete all messages in thread
   <view-attachments> v show MIME attachments
   <show-version> V show the Mutt version number and date
   <search-toggle> \\ toggle search pattern coloring
   <display-address> @ display full address of sender
   <next-new>   jump to the next new message
   <pipe-message> | pipe message/attachment to a shell command
   <help> ? this screen
   <next-page> <Space> move to the next page
   <previous-page> - move to the previous page
   <top> ^ jump to the top of the message
   <sync-mailbox> $ save changes to mailbox
   <shell-escape> ! invoke a command in a subshell
   <enter-command> : enter a muttrc command
   <buffy-list> . list mailboxes with new mail
   <search> / search for a regular expression
   <search-reverse> Esc / search backwards for a regular expression
   <search-opposite>   search for next match in opposite direction
   <next-line> MUTT_ENTER_S scroll down one line
   <jump>   jump to an index number
   <next-unread>   jump to the next unread message
   <previous-new>   jump to the previous new message
   <previous-unread>   jump to the previous unread message
   <half-up>   scroll up 1/2 page
   <half-down>   scroll down 1/2 page
   <previous-line>   scroll up one line
   <bottom>   jump to the bottom of the message
   <parent-message> P jump to parent message in thread
   <check-traditional-pgp> Esc P check for classic PGP
   <mail-key> Esc k mail a PGP public key
   <extract-keys> ^K extract supported public keys
   <forget-passphrase> ^F wipe passphrase(s) from memory
   <decrypt-copy>   make decrypted copy
   <decrypt-save>   make decrypted copy and delete
   <what-key>   display the keycode for a key press
   <sidebar-next>   move the highlight to next mailbox
   <sidebar-next-new>   move the highlight to next mailbox with new mail
   <sidebar-open>   open highlighted mailbox
   <sidebar-page-down>   scroll the sidebar down 1 page
   <sidebar-page-up>   scroll the sidebar up 1 page
   <sidebar-prev>   move the highlight to previous mailbox
   <sidebar-prev-new>   move the highlight to previous mailbox with new
   mail
   <sidebar-toggle-visible>   make the sidebar (in)visible

4.4. Alias Menu

   _T_a_b_l_e_ _9_._5_._ _D_e_f_a_u_l_t_ _A_l_i_a_s_ _M_e_n_u_ _B_i_n_d_i_n_g_s
       Function     Default key        Description
   <delete-entry>   d           delete the current entry
   <undelete-entry> u           undelete the current entry

4.5. Query Menu

   _T_a_b_l_e_ _9_._6_._ _D_e_f_a_u_l_t_ _Q_u_e_r_y_ _M_e_n_u_ _B_i_n_d_i_n_g_s
      Function    Default key                 Description
   <create-alias> a           create an alias from a message sender
   <mail>         m           compose a new mail message
   <query>        Q           query external program for addresses
   <query-append> A           append new query results to current results

4.6. Attachment Menu

   _T_a_b_l_e_ _9_._7_._ _D_e_f_a_u_l_t_ _A_t_t_a_c_h_m_e_n_t_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <bounce-message> b remail a message to another user
   <display-toggle-weed> h display message and toggle header weeding
   <edit-type> ^E edit attachment content type
   <print-entry> p print the current entry
   <save-entry> s save message/attachment to a mailbox/file
   <pipe-entry> | pipe message/attachment to a shell command
   <view-mailcap> m force viewing of attachment using mailcap
   <reply> r reply to a message
   <resend-message> Esc e use the current message as a template for a new
   one
   <group-reply> g reply to all recipients
   <list-reply> L reply to specified mailing list
   <forward-message> f forward a message with comments
   <view-text> T view attachment as text
   <view-attach> MUTT_ENTER_S view attachment using mailcap entry if
   necessary
   <delete-entry> d delete the current entry
   <undelete-entry> u undelete the current entry
   <collapse-parts> v Toggle display of subparts
   <check-traditional-pgp> Esc P check for classic PGP
   <extract-keys> ^K extract supported public keys
   <forget-passphrase> ^F wipe passphrase(s) from memory

4.7. Compose Menu

   _T_a_b_l_e_ _9_._8_._ _D_e_f_a_u_l_t_ _C_o_m_p_o_s_e_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <attach-file> a attach file(s) to this message
   <attach-message> A attach message(s) to this message
   <edit-bcc> b edit the BCC list
   <edit-cc> c edit the CC list
   <copy-file> C save message/attachment to a mailbox/file
   <detach-file> D delete the current entry
   <toggle-disposition> ^D toggle disposition between inline/attachment
   <edit-description> d edit attachment description
   <edit-message> e edit the message
   <edit-headers> E edit the message with headers
   <edit-file> ^X e edit the file to be attached
   <edit-encoding> ^E edit attachment transfer-encoding
   <edit-from> Esc f edit the from field
   <edit-fcc> f enter a file to save a copy of this message in
   <filter-entry> F filter attachment through a shell command
   <get-attachment> G get a temporary copy of an attachment
   <display-toggle-weed> h display message and toggle header weeding
   <ispell> i run ispell on the message
   <print-entry> l print the current entry
   <edit-mime> m edit attachment using mailcap entry
   <new-mime> n compose new attachment using mailcap entry
   <postpone-message> P save this message to send later
   <edit-reply-to> r edit the Reply-To field
   <rename-file> R rename/move an attached file
   <edit-subject> s edit the subject of this message
   <edit-to> t edit the TO list
   <edit-type> ^T edit attachment content type
   <write-fcc> w write the message to a folder
   <toggle-unlink> u toggle whether to delete file after sending it
   <toggle-recode>   toggle recoding of this attachment
   <update-encoding> U update an attachment's encoding info
   <view-attach> MUTT_ENTER_S view attachment using mailcap entry if
   necessary
   <send-message> y send the message
   <pipe-entry> | pipe message/attachment to a shell command
   <attach-key> Esc k attach a PGP public key
   <pgp-menu> p show PGP options
   <forget-passphrase> ^F wipe passphrase(s) from memory
   <smime-menu> S show S/MIME options
   <mix> M send the message through a mixmaster remailer chain

4.8. Postpone Menu

   _T_a_b_l_e_ _9_._9_._ _D_e_f_a_u_l_t_ _P_o_s_t_p_o_n_e_ _M_e_n_u_ _B_i_n_d_i_n_g_s
       Function     Default key        Description
   <delete-entry>   d           delete the current entry
   <undelete-entry> u           undelete the current entry

4.9. Browser Menu

   _T_a_b_l_e_ _9_._1_0_._ _D_e_f_a_u_l_t_ _B_r_o_w_s_e_r_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <change-dir> c change directories
   <display-filename> @ display the currently selected file's name
   <enter-mask> m enter a file mask
   <sort> o sort messages
   <sort-reverse> O sort messages in reverse order
   <select-new> N select a new file in this directory
   <check-new>   check mailboxes for new mail
   <toggle-mailboxes> <Tab> toggle whether to browse mailboxes or all
   files
   <view-file> <Space> view file
   <buffy-list> . list mailboxes with new mail
   <create-mailbox> C create a new mailbox (IMAP only)
   <delete-mailbox> d delete the current mailbox (IMAP only)
   <rename-mailbox> r rename the current mailbox (IMAP only)
   <subscribe> s subscribe to current mailbox (IMAP only)
   <unsubscribe> u unsubscribe from current mailbox (IMAP only)
   <toggle-subscribed> T toggle view all/subscribed mailboxes (IMAP only)

4.10. Pgp Menu

   _T_a_b_l_e_ _9_._1_1_._ _D_e_f_a_u_l_t_ _P_g_p_ _M_e_n_u_ _B_i_n_d_i_n_g_s
     Function   Default key       Description
   <verify-key> c           verify a PGP public key
   <view-name>  %           view the key's user id

4.11. Smime Menu

   _T_a_b_l_e_ _9_._1_2_._ _D_e_f_a_u_l_t_ _S_m_i_m_e_ _M_e_n_u_ _B_i_n_d_i_n_g_s
     Function   Default key       Description
   <verify-key> c           verify a PGP public key
   <view-name>  %           view the key's user id

4.12. Mixmaster Menu

   _T_a_b_l_e_ _9_._1_3_._ _D_e_f_a_u_l_t_ _M_i_x_m_a_s_t_e_r_ _M_e_n_u_ _B_i_n_d_i_n_g_s
     Function   Default key                Description
   <accept>     MUTT_ENTER_S accept the chain constructed
   <append>     a            append a remailer to the chain
   <insert>     i            insert a remailer into the chain
   <delete>     d            delete a remailer from the chain
   <chain-prev> <Left>       select the previous element of the chain
   <chain-next> <Right>      select the next element of the chain

4.13. Editor Menu

   _T_a_b_l_e_ _9_._1_4_._ _D_e_f_a_u_l_t_ _E_d_i_t_o_r_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <bol> ^A jump to the beginning of the line
   <backward-char> ^B move the cursor one character to the left
   <backward-word> Esc b move the cursor to the beginning of the word
   <capitalize-word> Esc c capitalize the word
   <downcase-word> Esc l convert the word to lower case
   <upcase-word> Esc u convert the word to upper case
   <delete-char> ^D delete the char under the cursor
   <eol> ^E jump to the end of the line
   <forward-char> ^F move the cursor one character to the right
   <forward-word> Esc f move the cursor to the end of the word
   <backspace> <Backspace> delete the char in front of the cursor
   <kill-eol> ^K delete chars from cursor to end of line
   <kill-eow> Esc d delete chars from the cursor to the end of the word
   <kill-line> ^U delete all chars on the line
   <quote-char> ^V quote the next typed key
   <kill-word> ^W delete the word in front of the cursor
   <complete> <Tab> complete filename or alias
   <complete-query> ^T complete address with query
   <buffy-cycle> <Space> cycle among incoming mailboxes
   <history-up>   scroll up through the history list
   <history-down>   scroll down through the history list
   <transpose-chars>   transpose character under cursor with previous

Chapter 10. Miscellany

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   [1831]11..  AAcckknnoowwlleeddggeemmeennttss
   [1832]22..  AAbboouutt  TThhiiss  DDooccuummeenntt

1. Acknowledgements

   Kari Hurtta <[1833]kkaarrii..hhuurrttttaa@@ffmmii..ffii> co-developed the original MIME
   parsing code back in the ELM-ME days.

   The following people have been very helpful to the development of Mutt:
     * Vikas Agnihotri <[1834]vviikkaassaa@@wwrriitteemmee..ccoomm>
     * Francois Berjon <[1835]FFrraannccooiiss..BBeerrjjoonn@@aaaarr..aallccaatteell--aallsstthhoomm..ffrr>
     * Aric Blumer <[1836]aarriicc@@ffoorree..ccoomm>
     * John Capo <[1837]jjcc@@iirrbbss..ccoomm>
     * David Champion <[1838]ddggcc@@uucchhiiccaaggoo..eedduu>
     * Brendan Cully <[1839]bbrreennddaann@@kkuubbllaaii..ccoomm>
     * Liviu Daia <[1840]ddaaiiaa@@ssttooiillooww..iimmaarr..rroo>
     * Thomas E. Dickey <[1841]ddiicckkeeyy@@hheerrnnddoonn44..hhiiss..ccoomm>
     * David DeSimone <[1842]ffooxx@@ccoonnvveexx..hhpp..ccoomm>
     * Nickolay N. Dudorov <[1843]nnnndd@@wwiinntt..iittffss..nnsskk..ssuu>
     * Ruslan Ermilov <[1844]rruu@@ffrreeeebbssdd..oorrgg>
     * Edmund Grimley Evans <[1845]eeddmmuunnddoo@@rraannoo..oorrgg>
     * Michael Finken <[1846]ffiinnkkeenn@@ccoonnwwaarree..ddee>
     * Sven Guckes <[1847]gguucckkeess@@mmaatthh..ffuu--bbeerrlliinn..ddee>
     * Lars Hecking <[1848]llhheecckkiinngg@@nnmmrrcc..iiee>
     * Mark Holloman <[1849]hhoolllloommaann@@nnaannddoo..nneett>
     * Andreas Holzmann <[1850]hhoollzzmmaannnn@@ffmmii..uunnii--ppaassssaauu..ddee>
     * Marco d'Itri <[1851]mmdd@@lliinnuuxx..iitt>
     * Bjoern Jacke <[1852]bbjjaacckkee@@ssuussee..ccoomm>
     * Byrial Jensen <[1853]bbyyrriiaall@@iimmaaggee..ddkk>
     * David Jeske <[1854]jjeesskkee@@iiggccoomm..nneett>
     * Christophe Kalt <[1855]kkaalltt@@hhuuggoo..iinntt--eevvrryy..ffrr>
     * Tommi Komulainen <[1856]TToommmmii..KKoommuullaaiinneenn@@iikkii..ffii>
     * Felix von Leitner (a.k.a "Fefe") <[1857]lleeiittnneerr@@mmaatthh..ffuu--bbeerrlliinn..ddee>
     * Brandon Long <[1858]bblloonngg@@ffiiccttiioonn..nneett>
     * Jimmy Maekelae <[1859]jjmmyy@@ffllaasshhbbaacckk..nneett>
     * Lars Marowsky-Bree <[1860]llmmbb@@ppooiinntteerr..iinn--mmiinnddeenn..ddee>
     * Thomas "Mike" Michlmayr <[1861]mmiikkee@@ccoossyy..ssbbgg..aacc..aatt>
     * Andrew W. Nosenko <[1862]aawwnn@@bbccss..zzpp..uuaa>
     * David O'Brien <[1863]oobbrriieenn@@NNuuxxii..ccss..uuccddaavviiss..eedduu>
     * Clint Olsen <[1864]oollsseenncc@@iicchhiippss..iinntteell..ccoomm>
     * Park Myeong Seok <[1865]ppmmss@@rroommaannccee..kkaaiisstt..aacc..kkrr>
     * Thomas Parmelan <[1866]ttoomm@@aannkkhh..ffrr..eeuu..oorrgg>
     * Ollivier Robert <[1867]rroobbeerrttoo@@kkeellttiiaa..ffrreeeenniixx..ffrr>
     * Thomas Roessler <[1868]rrooeesssslleerr@@ddooeess--nnoott--eexxiisstt..oorrgg>
     * Roland Rosenfeld <[1869]rroollaanndd@@ssppiinnnnaakkeerr..ddee>
     * Rocco Rutte <[1870]ppddmmeeff@@ggmmxx..nneett>
     * TAKIZAWA Takashi <[1871]ttaakkii@@lluunnaa..eemmaaiill..nnee..jjpp>
     * Allain Thivillon <[1872]AAllllaaiinn..TThhiivviilllloonn@@aallmmaa..ffrr>
     * Gero Treuner <[1873]ggeerroo@@7700tt..ddee>
     * Vsevolod Volkov <[1874]vvvvvv@@lluucckkyy..nneett>
     * Ken Weinert <[1875]kkeennww@@iihhss..ccoomm>

2. About This Document

   This document was written in [1876]DDooccBBooookk, and then rendered using the
   [1877]GGnnoommee  XXSSLLTT  ttoooollkkiitt.
